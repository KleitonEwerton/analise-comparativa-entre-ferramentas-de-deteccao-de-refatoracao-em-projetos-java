Hash,Refatoração,Descrição
eb6b3c4ff2094b9f22523482031f81276e0a892d,MOVE_CLASS, Move Class Move Class	Edge moved to AStar_GridHeuristic.Edge
eb6b3c4ff2094b9f22523482031f81276e0a892d,MOVE_CLASS, Move Class Move Class	Edge moved to BreadthFirstSearchAdjacencyListIterative.Edge
eb6b3c4ff2094b9f22523482031f81276e0a892d,MOVE_CLASS, Move Class Move Class	Edge moved to BreadthFirstSearchAdjacencyListIterativeFastQueue.Edge
eb6b3c4ff2094b9f22523482031f81276e0a892d,MOVE_CLASS, Move Class Move Class	Edge moved to ConnectedComponentsAdjacencyList.Edge
eb6b3c4ff2094b9f22523482031f81276e0a892d,MOVE_CLASS, Move Class Move Class	Edge moved to DepthFirstSearchAdjacencyListIterative.Edge
eb6b3c4ff2094b9f22523482031f81276e0a892d,MOVE_CLASS, Move Class Move Class	Edge moved to DepthFirstSearchAdjacencyListIterativeFastStack.Edge
eb6b3c4ff2094b9f22523482031f81276e0a892d,MOVE_CLASS, Move Class Move Class	Edge moved to DepthFirstSearchAdjacencyListRecursive.Edge
eb6b3c4ff2094b9f22523482031f81276e0a892d,MOVE_CLASS, Move Class Move Class	Edge moved to DijkstrasShortestPathAllNodesAdjacencyList.Edge
eb6b3c4ff2094b9f22523482031f81276e0a892d,MOVE_CLASS, Move Class Move Class	Edge moved to EagerPrimsAdjacencyList.Edge
eb6b3c4ff2094b9f22523482031f81276e0a892d,MOVE_CLASS, Move Class Move Class	Edge moved to GraphDiameter.Edge
eb6b3c4ff2094b9f22523482031f81276e0a892d,MOVE_CLASS, Move Class Move Class	UnionFind moved to KruskalsEdgeList.UnionFind
eb6b3c4ff2094b9f22523482031f81276e0a892d,MOVE_CLASS, Move Class Move Class	Edge moved to KruskalsEdgeList.Edge
eb6b3c4ff2094b9f22523482031f81276e0a892d,MOVE_CLASS, Move Class Move Class	Edge moved to LazyPrimsAdjacencyList.Edge
eb6b3c4ff2094b9f22523482031f81276e0a892d,MOVE_CLASS, Move Class Move Class	Edge moved to LazyPrimsAdjacencyMatrix.Edge
eb6b3c4ff2094b9f22523482031f81276e0a892d,MOVE_CLASS, Move Class Move Class	Edge moved to BipartiteGraphCheckAdjacencyList.Edge
eb6b3c4ff2094b9f22523482031f81276e0a892d,MOVE_CLASS, Move Class Move Class	Edge moved to TarjanAdjacencyList.Edge
eb6b3c4ff2094b9f22523482031f81276e0a892d,MOVE_CLASS, Move Class Move Class	Tarjan moved to TarjanAdjacencyList.Tarjan
eb6b3c4ff2094b9f22523482031f81276e0a892d,MOVE_CLASS, Move Class Move Class	Tarjan moved to TarjanAdjacencyMatrix.Tarjan
eb6b3c4ff2094b9f22523482031f81276e0a892d,MOVE_CLASS, Move Class Move Class	TreeNode moved to TreeCanonicalFormAdjacencyList.TreeNode
eb6b3c4ff2094b9f22523482031f81276e0a892d,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	public to package in class TreeCenter
eb6b3c4ff2094b9f22523482031f81276e0a892d,ADD_CLASS_MODIFIER, Add Class Modifier Add Class Modifier	static in class AStar_GridHeuristic.Edge
eb6b3c4ff2094b9f22523482031f81276e0a892d,ADD_CLASS_MODIFIER, Add Class Modifier Add Class Modifier	static in class BreadthFirstSearchAdjacencyListIterative.Edge
eb6b3c4ff2094b9f22523482031f81276e0a892d,ADD_CLASS_MODIFIER, Add Class Modifier Add Class Modifier	static in class BreadthFirstSearchAdjacencyListIterativeFastQueue.Edge
eb6b3c4ff2094b9f22523482031f81276e0a892d,ADD_CLASS_MODIFIER, Add Class Modifier Add Class Modifier	static in class ConnectedComponentsAdjacencyList.Edge
eb6b3c4ff2094b9f22523482031f81276e0a892d,ADD_CLASS_MODIFIER, Add Class Modifier Add Class Modifier	static in class DepthFirstSearchAdjacencyListIterative.Edge
eb6b3c4ff2094b9f22523482031f81276e0a892d,ADD_CLASS_MODIFIER, Add Class Modifier Add Class Modifier	static in class DepthFirstSearchAdjacencyListIterativeFastStack.Edge
eb6b3c4ff2094b9f22523482031f81276e0a892d,ADD_CLASS_MODIFIER, Add Class Modifier Add Class Modifier	static in class DepthFirstSearchAdjacencyListRecursive.Edge
eb6b3c4ff2094b9f22523482031f81276e0a892d,ADD_CLASS_MODIFIER, Add Class Modifier Add Class Modifier	static in class DijkstrasShortestPathAllNodesAdjacencyList.Edge
eb6b3c4ff2094b9f22523482031f81276e0a892d,ADD_CLASS_MODIFIER, Add Class Modifier Add Class Modifier	static in class EagerPrimsAdjacencyList.Edge
eb6b3c4ff2094b9f22523482031f81276e0a892d,ADD_CLASS_MODIFIER, Add Class Modifier Add Class Modifier	static in class GraphDiameter.Edge
eb6b3c4ff2094b9f22523482031f81276e0a892d,ADD_CLASS_MODIFIER, Add Class Modifier Add Class Modifier	static in class KruskalsEdgeList.UnionFind
eb6b3c4ff2094b9f22523482031f81276e0a892d,ADD_CLASS_MODIFIER, Add Class Modifier Add Class Modifier	static in class KruskalsEdgeList.Edge
eb6b3c4ff2094b9f22523482031f81276e0a892d,ADD_CLASS_MODIFIER, Add Class Modifier Add Class Modifier	static in class LazyPrimsAdjacencyList.Edge
eb6b3c4ff2094b9f22523482031f81276e0a892d,ADD_CLASS_MODIFIER, Add Class Modifier Add Class Modifier	static in class LazyPrimsAdjacencyMatrix.Edge
eb6b3c4ff2094b9f22523482031f81276e0a892d,ADD_CLASS_MODIFIER, Add Class Modifier Add Class Modifier	static in class BipartiteGraphCheckAdjacencyList.Edge
eb6b3c4ff2094b9f22523482031f81276e0a892d,ADD_CLASS_MODIFIER, Add Class Modifier Add Class Modifier	static in class TarjanAdjacencyList.Edge
eb6b3c4ff2094b9f22523482031f81276e0a892d,ADD_CLASS_MODIFIER, Add Class Modifier Add Class Modifier	static in class TarjanAdjacencyList.Tarjan
eb6b3c4ff2094b9f22523482031f81276e0a892d,ADD_CLASS_MODIFIER, Add Class Modifier Add Class Modifier	static in class TarjanAdjacencyMatrix.Tarjan
eb6b3c4ff2094b9f22523482031f81276e0a892d,ADD_CLASS_MODIFIER, Add Class Modifier Add Class Modifier	static in class TreeCanonicalFormAdjacencyList.TreeNode
85795e3d8b040471e56667d3f7fc92c758a8e450,REMOVE_METHOD_MODIFIER, Remove Method Modifier Remove Method Modifier	static in method private printTable() : void from class com.williamfiset.algorithms.datastructures.sparsetable.SparseTable
ae13588a78a33ba3ec87cec5bb6cd086d629c2ae,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	int to void in method private buildTree(i int  tl int  tr int  values int[]) : void from class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
2c72e1beca70d41d9949df88fb780a1e8284c03d,EXTRACT_OPERATION, Extract Method Extract Method	private simpleIsomorphismTest() : void extracted from public main(args String[]) : void in class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphism
ca28385c6f10615e078e3de35da6c5a4be8a0690,RENAME_VARIABLE, Rename Variable Rename Variable	sz : int to numEdges : int in method private dfs(at int  next int[]  flow long) : long from class com.williamfiset.algorithms.graphtheory.networkflow.examples.DinicsExample.DinicsSolver
3410864adb184adc921eda4e194bd8721082ebe1,RENAME_METHOD, Rename Method Rename Method	private tsp(dist double[][]  start int) : void renamed to private solve() : void in class TspDynamicProgramming
3410864adb184adc921eda4e194bd8721082ebe1,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	tour : LinkedList<Integer> to tour : List<Integer> in class TspDynamicProgramming
3410864adb184adc921eda4e194bd8721082ebe1,RENAME_VARIABLE, Rename Variable Rename Variable	indexAdded : Integer[][] to prev : Integer[][] in method private solve() : void from class TspDynamicProgramming
3410864adb184adc921eda4e194bd8721082ebe1,REMOVE_PARAMETER, Remove Parameter Remove Parameter	dist : double[][] in method private tsp(dist double[][]  start int) : void from class TspDynamicProgramming
3410864adb184adc921eda4e194bd8721082ebe1,REMOVE_PARAMETER, Remove Parameter Remove Parameter	start : int in method private tsp(dist double[][]  start int) : void from class TspDynamicProgramming
3410864adb184adc921eda4e194bd8721082ebe1,RENAME_PARAMETER, Rename Parameter Rename Parameter	indexAdded : Integer[][] to prev : Integer[][] in method private tsp(i int  state int  memo Double[][]  prev Integer[][]) : double from class TspDynamicProgramming
3410864adb184adc921eda4e194bd8721082ebe1,REMOVE_PARAMETER, Remove Parameter Remove Parameter	dist : double[][] in method private tsp(i int  state int  dist double[][]  memo Double[][]  indexAdded Integer[][]  start int) : double from class TspDynamicProgramming
3410864adb184adc921eda4e194bd8721082ebe1,REMOVE_PARAMETER, Remove Parameter Remove Parameter	start : int in method private tsp(i int  state int  dist double[][]  memo Double[][]  indexAdded Integer[][]  start int) : double from class TspDynamicProgramming
3410864adb184adc921eda4e194bd8721082ebe1,REPLACE_VARIABLE_WITH_ATTRIBUTE, Replace Variable With Attribute Replace Variable With Attribute	dist : double[][] to distance : double[][] in method private tsp(i int  state int  memo Double[][]  prev Integer[][]) : double from class TspDynamicProgramming
3410864adb184adc921eda4e194bd8721082ebe1,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test(expected = IllegalStateException.class) in method public testNonSquareMatrix() : void from class TravelingSalesmanProblemTest
e89dbe6e0119b71d98d8c59ca034932ec4f15194,EXTRACT_OPERATION, Extract Method Extract Method	private example3() : void extracted from public main(args String[]) : void in class com.williamfiset.algorithms.dp.CoinChange
e89dbe6e0119b71d98d8c59ca034932ec4f15194,RENAME_PARAMETER, Rename Parameter Rename Parameter	amount : int to n : int in method public coinChangeSpaceEfficient(coins int[]  n int) : int from class com.williamfiset.algorithms.dp.CoinChange
e89dbe6e0119b71d98d8c59ca034932ec4f15194,ADD_PARAMETER_MODIFIER, Add Parameter Modifier Add Parameter Modifier	final in parameter n : int in method public coinChange(coins int[]  n int) : Solution from class com.williamfiset.algorithms.dp.CoinChange
e89dbe6e0119b71d98d8c59ca034932ec4f15194,RENAME_PARAMETER, Rename Parameter Rename Parameter	amount : int to n : int in method public coinChange(coins int[]  n int) : Solution from class com.williamfiset.algorithms.dp.CoinChange
e89dbe6e0119b71d98d8c59ca034932ec4f15194,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	int to Solution in method public coinChange(coins int[]  n int) : Solution from class com.williamfiset.algorithms.dp.CoinChange
e89dbe6e0119b71d98d8c59ca034932ec4f15194,RENAME_PARAMETER, Rename Parameter Rename Parameter	amount : int to n : int in method public coinChangeRecursive(coins int[]  n int) : int from class com.williamfiset.algorithms.dp.CoinChange
e89dbe6e0119b71d98d8c59ca034932ec4f15194,RENAME_PARAMETER, Rename Parameter Rename Parameter	amount : int to n : int in method private coinChangeRecursive(n int  coins int[]  dp int[]) : int from class com.williamfiset.algorithms.dp.CoinChange
69d4040a89fb5bc14b983dbbe9127c9977ba9861,INLINE_VARIABLE, Inline Variable Inline Variable	neighbors : List<Integer> in method public canonizeTree(graph List<List<Integer>>) : String from class com.williamfiset.algorithms.graphtheory.TreeCanonicalFormAdjacencyList2
69d4040a89fb5bc14b983dbbe9127c9977ba9861,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	parent : TreeNode to p : Integer in method public canonizeTree(graph List<List<Integer>>) : String from class com.williamfiset.algorithms.graphtheory.TreeCanonicalFormAdjacencyList2
69d4040a89fb5bc14b983dbbe9127c9977ba9861,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	newLeafs : List<TreeNode> to newLeafs : List<Integer> in method public canonizeTree(graph List<List<Integer>>) : String from class com.williamfiset.algorithms.graphtheory.TreeCanonicalFormAdjacencyList2
69d4040a89fb5bc14b983dbbe9127c9977ba9861,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	leaf : TreeNode to leaf : Integer in method public canonizeTree(graph List<List<Integer>>) : String from class com.williamfiset.algorithms.graphtheory.TreeCanonicalFormAdjacencyList2
69d4040a89fb5bc14b983dbbe9127c9977ba9861,RENAME_VARIABLE, Rename Variable Rename Variable	parent : TreeNode to p : Integer in method public canonizeTree(graph List<List<Integer>>) : String from class com.williamfiset.algorithms.graphtheory.TreeCanonicalFormAdjacencyList2
69d4040a89fb5bc14b983dbbe9127c9977ba9861,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	tree : TreeNode[] to tree : List<List<Integer>> in method public main(args String[]) : void from class com.williamfiset.algorithms.graphtheory.TreeCanonicalFormAdjacencyList2
c935ed292921f206b88d77b5c065cadaf9e78dcd,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private angleBetweenVectors(v1x double  v1y double  v2x double  v2y double) : double from class com.williamfiset.algorithms.geometry.CircularSegmentArea
c935ed292921f206b88d77b5c065cadaf9e78dcd,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	package to private in class com.williamfiset.algorithms.geometry.ConvexHullGrahamScan.PolarOrder
c935ed292921f206b88d77b5c065cadaf9e78dcd,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	package to private in class com.williamfiset.algorithms.geometry.ConvexHullGrahamScan.PointOrder
c935ed292921f206b88d77b5c065cadaf9e78dcd,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public createConvexHull(pts Point2D[]) : Stack<Point2D> from class com.williamfiset.algorithms.geometry.ConvexHullGrahamScan
c935ed292921f206b88d77b5c065cadaf9e78dcd,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private collinear(a Point2D  b Point2D  c Point2D) : int from class com.williamfiset.algorithms.geometry.ConvexHullGrahamScan
c935ed292921f206b88d77b5c065cadaf9e78dcd,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	public to private in method private collinear(a Point2D  b Point2D  c Point2D) : int from class com.williamfiset.algorithms.geometry.ConvexPolygonContainsPoint
c935ed292921f206b88d77b5c065cadaf9e78dcd,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	package to public in class com.williamfiset.algorithms.geometry.ConvexPolygonCutWithLineSegment.Pt
c935ed292921f206b88d77b5c065cadaf9e78dcd,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public cut(poly Pt[]  p1 Pt  p2 Pt) : Pt[] from class com.williamfiset.algorithms.geometry.ConvexPolygonCutWithLineSegment
c935ed292921f206b88d77b5c065cadaf9e78dcd,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private intersect(x1 double  y1 double  x2 double  y2 double  x3 double  y3 double  x4 double  y4 double) : Pt from class com.williamfiset.algorithms.geometry.ConvexPolygonCutWithLineSegment
c935ed292921f206b88d77b5c065cadaf9e78dcd,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private orientation(ax double  ay double  bx double  by double  cx double  cy double) : int from class com.williamfiset.algorithms.geometry.ConvexPolygonCutWithLineSegment
5ca128d85bbbca30c1c86bc64855a42086cb3774,RENAME_PARAMETER, Rename Parameter Rename Parameter	n : int to r : int in method public f(k int  r int) : int from class NarrowArtGalleryRecursive
5ca128d85bbbca30c1c86bc64855a42086cb3774,RENAME_PARAMETER, Rename Parameter Rename Parameter	n : int to r : int in method public f(k int  r int  c int) : int from class NarrowArtGalleryRecursive
46ef34d669197a67d530a28bc81eed0ba26401a9,MOVE_CLASS, Move Class Move Class	com.williamfiset.algorithms.graphtheory.FordFulkersonDFSAdjacencyList.Edge moved to com.williamfiset.algorithms.graphtheory.FordFulkersonDfsSolverAdjacencyList.Edge
46ef34d669197a67d530a28bc81eed0ba26401a9,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	private to public in class com.williamfiset.algorithms.graphtheory.FordFulkersonDfsSolverAdjacencyList.Edge
46ef34d669197a67d530a28bc81eed0ba26401a9,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	graph : List<Edge>[] to graph : List<List<Edge>> in method public addEdge(graph List<List<Edge>>  from int  to int  capacity int) : void from class com.williamfiset.algorithms.graphtheory.FordFulkersonDfsSolverAdjacencyList
46ef34d669197a67d530a28bc81eed0ba26401a9,MOVE_OPERATION, Move Method Move Method	public addEdge(graph List<Edge>[]  from int  to int  capacity int) : void from class com.williamfiset.algorithms.graphtheory.FordFulkersonDFSAdjacencyList to public addEdge(graph List<List<Edge>>  from int  to int  capacity int) : void from class com.williamfiset.algorithms.graphtheory.FordFulkersonDfsSolverAdjacencyList
46ef34d669197a67d530a28bc81eed0ba26401a9,REMOVE_PARAMETER, Remove Parameter Remove Parameter	graph : List<Edge>[] in method private dfs(graph List<Edge>[]  visited int[]  node int  sink int  flow int) : int from class com.williamfiset.algorithms.graphtheory.FordFulkersonDFSAdjacencyList
46ef34d669197a67d530a28bc81eed0ba26401a9,REMOVE_PARAMETER, Remove Parameter Remove Parameter	visited : int[] in method private dfs(graph List<Edge>[]  visited int[]  node int  sink int  flow int) : int from class com.williamfiset.algorithms.graphtheory.FordFulkersonDFSAdjacencyList
46ef34d669197a67d530a28bc81eed0ba26401a9,REMOVE_PARAMETER, Remove Parameter Remove Parameter	sink : int in method private dfs(graph List<Edge>[]  visited int[]  node int  sink int  flow int) : int from class com.williamfiset.algorithms.graphtheory.FordFulkersonDFSAdjacencyList
46ef34d669197a67d530a28bc81eed0ba26401a9,REMOVE_METHOD_MODIFIER, Remove Method Modifier Remove Method Modifier	static in method private dfs(graph List<Edge>[]  visited int[]  node int  sink int  flow int) : int from class com.williamfiset.algorithms.graphtheory.FordFulkersonDFSAdjacencyList
46ef34d669197a67d530a28bc81eed0ba26401a9,MOVE_OPERATION, Move Method Move Method	private dfs(graph List<Edge>[]  visited int[]  node int  sink int  flow int) : int from class com.williamfiset.algorithms.graphtheory.FordFulkersonDFSAdjacencyList to private dfs(node int  flow int) : int from class com.williamfiset.algorithms.graphtheory.FordFulkersonDfsSolverAdjacencyList
8c5c65b166ca749c6b49ca9f7ed2c27dc02d7a7c,RENAME_METHOD, Rename Method Rename Method	public eulerianPath() : int[] renamed to public getEulerianPath() : int[] in class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
8c5c65b166ca749c6b49ca9f7ed2c27dc02d7a7c,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to public in attribute public n : int from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
8c5c65b166ca749c6b49ca9f7ed2c27dc02d7a7c,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to public in attribute public start : int from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
8c5c65b166ca749c6b49ca9f7ed2c27dc02d7a7c,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to public in attribute public end : int from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
8c5c65b166ca749c6b49ca9f7ed2c27dc02d7a7c,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to public in attribute public orderIndex : int from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
8c5c65b166ca749c6b49ca9f7ed2c27dc02d7a7c,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to public in attribute public indexes : int[] from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
8c5c65b166ca749c6b49ca9f7ed2c27dc02d7a7c,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to public in attribute public in : int[] from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
8c5c65b166ca749c6b49ca9f7ed2c27dc02d7a7c,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to public in attribute public out : int[] from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
8c5c65b166ca749c6b49ca9f7ed2c27dc02d7a7c,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to public in attribute public graph : List<List<Integer>> from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
8c5c65b166ca749c6b49ca9f7ed2c27dc02d7a7c,REPLACE_ATTRIBUTE_WITH_VARIABLE, Replace Attribute With Variable Replace Attribute With Variable	edgeCount : int to edgeCount : int in method public getEulerianPath() : int[] from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
8bf630d734a0ed8ea250d0afdd06673b32fb9a59,EXTRACT_VARIABLE, Extract Variable Extract Variable	leftInterval : long in method private init(v long[]) : void from class com.williamfiset.algorithms.datastructures.sparsetable.SparseTable
38d17a8f266f3ba651305a97d3793e194f2f3084,RENAME_METHOD, Rename Method Rename Method	public id() : int renamed to public index() : int in class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour.TreeNode
38d17a8f266f3ba651305a97d3793e194f2f3084,RENAME_PARAMETER, Rename Parameter Rename Parameter	id : int to index : int in method public TreeNode(index int) from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour.TreeNode
38d17a8f266f3ba651305a97d3793e194f2f3084,RENAME_PARAMETER, Rename Parameter Rename Parameter	id : int to index : int in method public TreeNode(index int  parent TreeNode) from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour.TreeNode
38d17a8f266f3ba651305a97d3793e194f2f3084,MOVE_ATTRIBUTE, Move Attribute Move Attribute	private index : int from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour to private index : int from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour.TreeNode
ffeb01e489f02c69676501074af2b805f976a1f5,RENAME_CLASS, Rename Class Rename Class	com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowWithNegativeCosts renamed to com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowWithBellmanFord
ffeb01e489f02c69676501074af2b805f976a1f5,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	solver : MinCostMaxFlowWithNegativeCosts to solver : MinCostMaxFlowWithBellmanFord in method private testSmallNetwork() : void from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowWithBellmanFord
b65c706e860f1ce2f7850744498969a0a3759a1c,MOVE_CLASS, Move Class Move Class	com.williamfiset.algorithms.graphtheory.EdmondsKarpAdjacencyList moved to com.williamfiset.algorithms.graphtheory.networkflow.EdmondsKarpAdjacencyList
0e291a44878a996bfc511cc71641b2e7bb842735,MOVE_CLASS, Move Class Move Class	com.williamfiset.algorithms.graphtheory.networkflow.CapacityScalingSolverAdjacencyList.Edge moved to com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase.Edge
0e291a44878a996bfc511cc71641b2e7bb842735,MOVE_CLASS, Move Class Move Class	com.williamfiset.algorithms.graphtheory.networkflow.CapacityScalingSolverAdjacencyList.Edge moved to com.williamfiset.algorithms.graphtheory.networkflow.CapacityScalingSolverAdjacencyList.Edge
0e291a44878a996bfc511cc71641b2e7bb842735,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@Override in method public addEdge(from int  to int  capacity int) : void from class com.williamfiset.algorithms.graphtheory.networkflow.CapacityScalingSolverAdjacencyList
0e291a44878a996bfc511cc71641b2e7bb842735,RENAME_VARIABLE, Rename Variable Rename Variable	flow : long to f : long in method public solve() : void from class com.williamfiset.algorithms.graphtheory.networkflow.CapacityScalingSolverAdjacencyList
0e291a44878a996bfc511cc71641b2e7bb842735,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@Override in method public solve() : void from class com.williamfiset.algorithms.graphtheory.networkflow.CapacityScalingSolverAdjacencyList
0e291a44878a996bfc511cc71641b2e7bb842735,RENAME_VARIABLE, Rename Variable Rename Variable	flow : long to f : long in method public solve() : void from class com.williamfiset.algorithms.graphtheory.networkflow.Dinics
0e291a44878a996bfc511cc71641b2e7bb842735,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@Override in method public solve() : void from class com.williamfiset.algorithms.graphtheory.networkflow.Dinics
0e291a44878a996bfc511cc71641b2e7bb842735,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@Override in method public solve() : void from class com.williamfiset.algorithms.graphtheory.networkflow.FordFulkersonDfsSolverAdjacencyList
0e291a44878a996bfc511cc71641b2e7bb842735,EXTRACT_VARIABLE, Extract Variable Extract Variable	cap : long in method private dfs(node int  flow long) : long from class com.williamfiset.algorithms.graphtheory.networkflow.FordFulkersonDfsSolverAdjacencyList
0e291a44878a996bfc511cc71641b2e7bb842735,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	dfsFlow : int to bottleNeck : long in method private dfs(node int  flow long) : long from class com.williamfiset.algorithms.graphtheory.networkflow.FordFulkersonDfsSolverAdjacencyList
0e291a44878a996bfc511cc71641b2e7bb842735,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	flow : int to flow : long in method private dfs(node int  flow long) : long from class com.williamfiset.algorithms.graphtheory.networkflow.FordFulkersonDfsSolverAdjacencyList
0e291a44878a996bfc511cc71641b2e7bb842735,RENAME_VARIABLE, Rename Variable Rename Variable	dfsFlow : int to bottleNeck : long in method private dfs(node int  flow long) : long from class com.williamfiset.algorithms.graphtheory.networkflow.FordFulkersonDfsSolverAdjacencyList
0e291a44878a996bfc511cc71641b2e7bb842735,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	int to long in method private dfs(node int  flow long) : long from class com.williamfiset.algorithms.graphtheory.networkflow.FordFulkersonDfsSolverAdjacencyList
0e291a44878a996bfc511cc71641b2e7bb842735,EXTRACT_SUPERCLASS, Extract Superclass Extract Superclass	com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase from classes [com.williamfiset.algorithms.graphtheory.networkflow.CapacityScalingSolverAdjacencyList  com.williamfiset.algorithms.graphtheory.networkflow.Dinics  com.williamfiset.algorithms.graphtheory.networkflow.FordFulkersonDfsSolverAdjacencyList]
0e291a44878a996bfc511cc71641b2e7bb842735,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	private to protected in attribute protected t : int from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	private to protected in attribute protected t : int from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	private to protected in attribute protected t : int from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,ADD_ATTRIBUTE_MODIFIER, Add Attribute Modifier Add Attribute Modifier	final in attribute protected t : int from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,ADD_ATTRIBUTE_MODIFIER, Add Attribute Modifier Add Attribute Modifier	final in attribute protected t : int from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,MOVE_RENAME_ATTRIBUTE, Move And Rename Attribute Move And Rename Attribute	private sink : int renamed to protected t : int and moved from class com.williamfiset.algorithms.graphtheory.networkflow.CapacityScalingSolverAdjacencyList to class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,MOVE_RENAME_ATTRIBUTE, Move And Rename Attribute Move And Rename Attribute	private sink : int renamed to protected t : int and moved from class com.williamfiset.algorithms.graphtheory.networkflow.FordFulkersonDfsSolverAdjacencyList to class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,PULL_UP_OPERATION, Pull Up Method Pull Up Method	private initializeGraph() : void from class com.williamfiset.algorithms.graphtheory.networkflow.CapacityScalingSolverAdjacencyList to private initializeGraph() : void from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,PULL_UP_OPERATION, Pull Up Method Pull Up Method	public getGraph() : List<List<Edge>> from class com.williamfiset.algorithms.graphtheory.networkflow.CapacityScalingSolverAdjacencyList to public getGraph() : List<List<Edge>> from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,PULL_UP_OPERATION, Pull Up Method Pull Up Method	public getMinCut() : boolean[] from class com.williamfiset.algorithms.graphtheory.networkflow.CapacityScalingSolverAdjacencyList to public getMinCut() : boolean[] from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,PULL_UP_ATTRIBUTE, Pull Up Attribute Pull Up Attribute	private n : int from class com.williamfiset.algorithms.graphtheory.networkflow.CapacityScalingSolverAdjacencyList to protected n : int from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	private to protected in attribute protected n : int from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	private to protected in attribute protected n : int from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	private to protected in attribute protected n : int from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,ADD_ATTRIBUTE_MODIFIER, Add Attribute Modifier Add Attribute Modifier	final in attribute protected n : int from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,ADD_ATTRIBUTE_MODIFIER, Add Attribute Modifier Add Attribute Modifier	final in attribute protected n : int from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,PULL_UP_ATTRIBUTE, Pull Up Attribute Pull Up Attribute	private visitedToken : int from class com.williamfiset.algorithms.graphtheory.networkflow.CapacityScalingSolverAdjacencyList to protected visitedToken : int from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	private to protected in attribute protected visitedToken : int from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	private to protected in attribute protected visitedToken : int from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,PULL_UP_ATTRIBUTE, Pull Up Attribute Pull Up Attribute	private visited : int[] from class com.williamfiset.algorithms.graphtheory.networkflow.CapacityScalingSolverAdjacencyList to protected visited : int[] from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	private to protected in attribute protected visited : int[] from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	private to protected in attribute protected visited : int[] from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,PULL_UP_ATTRIBUTE, Pull Up Attribute Pull Up Attribute	private maxFlow : long from class com.williamfiset.algorithms.graphtheory.networkflow.CapacityScalingSolverAdjacencyList to protected maxFlow : long from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	private to protected in attribute protected maxFlow : long from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	private to protected in attribute protected maxFlow : long from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,PULL_UP_ATTRIBUTE, Pull Up Attribute Pull Up Attribute	private minCut : boolean[] from class com.williamfiset.algorithms.graphtheory.networkflow.CapacityScalingSolverAdjacencyList to protected minCut : boolean[] from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	private to protected in attribute protected minCut : boolean[] from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	private to protected in attribute protected minCut : boolean[] from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	private to protected in attribute protected minCut : boolean[] from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,PULL_UP_ATTRIBUTE, Pull Up Attribute Pull Up Attribute	private graph : List<List<Edge>> from class com.williamfiset.algorithms.graphtheory.networkflow.CapacityScalingSolverAdjacencyList to protected graph : List<List<Edge>> from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	private to protected in attribute protected graph : List<List<Edge>> from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	private to protected in attribute protected graph : List<List<Edge>> from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	private to protected in attribute protected graph : List<List<Edge>> from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,PULL_UP_OPERATION, Pull Up Method Pull Up Method	private initializeGraph() : void from class com.williamfiset.algorithms.graphtheory.networkflow.Dinics to private initializeGraph() : void from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,PULL_UP_OPERATION, Pull Up Method Pull Up Method	public addEdge(from int  to int  capacity int) : void from class com.williamfiset.algorithms.graphtheory.networkflow.Dinics to public addEdge(from int  to int  capacity int) : void from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,PULL_UP_OPERATION, Pull Up Method Pull Up Method	public getGraph() : List<List<Edge>> from class com.williamfiset.algorithms.graphtheory.networkflow.Dinics to public getGraph() : List<List<Edge>> from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,PULL_UP_OPERATION, Pull Up Method Pull Up Method	public getMaxFlow() : long from class com.williamfiset.algorithms.graphtheory.networkflow.Dinics to public getMaxFlow() : long from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,PULL_UP_OPERATION, Pull Up Method Pull Up Method	public getMinCut() : boolean[] from class com.williamfiset.algorithms.graphtheory.networkflow.Dinics to public getMinCut() : boolean[] from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,PULL_UP_ATTRIBUTE, Pull Up Attribute Pull Up Attribute	package INF : long from class com.williamfiset.algorithms.graphtheory.networkflow.Dinics to package INF : long from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,PULL_UP_ATTRIBUTE, Pull Up Attribute Pull Up Attribute	private n : int from class com.williamfiset.algorithms.graphtheory.networkflow.Dinics to protected n : int from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,PULL_UP_ATTRIBUTE, Pull Up Attribute Pull Up Attribute	private s : int from class com.williamfiset.algorithms.graphtheory.networkflow.Dinics to protected s : int from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	private to protected in attribute protected s : int from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,PULL_UP_ATTRIBUTE, Pull Up Attribute Pull Up Attribute	private t : int from class com.williamfiset.algorithms.graphtheory.networkflow.Dinics to protected t : int from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,PULL_UP_ATTRIBUTE, Pull Up Attribute Pull Up Attribute	private maxFlow : long from class com.williamfiset.algorithms.graphtheory.networkflow.Dinics to protected maxFlow : long from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,PULL_UP_ATTRIBUTE, Pull Up Attribute Pull Up Attribute	private minCut : boolean[] from class com.williamfiset.algorithms.graphtheory.networkflow.Dinics to protected minCut : boolean[] from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,PULL_UP_ATTRIBUTE, Pull Up Attribute Pull Up Attribute	private graph : List<List<Edge>> from class com.williamfiset.algorithms.graphtheory.networkflow.Dinics to protected graph : List<List<Edge>> from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,PULL_UP_OPERATION, Pull Up Method Pull Up Method	private initializeGraph() : void from class com.williamfiset.algorithms.graphtheory.networkflow.FordFulkersonDfsSolverAdjacencyList to private initializeGraph() : void from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,PULL_UP_OPERATION, Pull Up Method Pull Up Method	public addEdge(from int  to int  capacity int) : void from class com.williamfiset.algorithms.graphtheory.networkflow.FordFulkersonDfsSolverAdjacencyList to public addEdge(from int  to int  capacity int) : void from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,PULL_UP_OPERATION, Pull Up Method Pull Up Method	public getGraph() : List<List<Edge>> from class com.williamfiset.algorithms.graphtheory.networkflow.FordFulkersonDfsSolverAdjacencyList to public getGraph() : List<List<Edge>> from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,PULL_UP_OPERATION, Pull Up Method Pull Up Method	public getMinCut() : boolean[] from class com.williamfiset.algorithms.graphtheory.networkflow.FordFulkersonDfsSolverAdjacencyList to public getMinCut() : boolean[] from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,PULL_UP_ATTRIBUTE, Pull Up Attribute Pull Up Attribute	private n : int from class com.williamfiset.algorithms.graphtheory.networkflow.FordFulkersonDfsSolverAdjacencyList to protected n : int from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,PULL_UP_ATTRIBUTE, Pull Up Attribute Pull Up Attribute	private visitedToken : int from class com.williamfiset.algorithms.graphtheory.networkflow.FordFulkersonDfsSolverAdjacencyList to protected visitedToken : int from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,PULL_UP_ATTRIBUTE, Pull Up Attribute Pull Up Attribute	private visited : int[] from class com.williamfiset.algorithms.graphtheory.networkflow.FordFulkersonDfsSolverAdjacencyList to protected visited : int[] from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,PULL_UP_ATTRIBUTE, Pull Up Attribute Pull Up Attribute	private minCut : boolean[] from class com.williamfiset.algorithms.graphtheory.networkflow.FordFulkersonDfsSolverAdjacencyList to protected minCut : boolean[] from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
0e291a44878a996bfc511cc71641b2e7bb842735,PULL_UP_ATTRIBUTE, Pull Up Attribute Pull Up Attribute	private graph : List<List<Edge>> from class com.williamfiset.algorithms.graphtheory.networkflow.FordFulkersonDfsSolverAdjacencyList to protected graph : List<List<Edge>> from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase
b247b06b04ed258b2961146c1af4394f2d41dbf7,RENAME_METHOD, Rename Method Rename Method	public shortestPathDAG(adj Double[][]  start int  end int) : double renamed to public dagShortestPath(adj Double[][]  start int) : double[] in class TopologicalSortAdjacencyMatrix
b247b06b04ed258b2961146c1af4394f2d41dbf7,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	double to double[] in method public dagShortestPath(adj Double[][]  start int) : double[] from class TopologicalSortAdjacencyMatrix
b247b06b04ed258b2961146c1af4394f2d41dbf7,REMOVE_PARAMETER, Remove Parameter Remove Parameter	end : int in method public shortestPathDAG(adj Double[][]  start int  end int) : double from class TopologicalSortAdjacencyMatrix
c6b16feba5352d230a44064b44e4453cd815993e,REMOVE_METHOD_MODIFIER, Remove Method Modifier Remove Method Modifier	static in method public lca(root TreeNode  id1 int  id2 int) : TreeNode from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestor
c526c8f12cba0eca1471b6fac7dd415d5f1810af,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private topologicalSortDFS(i int  at int  visited boolean[]  ordering int[]  adjList Map<Integer List<Edge>>) : int from class TopologicalSortAdjacencyList
c526c8f12cba0eca1471b6fac7dd415d5f1810af,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public topologicalSort(adjList Map<Integer List<Edge>>  numNodes int) : int[] from class TopologicalSortAdjacencyList
3a2764d8e1b0045ee10fefd1e1fe68e5f3da1510,INLINE_VARIABLE, Inline Variable Inline Variable	c : double in method private laplace(m double[][]) : double from class com.williamfiset.algorithms.linearalgebra.MatrixDeterminantLaplaceExpansion
3a2764d8e1b0045ee10fefd1e1fe68e5f3da1510,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	parity : double to sign : int in method private laplace(m double[][]) : double from class com.williamfiset.algorithms.linearalgebra.MatrixDeterminantLaplaceExpansion
3a2764d8e1b0045ee10fefd1e1fe68e5f3da1510,RENAME_VARIABLE, Rename Variable Rename Variable	parity : double to sign : int in method private laplace(m double[][]) : double from class com.williamfiset.algorithms.linearalgebra.MatrixDeterminantLaplaceExpansion
3a2764d8e1b0045ee10fefd1e1fe68e5f3da1510,RENAME_PARAMETER, Rename Parameter Rename Parameter	m : double[][] to mat : double[][] in method private constructMatrix(mat double[][]  excludingRow int  excludingCol int) : double[][] from class com.williamfiset.algorithms.linearalgebra.MatrixDeterminantLaplaceExpansion
3a2764d8e1b0045ee10fefd1e1fe68e5f3da1510,ADD_PARAMETER, Add Parameter Add Parameter	excludingRow : int in method private constructMatrix(mat double[][]  excludingRow int  excludingCol int) : double[][] from class com.williamfiset.algorithms.linearalgebra.MatrixDeterminantLaplaceExpansion
3a2764d8e1b0045ee10fefd1e1fe68e5f3da1510,ADD_PARAMETER, Add Parameter Add Parameter	excludingCol : int in method private constructMatrix(mat double[][]  excludingRow int  excludingCol int) : double[][] from class com.williamfiset.algorithms.linearalgebra.MatrixDeterminantLaplaceExpansion
3a2764d8e1b0045ee10fefd1e1fe68e5f3da1510,REMOVE_PARAMETER, Remove Parameter Remove Parameter	skipColumn : int in method private constructMatrix(m double[][]  skipColumn int) : double[][] from class com.williamfiset.algorithms.linearalgebra.MatrixDeterminantLaplaceExpansion
91998a3042f0591e4fd297a0c34ca76e44eabb89,ENCAPSULATE_ATTRIBUTE, Encapsulate Attribute Encapsulate Attribute	public color : boolean from class com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree.Node
91998a3042f0591e4fd297a0c34ca76e44eabb89,ENCAPSULATE_ATTRIBUTE, Encapsulate Attribute Encapsulate Attribute	public value : T from class com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree.Node
91998a3042f0591e4fd297a0c34ca76e44eabb89,ENCAPSULATE_ATTRIBUTE, Encapsulate Attribute Encapsulate Attribute	public left : Node from class com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree.Node
91998a3042f0591e4fd297a0c34ca76e44eabb89,ENCAPSULATE_ATTRIBUTE, Encapsulate Attribute Encapsulate Attribute	public right : Node from class com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree.Node
91998a3042f0591e4fd297a0c34ca76e44eabb89,ENCAPSULATE_ATTRIBUTE, Encapsulate Attribute Encapsulate Attribute	public parent : Node from class com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree.Node
91998a3042f0591e4fd297a0c34ca76e44eabb89,RENAME_VARIABLE, Rename Variable Rename Variable	node : Node to x : Node in method public insert(val T) : boolean from class com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree
91998a3042f0591e4fd297a0c34ca76e44eabb89,RENAME_PARAMETER, Rename Parameter Rename Parameter	value : T to val : T in method public insert(val T) : boolean from class com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree
91998a3042f0591e4fd297a0c34ca76e44eabb89,RENAME_PARAMETER, Rename Parameter Rename Parameter	parent : Node to y : Node in method private rightRotate(y Node) : void from class com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree
91998a3042f0591e4fd297a0c34ca76e44eabb89,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	Node to void in method private rightRotate(y Node) : void from class com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree
91998a3042f0591e4fd297a0c34ca76e44eabb89,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	Node to void in method private leftRotate(x Node) : void from class com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree
91998a3042f0591e4fd297a0c34ca76e44eabb89,RENAME_PARAMETER, Rename Parameter Rename Parameter	parent : Node to x : Node in method private leftRotate(x Node) : void from class com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree
91998a3042f0591e4fd297a0c34ca76e44eabb89,ADD_PARAMETER, Add Parameter Add Parameter	tree : RedBlackTree in method package assertCorrectParentLinks(tree RedBlackTree  node RedBlackTree.Node  parent RedBlackTree.Node) : void from class com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTreeTest
91998a3042f0591e4fd297a0c34ca76e44eabb89,EXTRACT_AND_MOVE_OPERATION, Extract And Move Method Extract And Move Method	public getLeft() : Node extracted from private leftRotate(parent Node) : Node in class com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree & moved to class com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree.Node
91998a3042f0591e4fd297a0c34ca76e44eabb89,EXTRACT_AND_MOVE_OPERATION, Extract And Move Method Extract And Move Method	public setLeft(left Node) : void extracted from private leftRotate(parent Node) : Node in class com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree & moved to class com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree.Node
91998a3042f0591e4fd297a0c34ca76e44eabb89,EXTRACT_AND_MOVE_OPERATION, Extract And Move Method Extract And Move Method	public setRight(right Node) : void extracted from private leftRotate(parent Node) : Node in class com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree & moved to class com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree.Node
91998a3042f0591e4fd297a0c34ca76e44eabb89,EXTRACT_AND_MOVE_OPERATION, Extract And Move Method Extract And Move Method	public getParent() : Node extracted from private leftRotate(parent Node) : Node in class com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree & moved to class com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree.Node
91998a3042f0591e4fd297a0c34ca76e44eabb89,EXTRACT_AND_MOVE_OPERATION, Extract And Move Method Extract And Move Method	public setParent(parent Node) : void extracted from private leftRotate(parent Node) : Node in class com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree & moved to class com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree.Node
408c331e2faef75e23be1ba40bcaddba25c1248c,RENAME_CLASS, Rename Class Rename Class	com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapTestCase renamed to com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapTest
21a3ea1f9dafffc64eddec389983a98f3c400519,RENAME_METHOD, Rename Method Rename Method	public mst() : Long renamed to public getMstCost() : Long in class com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList
20963213a62087e4e92d1992e6c609e733dc6735,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	public to package in attribute package residual : Edge from class com.williamfiset.algorithms.graphtheory.networkflow.Dinics.Edge
20963213a62087e4e92d1992e6c609e733dc6735,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private n : int from class com.williamfiset.algorithms.graphtheory.networkflow.Dinics
20963213a62087e4e92d1992e6c609e733dc6735,ADD_ATTRIBUTE_MODIFIER, Add Attribute Modifier Add Attribute Modifier	final in attribute private n : int from class com.williamfiset.algorithms.graphtheory.networkflow.Dinics
20963213a62087e4e92d1992e6c609e733dc6735,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private s : int from class com.williamfiset.algorithms.graphtheory.networkflow.Dinics
20963213a62087e4e92d1992e6c609e733dc6735,ADD_ATTRIBUTE_MODIFIER, Add Attribute Modifier Add Attribute Modifier	final in attribute private s : int from class com.williamfiset.algorithms.graphtheory.networkflow.Dinics
20963213a62087e4e92d1992e6c609e733dc6735,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private t : int from class com.williamfiset.algorithms.graphtheory.networkflow.Dinics
20963213a62087e4e92d1992e6c609e733dc6735,ADD_ATTRIBUTE_MODIFIER, Add Attribute Modifier Add Attribute Modifier	final in attribute private t : int from class com.williamfiset.algorithms.graphtheory.networkflow.Dinics
20963213a62087e4e92d1992e6c609e733dc6735,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private maxFlow : long from class com.williamfiset.algorithms.graphtheory.networkflow.Dinics
20963213a62087e4e92d1992e6c609e733dc6735,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private level : int[] from class com.williamfiset.algorithms.graphtheory.networkflow.Dinics
20963213a62087e4e92d1992e6c609e733dc6735,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private graph : List<List<Edge>> from class com.williamfiset.algorithms.graphtheory.networkflow.Dinics
20963213a62087e4e92d1992e6c609e733dc6735,RENAME_VARIABLE, Rename Variable Rename Variable	ff : long to bottleNeck : long in method private dfs(at int  flow long) : long from class com.williamfiset.algorithms.graphtheory.networkflow.Dinics
20963213a62087e4e92d1992e6c609e733dc6735,RENAME_PARAMETER, Rename Parameter Rename Parameter	f : long to flow : long in method private dfs(at int  flow long) : long from class com.williamfiset.algorithms.graphtheory.networkflow.Dinics
06cbde3f7c4fb28203df5323c99164fd06e4ba4a,MOVE_SOURCE_FOLDER, Move Source Folder Move Source Folder	src/main/java/com/williamfiset/algorithms/dp/examples to src/main/java/com/williamfiset/algorithms/dp/examples/narrowartgallery
06cbde3f7c4fb28203df5323c99164fd06e4ba4a,MOVE_SOURCE_FOLDER, Move Source Folder Move Source Folder	src/main/java/com/williamfiset/algorithms/dp/examples to src/main/java/com/williamfiset/algorithms/dp/examples/houserobber
81bb696da55f4af837255a6b1bb4f848c35b9ea8,ADD_THROWN_EXCEPTION_TYPE, Add Thrown Exception Type Add Thrown Exception Type	InterruptedException in method public main(args String[]) : void from class com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis
81bb696da55f4af837255a6b1bb4f848c35b9ea8,ADD_THROWN_EXCEPTION_TYPE, Add Thrown Exception Type Add Thrown Exception Type	InterruptedException in method private densityTest() : void from class com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis
f07c439dab2b8340ef673da17c9ac5c086731cd9,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	prevState : int to newCost : double in method public solve() : void from class com.williamfiset.algorithms.dp.MinimumWeightPerfectMatching
f07c439dab2b8340ef673da17c9ac5c086731cd9,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	dp : Double[][] to dp : Double[] in method public solve() : void from class com.williamfiset.algorithms.dp.MinimumWeightPerfectMatching
f07c439dab2b8340ef673da17c9ac5c086731cd9,RENAME_VARIABLE, Rename Variable Rename Variable	prevState : int to newCost : double in method public solve() : void from class com.williamfiset.algorithms.dp.MinimumWeightPerfectMatching
569eef01190d55eda9248edc93e783d6b4c1505d,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	path : List<Integer> to path : LinkedList<Integer> in method public reconstructShortestPath(end int) : List<Integer> from class BellmanFordAdjacencyMatrix
569eef01190d55eda9248edc93e783d6b4c1505d,REPLACE_VARIABLE_WITH_ATTRIBUTE, Replace Variable With Attribute Replace Variable With Attribute	end : int to start : int in method public reconstructShortestPath(end int) : List<Integer> from class BellmanFordAdjacencyMatrix
569eef01190d55eda9248edc93e783d6b4c1505d,PARAMETERIZE_ATTRIBUTE, Parameterize Attribute Parameterize Attribute	start : int to end : int in method public reconstructShortestPath(end int) : List<Integer> from class BellmanFordAdjacencyMatrix
dd2e98702cc11e8c1d0fe0ed2bffa59876bdb3d5,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	public to private in attribute private in : int[] from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
dd2e98702cc11e8c1d0fe0ed2bffa59876bdb3d5,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	public to private in attribute private out : int[] from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
dd2e98702cc11e8c1d0fe0ed2bffa59876bdb3d5,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	public to private in attribute private n : int from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
dd2e98702cc11e8c1d0fe0ed2bffa59876bdb3d5,ADD_ATTRIBUTE_MODIFIER, Add Attribute Modifier Add Attribute Modifier	final in attribute private n : int from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
dd2e98702cc11e8c1d0fe0ed2bffa59876bdb3d5,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	public to private in attribute private edgeCount : int from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
dd2e98702cc11e8c1d0fe0ed2bffa59876bdb3d5,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	public to private in attribute private path : LinkedList<Integer> from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
dd2e98702cc11e8c1d0fe0ed2bffa59876bdb3d5,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	public to private in attribute private graph : List<List<Integer>> from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
b84cbe2b69c0a96fd834f35236139f7c6f7a227f,RENAME_PARAMETER, Rename Parameter Rename Parameter	id1 : int to index1 : int in method public lca(index1 int  index2 int) : TreeNode from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour
b84cbe2b69c0a96fd834f35236139f7c6f7a227f,RENAME_PARAMETER, Rename Parameter Rename Parameter	id2 : int to index2 : int in method public lca(index1 int  index2 int) : TreeNode from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour
3f4e6474bdb8ab2e4eb5732223d567925e017000,RENAME_CLASS, Rename Class Rename Class	TravelingSalesmanProblemBruteForce renamed to TspBruteForce
3f4e6474bdb8ab2e4eb5732223d567925e017000,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	public to package in method package tourCost(tour List<Integer>  dist double[][]) : double from class TspDynamicProgramming
3f4e6474bdb8ab2e4eb5732223d567925e017000,MOVE_OPERATION, Move Method Move Method	public tourCost(tour List<Integer>  dist double[][]) : double from class TravelingSalesmanProblemDynamicProgramming to package tourCost(tour List<Integer>  dist double[][]) : double from class TspDynamicProgramming
3f4e6474bdb8ab2e4eb5732223d567925e017000,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	soln : TspSoln to solver : TspDynamicProgramming in method public main(args String[]) : void from class TspDynamicProgramming
3f4e6474bdb8ab2e4eb5732223d567925e017000,RENAME_VARIABLE, Rename Variable Rename Variable	dist : double[][] to distanceMatrix : double[][] in method public main(args String[]) : void from class TspDynamicProgramming
3f4e6474bdb8ab2e4eb5732223d567925e017000,ADD_PARAMETER, Add Parameter Add Parameter	args : String[] in method public main(args String[]) : void from class TspDynamicProgramming
3f4e6474bdb8ab2e4eb5732223d567925e017000,MOVE_AND_RENAME_OPERATION, Move And Rename Method Move And Rename Method	public test1() : void from class TravelingSalesmanProblemDynamicProgramming to public main(args String[]) : void from class TspDynamicProgramming
3f4e6474bdb8ab2e4eb5732223d567925e017000,INLINE_VARIABLE, Inline Variable Inline Variable	soln : TspSoln in method private tsp(i int  state int  path LinkedList<Integer>  dist double[][]  memo TspSoln[][]) : TspSoln from class TravelingSalesmanProblemDynamicProgramming
3f4e6474bdb8ab2e4eb5732223d567925e017000,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	memo : TspSoln[][] to memo : Double[][] in method private TSP(i int  state int  dist double[][]  memo Double[][]) : double from class TspDynamicProgramming
3f4e6474bdb8ab2e4eb5732223d567925e017000,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	TspSoln to double in method private TSP(i int  state int  dist double[][]  memo Double[][]) : double from class TspDynamicProgramming
3f4e6474bdb8ab2e4eb5732223d567925e017000,REMOVE_PARAMETER, Remove Parameter Remove Parameter	path : LinkedList<Integer> in method private tsp(i int  state int  path LinkedList<Integer>  dist double[][]  memo TspSoln[][]) : TspSoln from class TravelingSalesmanProblemDynamicProgramming
3f4e6474bdb8ab2e4eb5732223d567925e017000,MOVE_AND_RENAME_OPERATION, Move And Rename Method Move And Rename Method	private tsp(i int  state int  path LinkedList<Integer>  dist double[][]  memo TspSoln[][]) : TspSoln from class TravelingSalesmanProblemDynamicProgramming to private TSP(i int  state int  dist double[][]  memo Double[][]) : double from class TspDynamicProgramming
59b4e3b4ae9875bd4986f8b73b1d66f26d0080bf,RENAME_CLASS, Rename Class Rename Class	com.williamfiset.algorithms.dp.MinimumWeightPerfectMatchingIterative renamed to com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingIterative
59b4e3b4ae9875bd4986f8b73b1d66f26d0080bf,RENAME_CLASS, Rename Class Rename Class	com.williamfiset.algorithms.dp.MinimumWeightPerfectMatchingRecursive renamed to com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive
59b4e3b4ae9875bd4986f8b73b1d66f26d0080bf,RENAME_CLASS, Rename Class Rename Class	com.williamfiset.algorithms.dp.MinimumWeightPerfectMatchingTest renamed to com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest
59b4e3b4ae9875bd4986f8b73b1d66f26d0080bf,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	mwpm : MinimumWeightPerfectMatchingRecursive to mwpm : WeightedMaximumCardinalityMatchingIterative in method private test() : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingIterative
59b4e3b4ae9875bd4986f8b73b1d66f26d0080bf,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	mwpm : MinimumWeightPerfectMatchingRecursive to mwpm : WeightedMaximumCardinalityMatchingRecursive in method private test() : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive
59b4e3b4ae9875bd4986f8b73b1d66f26d0080bf,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	mwpm : MinimumWeightPerfectMatching to impls : MwpmInterface[] in method public testAgainstBruteForce_smallValues() : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest
59b4e3b4ae9875bd4986f8b73b1d66f26d0080bf,RENAME_VARIABLE, Rename Variable Rename Variable	mwpm : MinimumWeightPerfectMatching to impls : MwpmInterface[] in method public testAgainstBruteForce_smallValues() : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setup() : void from class com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setup() : void from class com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setup() : void from class com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setup() : void from class com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testNullInsertion() : void from class com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setup() : void from class com.williamfiset.algorithms.datastructures.balancedtree.TreapTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setup() : void from class com.williamfiset.algorithms.datastructures.balancedtree.TreapTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testNullInsertion() : void from class com.williamfiset.algorithms.datastructures.balancedtree.TreapTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setup() : void from class com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setup() : void from class com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = ConcurrentModificationException.class) to @Test in method public concurrentModificationErrorPreOrder() : void from class com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = ConcurrentModificationException.class) to @Test in method public concurrentModificationErrorInOrderOrder() : void from class com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = ConcurrentModificationException.class) to @Test in method public concurrentModificationErrorPostOrder() : void from class com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = ConcurrentModificationException.class) to @Test in method public concurrentModificationErrorLevelOrder() : void from class com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = ConcurrentModificationException.class) to @Test in method public concurrentModificationErrorRemovingPreOrder() : void from class com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = ConcurrentModificationException.class) to @Test in method public concurrentModificationErrorRemovingInOrderOrder() : void from class com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = ConcurrentModificationException.class) to @Test in method public concurrentModificationErrorRemovingPostOrder() : void from class com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = ConcurrentModificationException.class) to @Test in method public concurrentModificationErrorRemovingLevelOrder() : void from class com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setup() : void from class com.williamfiset.algorithms.datastructures.bloomfilter.BloomFilterTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setup() : void from class com.williamfiset.algorithms.datastructures.bloomfilter.BloomFilterTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setup() : void from class com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeQueryPointUpdateTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setup() : void from class com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeQueryPointUpdateTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testIllegalCreation() : void from class com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeQueryPointUpdateTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setup() : void from class com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeUpdatePointQueryTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setup() : void from class com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeUpdatePointQueryTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testIllegalCreation() : void from class com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeUpdatePointQueryTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setUp() : void from class com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setUp() : void from class com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@AfterEach in method public tearDown() : void from class com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@After in method public tearDown() : void from class com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = NoSuchElementException.class) to @Test in method public elementThrowsException() : void from class com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setup() : void from class com.williamfiset.algorithms.datastructures.hashtable.HashTableDoubleHashingTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setup() : void from class com.williamfiset.algorithms.datastructures.hashtable.HashTableDoubleHashingTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testIllegalCreation1() : void from class com.williamfiset.algorithms.datastructures.hashtable.HashTableDoubleHashingTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testIllegalCreation2() : void from class com.williamfiset.algorithms.datastructures.hashtable.HashTableDoubleHashingTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testIllegalCreation3() : void from class com.williamfiset.algorithms.datastructures.hashtable.HashTableDoubleHashingTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = java.util.ConcurrentModificationException.class) to @Test in method public testConcurrentModificationException() : void from class com.williamfiset.algorithms.datastructures.hashtable.HashTableDoubleHashingTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = java.util.ConcurrentModificationException.class) to @Test in method public testConcurrentModificationException2() : void from class com.williamfiset.algorithms.datastructures.hashtable.HashTableDoubleHashingTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setup() : void from class com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbingTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setup() : void from class com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbingTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testNullKey() : void from class com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbingTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testIllegalCreation1() : void from class com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbingTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testIllegalCreation2() : void from class com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbingTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testIllegalCreation3() : void from class com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbingTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = java.util.ConcurrentModificationException.class) to @Test in method public testConcurrentModificationException() : void from class com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbingTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = java.util.ConcurrentModificationException.class) to @Test in method public testConcurrentModificationException2() : void from class com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbingTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setup() : void from class com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbingTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setup() : void from class com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbingTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testNullKey() : void from class com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbingTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testIllegalCreation1() : void from class com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbingTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testIllegalCreation2() : void from class com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbingTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testIllegalCreation3() : void from class com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbingTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = java.util.ConcurrentModificationException.class) to @Test in method public testConcurrentModificationException() : void from class com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbingTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = java.util.ConcurrentModificationException.class) to @Test in method public testConcurrentModificationException2() : void from class com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbingTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setup() : void from class com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setup() : void from class com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testIllegalCreation1() : void from class com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testIllegalCreation2() : void from class com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testIllegalCreation3() : void from class com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = java.util.ConcurrentModificationException.class) to @Test in method public testConcurrentModificationException() : void from class com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = java.util.ConcurrentModificationException.class) to @Test in method public testConcurrentModificationException2() : void from class com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testDimensionsZero() : void from class com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testDimensionsNegative() : void from class com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testInsertNull() : void from class com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testInsertMismatchDimensions() : void from class com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testSearchNull() : void from class com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testSearchMismatchDimensions() : void from class com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testFindMinOutOfBounds() : void from class com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testFindMinNegative() : void from class com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testDeleteNull() : void from class com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testDeleteMismatchDimensions() : void from class com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setup() : void from class com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setup() : void from class com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = Exception.class) to @Test in method public testRemoveFirstOfEmpty() : void from class com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = Exception.class) to @Test in method public testRemoveLastOfEmpty() : void from class com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = Exception.class) to @Test in method public testPeekFirstOfEmpty() : void from class com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = Exception.class) to @Test in method public testPeekLastOfEmpty() : void from class com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setup() : void from class com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovalsTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setup() : void from class com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovalsTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setup() : void from class com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setup() : void from class com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setup() : void from class com.williamfiset.algorithms.datastructures.priorityqueue.MinDHeapTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setup() : void from class com.williamfiset.algorithms.datastructures.priorityqueue.MinDHeapTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setup() : void from class com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedBinaryHeapTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setup() : void from class com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedBinaryHeapTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testIllegalSizeOfNegativeOne() : void from class com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedBinaryHeapTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testIllegalSizeOfZero() : void from class com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedBinaryHeapTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testDuplicateKeys() : void from class com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedBinaryHeapTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setup() : void from class com.williamfiset.algorithms.datastructures.quadtree.QuadTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setup() : void from class com.williamfiset.algorithms.datastructures.quadtree.QuadTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setup() : void from class com.williamfiset.algorithms.datastructures.queue.IntQueueTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setup() : void from class com.williamfiset.algorithms.datastructures.queue.IntQueueTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,RENAME_METHOD, Rename Method Rename Method	public setup() : void renamed to private inputs() : List<Queue<Integer>> in class com.williamfiset.algorithms.datastructures.queue.QueueTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REPLACE_ATTRIBUTE_WITH_VARIABLE, Replace Attribute With Variable Replace Attribute With Variable	queues : List<Queue<Integer>> to queues : List<Queue<Integer>> in method private inputs() : List<Queue<Integer>> from class com.williamfiset.algorithms.datastructures.queue.QueueTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	void to List<Queue<Integer>> in method private inputs() : List<Queue<Integer>> from class com.williamfiset.algorithms.datastructures.queue.QueueTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setup() : void from class com.williamfiset.algorithms.datastructures.queue.QueueTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	public to private in method private inputs() : List<Queue<Integer>> from class com.williamfiset.algorithms.datastructures.queue.QueueTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_MODIFIER, Add Method Modifier Add Method Modifier	static in method private inputs() : List<Queue<Integer>> from class com.williamfiset.algorithms.datastructures.queue.QueueTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,PARAMETERIZE_VARIABLE, Parameterize Variable Parameterize Variable	queue : Queue to queue : Queue<Integer> in method public testEmptyQueue(queue Queue<Integer>) : void from class com.williamfiset.algorithms.datastructures.queue.QueueTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	queue : Queue to queue : Queue<Integer> in method public testEmptyQueue(queue Queue<Integer>) : void from class com.williamfiset.algorithms.datastructures.queue.QueueTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@ParameterizedTest in method public testEmptyQueue(queue Queue<Integer>) : void from class com.williamfiset.algorithms.datastructures.queue.QueueTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@MethodSource("inputs") in method public testEmptyQueue(queue Queue<Integer>) : void from class com.williamfiset.algorithms.datastructures.queue.QueueTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Test in method public testEmptyQueue() : void from class com.williamfiset.algorithms.datastructures.queue.QueueTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,PARAMETERIZE_VARIABLE, Parameterize Variable Parameterize Variable	queue : Queue<Integer> to queue : Queue<Integer> in method public testOffer(queue Queue<Integer>) : void from class com.williamfiset.algorithms.datastructures.queue.QueueTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@ParameterizedTest in method public testOffer(queue Queue<Integer>) : void from class com.williamfiset.algorithms.datastructures.queue.QueueTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@MethodSource("inputs") in method public testOffer(queue Queue<Integer>) : void from class com.williamfiset.algorithms.datastructures.queue.QueueTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Test in method public testOffer() : void from class com.williamfiset.algorithms.datastructures.queue.QueueTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,PARAMETERIZE_VARIABLE, Parameterize Variable Parameterize Variable	queue : Queue<Integer> to queue : Queue<Integer> in method public testPeek(queue Queue<Integer>) : void from class com.williamfiset.algorithms.datastructures.queue.QueueTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@ParameterizedTest in method public testPeek(queue Queue<Integer>) : void from class com.williamfiset.algorithms.datastructures.queue.QueueTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@MethodSource("inputs") in method public testPeek(queue Queue<Integer>) : void from class com.williamfiset.algorithms.datastructures.queue.QueueTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Test in method public testPeek() : void from class com.williamfiset.algorithms.datastructures.queue.QueueTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,PARAMETERIZE_VARIABLE, Parameterize Variable Parameterize Variable	queue : Queue<Integer> to queue : Queue<Integer> in method public testPoll(queue Queue<Integer>) : void from class com.williamfiset.algorithms.datastructures.queue.QueueTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@ParameterizedTest in method public testPoll(queue Queue<Integer>) : void from class com.williamfiset.algorithms.datastructures.queue.QueueTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@MethodSource("inputs") in method public testPoll(queue Queue<Integer>) : void from class com.williamfiset.algorithms.datastructures.queue.QueueTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Test in method public testPoll() : void from class com.williamfiset.algorithms.datastructures.queue.QueueTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,PARAMETERIZE_VARIABLE, Parameterize Variable Parameterize Variable	queue : Queue<Integer> to queue : Queue<Integer> in method public testExhaustively(queue Queue<Integer>) : void from class com.williamfiset.algorithms.datastructures.queue.QueueTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@ParameterizedTest in method public testExhaustively(queue Queue<Integer>) : void from class com.williamfiset.algorithms.datastructures.queue.QueueTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@MethodSource("inputs") in method public testExhaustively(queue Queue<Integer>) : void from class com.williamfiset.algorithms.datastructures.queue.QueueTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Test in method public testExhaustively() : void from class com.williamfiset.algorithms.datastructures.queue.QueueTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setup() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setup() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setup() : void from class com.williamfiset.algorithms.datastructures.segmenttree.MaxQuerySumUpdateSegmentTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setup() : void from class com.williamfiset.algorithms.datastructures.segmenttree.MaxQuerySumUpdateSegmentTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setup() : void from class com.williamfiset.algorithms.datastructures.segmenttree.MinQueryAssignUpdateSegmentTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setup() : void from class com.williamfiset.algorithms.datastructures.segmenttree.MinQueryAssignUpdateSegmentTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setup() : void from class com.williamfiset.algorithms.datastructures.segmenttree.MinQuerySumUpdateSegmentTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setup() : void from class com.williamfiset.algorithms.datastructures.segmenttree.MinQuerySumUpdateSegmentTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setup() : void from class com.williamfiset.algorithms.datastructures.segmenttree.SegmentTreeWithPointersTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setup() : void from class com.williamfiset.algorithms.datastructures.segmenttree.SegmentTreeWithPointersTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testIllegalSegmentTreeCreation1() : void from class com.williamfiset.algorithms.datastructures.segmenttree.SegmentTreeWithPointersTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testIllegalSegmentTreeCreation2() : void from class com.williamfiset.algorithms.datastructures.segmenttree.SegmentTreeWithPointersTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setup() : void from class com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setup() : void from class com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setup() : void from class com.williamfiset.algorithms.datastructures.segmenttree.SumQueryMultiplicationUpdateSegmentTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setup() : void from class com.williamfiset.algorithms.datastructures.segmenttree.SumQueryMultiplicationUpdateSegmentTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setup() : void from class com.williamfiset.algorithms.datastructures.segmenttree.SumQuerySumUpdateSegmentTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setup() : void from class com.williamfiset.algorithms.datastructures.segmenttree.SumQuerySumUpdateSegmentTreeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setup() : void from class com.williamfiset.algorithms.datastructures.set.HSetTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setup() : void from class com.williamfiset.algorithms.datastructures.set.HSetTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,RENAME_METHOD, Rename Method Rename Method	public setup() : void renamed to private inputs() : List<Stack<Integer>> in class com.williamfiset.algorithms.datastructures.stack.StackTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REPLACE_ATTRIBUTE_WITH_VARIABLE, Replace Attribute With Variable Replace Attribute With Variable	stacks : List<Stack<Integer>> to stacks : List<Stack<Integer>> in method private inputs() : List<Stack<Integer>> from class com.williamfiset.algorithms.datastructures.stack.StackTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	void to List<Stack<Integer>> in method private inputs() : List<Stack<Integer>> from class com.williamfiset.algorithms.datastructures.stack.StackTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setup() : void from class com.williamfiset.algorithms.datastructures.stack.StackTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	public to private in method private inputs() : List<Stack<Integer>> from class com.williamfiset.algorithms.datastructures.stack.StackTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_MODIFIER, Add Method Modifier Add Method Modifier	static in method private inputs() : List<Stack<Integer>> from class com.williamfiset.algorithms.datastructures.stack.StackTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,PARAMETERIZE_VARIABLE, Parameterize Variable Parameterize Variable	stack : Stack to stack : Stack<Integer> in method public testEmptyStack(stack Stack<Integer>) : void from class com.williamfiset.algorithms.datastructures.stack.StackTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	stack : Stack to stack : Stack<Integer> in method public testEmptyStack(stack Stack<Integer>) : void from class com.williamfiset.algorithms.datastructures.stack.StackTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@ParameterizedTest in method public testEmptyStack(stack Stack<Integer>) : void from class com.williamfiset.algorithms.datastructures.stack.StackTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@MethodSource("inputs") in method public testEmptyStack(stack Stack<Integer>) : void from class com.williamfiset.algorithms.datastructures.stack.StackTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Test in method public testEmptyStack() : void from class com.williamfiset.algorithms.datastructures.stack.StackTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,PARAMETERIZE_VARIABLE, Parameterize Variable Parameterize Variable	stack : Stack<Integer> to stack : Stack<Integer> in method public testPush(stack Stack<Integer>) : void from class com.williamfiset.algorithms.datastructures.stack.StackTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@ParameterizedTest in method public testPush(stack Stack<Integer>) : void from class com.williamfiset.algorithms.datastructures.stack.StackTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@MethodSource("inputs") in method public testPush(stack Stack<Integer>) : void from class com.williamfiset.algorithms.datastructures.stack.StackTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Test in method public testPush() : void from class com.williamfiset.algorithms.datastructures.stack.StackTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,PARAMETERIZE_VARIABLE, Parameterize Variable Parameterize Variable	stack : Stack<Integer> to stack : Stack<Integer> in method public testPeek(stack Stack<Integer>) : void from class com.williamfiset.algorithms.datastructures.stack.StackTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@ParameterizedTest in method public testPeek(stack Stack<Integer>) : void from class com.williamfiset.algorithms.datastructures.stack.StackTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@MethodSource("inputs") in method public testPeek(stack Stack<Integer>) : void from class com.williamfiset.algorithms.datastructures.stack.StackTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Test in method public testPeek() : void from class com.williamfiset.algorithms.datastructures.stack.StackTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,PARAMETERIZE_VARIABLE, Parameterize Variable Parameterize Variable	stack : Stack<Integer> to stack : Stack<Integer> in method public testPop(stack Stack<Integer>) : void from class com.williamfiset.algorithms.datastructures.stack.StackTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@ParameterizedTest in method public testPop(stack Stack<Integer>) : void from class com.williamfiset.algorithms.datastructures.stack.StackTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@MethodSource("inputs") in method public testPop(stack Stack<Integer>) : void from class com.williamfiset.algorithms.datastructures.stack.StackTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Test in method public testPop() : void from class com.williamfiset.algorithms.datastructures.stack.StackTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,PARAMETERIZE_VARIABLE, Parameterize Variable Parameterize Variable	stack : Stack<Integer> to stack : Stack<Integer> in method public testExhaustively(stack Stack<Integer>) : void from class com.williamfiset.algorithms.datastructures.stack.StackTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@ParameterizedTest in method public testExhaustively(stack Stack<Integer>) : void from class com.williamfiset.algorithms.datastructures.stack.StackTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@MethodSource("inputs") in method public testExhaustively(stack Stack<Integer>) : void from class com.williamfiset.algorithms.datastructures.stack.StackTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Test in method public testExhaustively() : void from class com.williamfiset.algorithms.datastructures.stack.StackTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setup() : void from class com.williamfiset.algorithms.datastructures.suffixarray.SuffixArrayTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setup() : void from class com.williamfiset.algorithms.datastructures.suffixarray.SuffixArrayTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testBadTrieDelete1() : void from class com.williamfiset.algorithms.datastructures.trie.TrieTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testBadTrieDelete2() : void from class com.williamfiset.algorithms.datastructures.trie.TrieTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testBadTrieDelete3() : void from class com.williamfiset.algorithms.datastructures.trie.TrieTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testBadTrieInsert() : void from class com.williamfiset.algorithms.datastructures.trie.TrieTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testBadTrieCount() : void from class com.williamfiset.algorithms.datastructures.trie.TrieTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testBadTrieContains() : void from class com.williamfiset.algorithms.datastructures.trie.TrieTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setup() : void from class com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterativeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setup() : void from class com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterativeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testNullGraphInput() : void from class com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterativeTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setUp() : void from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyListTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setUp() : void from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyListTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setup() : void from class com.williamfiset.algorithms.graphtheory.FloydWarshallSolverTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setup() : void from class com.williamfiset.algorithms.graphtheory.FloydWarshallSolverTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public cycleInGraph() : void from class com.williamfiset.algorithms.graphtheory.KahnsTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public nullGraphConstructor() : void from class com.williamfiset.algorithms.graphtheory.KosarajuTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public nullGraphConstructor() : void from class com.williamfiset.algorithms.graphtheory.TarjanSccSolverAdjacencyListTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testTspRecursiveInvalidStartNode() : void from class com.williamfiset.algorithms.graphtheory.TravelingSalesmanProblemTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public testTspIterativeInvalidStartNode() : void from class com.williamfiset.algorithms.graphtheory.TravelingSalesmanProblemTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalStateException.class) to @Test in method public testTspRecursiveNonSquareMatrix() : void from class com.williamfiset.algorithms.graphtheory.TravelingSalesmanProblemTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalStateException.class) to @Test in method public testTspIterativeNonSquareMatrix() : void from class com.williamfiset.algorithms.graphtheory.TravelingSalesmanProblemTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalStateException.class) to @Test in method public testTspRecursiveSmallGraph() : void from class com.williamfiset.algorithms.graphtheory.TravelingSalesmanProblemTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalStateException.class) to @Test in method public testTspIterativeSmallGraph() : void from class com.williamfiset.algorithms.graphtheory.TravelingSalesmanProblemTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setUp() : void from class com.williamfiset.algorithms.graphtheory.networkflow.BipartiteGraphCheckAdjacencyListTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setUp() : void from class com.williamfiset.algorithms.graphtheory.networkflow.BipartiteGraphCheckAdjacencyListTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setUp() : void from class com.williamfiset.algorithms.graphtheory.networkflow.MaxFlowTests
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setUp() : void from class com.williamfiset.algorithms.graphtheory.networkflow.MaxFlowTests
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setUp() : void from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowTests
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setUp() : void from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowTests
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = IllegalArgumentException.class) to @Test in method public emptyTreeThrowsException() : void from class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphismTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,RENAME_METHOD, Rename Method Rename Method	public testCoverage1() : void renamed to public testCoverage(val int  expected int) : void in class com.williamfiset.algorithms.search.InterpolationSearchTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_PARAMETER, Add Parameter Add Parameter	val : int in method public testCoverage(val int  expected int) : void from class com.williamfiset.algorithms.search.InterpolationSearchTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_PARAMETER, Add Parameter Add Parameter	expected : int in method public testCoverage(val int  expected int) : void from class com.williamfiset.algorithms.search.InterpolationSearchTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@ParameterizedTest(name = "Search value: {0}  Expected index: {1}") in method public testCoverage(val int  expected int) : void from class com.williamfiset.algorithms.search.InterpolationSearchTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@MethodSource("inputs") in method public testCoverage(val int  expected int) : void from class com.williamfiset.algorithms.search.InterpolationSearchTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Test in method public testCoverage1() : void from class com.williamfiset.algorithms.search.InterpolationSearchTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setup() : void from class com.williamfiset.algorithms.strings.BoyerMooreStringSearchTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setup() : void from class com.williamfiset.algorithms.strings.BoyerMooreStringSearchTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@BeforeEach in method public setup() : void from class com.williamfiset.algorithms.strings.ZAlgorithmTest
04d5d2f41e0ef33eb6e5e8c5179e6b5ee938b0a8,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Before in method public setup() : void from class com.williamfiset.algorithms.strings.ZAlgorithmTest
d83cae8cb3e9f9c78c173b1b1f560f070e757d7b,RENAME_METHOD, Rename Method Rename Method	private buildTree(i int  tl int  tr int  values int[]) : void renamed to private buildSegmentTree(i int  tl int  tr int  values long[]) : void in class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
d83cae8cb3e9f9c78c173b1b1f560f070e757d7b,RENAME_METHOD, Rename Method Rename Method	private sumQuery2(i int  tl int  tr int  l int  r int) : long renamed to private rangeQuery2(i int  tl int  tr int  l int  r int) : long in class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
d83cae8cb3e9f9c78c173b1b1f560f070e757d7b,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	t : Integer[] to t : long[] in class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
d83cae8cb3e9f9c78c173b1b1f560f070e757d7b,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private t : long[] from class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
d83cae8cb3e9f9c78c173b1b1f560f070e757d7b,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private n : int from class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
d83cae8cb3e9f9c78c173b1b1f560f070e757d7b,EXTRACT_OPERATION, Extract Method Extract Method	private rangeSumQueryExample() : void extracted from public main(args String[]) : void in class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
d83cae8cb3e9f9c78c173b1b1f560f070e757d7b,EXTRACT_OPERATION, Extract Method Extract Method	private rangeMinQueryExample() : void extracted from public main(args String[]) : void in class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
d83cae8cb3e9f9c78c173b1b1f560f070e757d7b,EXTRACT_OPERATION, Extract Method Extract Method	private rangeMaxQueryExample() : void extracted from public main(args String[]) : void in class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
d83cae8cb3e9f9c78c173b1b1f560f070e757d7b,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	values : int[] to values : long[] in method private rangeSumQueryExample() : void from class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
d83cae8cb3e9f9c78c173b1b1f560f070e757d7b,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	values : int[] to values : long[] in method private rangeMinQueryExample() : void from class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
d83cae8cb3e9f9c78c173b1b1f560f070e757d7b,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	values : int[] to values : long[] in method private rangeMaxQueryExample() : void from class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
d83cae8cb3e9f9c78c173b1b1f560f070e757d7b,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	values : int[] to values : long[] in method public RangeQueryPointUpdateSegmentTree(values long[]  op Operation) from class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
d83cae8cb3e9f9c78c173b1b1f560f070e757d7b,ADD_PARAMETER, Add Parameter Add Parameter	op : Operation in method public RangeQueryPointUpdateSegmentTree(values long[]  op Operation) from class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
d83cae8cb3e9f9c78c173b1b1f560f070e757d7b,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	values : int[] to values : long[] in method private buildSegmentTree(i int  tl int  tr int  values long[]) : void from class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
d83cae8cb3e9f9c78c173b1b1f560f070e757d7b,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	newValue : int to newValue : long in method public update(i int  newValue long) : void from class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
d83cae8cb3e9f9c78c173b1b1f560f070e757d7b,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	newValue : int to newValue : long in method private update(at int  pos int  tl int  tr int  newValue long) : void from class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
d83cae8cb3e9f9c78c173b1b1f560f070e757d7b,RENAME_METHOD, Rename Method Rename Method	public testRandomPointQueries() : void renamed to public testRandomPointUpdatesAndSumRangeQueries() : void in class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTreeTest
d83cae8cb3e9f9c78c173b1b1f560f070e757d7b,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	values : int[] to values : long[] in method public testSumQuery() : void from class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTreeTest
d83cae8cb3e9f9c78c173b1b1f560f070e757d7b,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	ar : int[] to ar : long[] in method public testAllSumQueries() : void from class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTreeTest
d83cae8cb3e9f9c78c173b1b1f560f070e757d7b,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	ar : int[] to ar : long[] in method public testRandomPointUpdatesAndSumRangeQueries() : void from class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTreeTest
d83cae8cb3e9f9c78c173b1b1f560f070e757d7b,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	randValue : int to randValue : long in method public testRandomPointUpdatesAndSumRangeQueries() : void from class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTreeTest
d83cae8cb3e9f9c78c173b1b1f560f070e757d7b,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	values : int[] to values : long[] in method private bruteForceSum(values long[]  l int  r int) : long from class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTreeTest
85041784874a44ca81cab13fbe2eccccbae60ed6,MOVE_CLASS, Move Class Move Class	MinimumWeightPerfectMatching moved to com.williamfiset.algorithms.dp.MinimumWeightPerfectMatching
9345fcae35303fdd258b1cae2087811ee25257df,MOVE_RENAME_CLASS, Move And Rename Class Move And Rename Class	ConvexPolygonCut.PT moved and renamed to ConvexPolygonCutWithLineSegment.Pt
9345fcae35303fdd258b1cae2087811ee25257df,RENAME_CLASS, Rename Class Rename Class	ConvexPolygonCut renamed to ConvexPolygonCutWithLineSegment
9345fcae35303fdd258b1cae2087811ee25257df,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private EPS : double from class ConvexPolygonCutWithLineSegment
9345fcae35303fdd258b1cae2087811ee25257df,ADD_ATTRIBUTE_MODIFIER, Add Attribute Modifier Add Attribute Modifier	final in attribute private EPS : double from class ConvexPolygonCutWithLineSegment
9345fcae35303fdd258b1cae2087811ee25257df,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	res : List<PT> to res : List<Pt> in method package cut(poly Pt[]  p1 Pt  p2 Pt) : Pt[] from class ConvexPolygonCutWithLineSegment
9345fcae35303fdd258b1cae2087811ee25257df,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	poly : PT[] to poly : Pt[] in method package cut(poly Pt[]  p1 Pt  p2 Pt) : Pt[] from class ConvexPolygonCutWithLineSegment
9345fcae35303fdd258b1cae2087811ee25257df,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	p1 : PT to p1 : Pt in method package cut(poly Pt[]  p1 Pt  p2 Pt) : Pt[] from class ConvexPolygonCutWithLineSegment
9345fcae35303fdd258b1cae2087811ee25257df,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	p2 : PT to p2 : Pt in method package cut(poly Pt[]  p1 Pt  p2 Pt) : Pt[] from class ConvexPolygonCutWithLineSegment
9345fcae35303fdd258b1cae2087811ee25257df,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	PT[] to Pt[] in method package cut(poly Pt[]  p1 Pt  p2 Pt) : Pt[] from class ConvexPolygonCutWithLineSegment
9345fcae35303fdd258b1cae2087811ee25257df,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	public to package in method package cut(poly Pt[]  p1 Pt  p2 Pt) : Pt[] from class ConvexPolygonCutWithLineSegment
9345fcae35303fdd258b1cae2087811ee25257df,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	private to package in method package orientation(ax double  ay double  bx double  by double  cx double  cy double) : int from class ConvexPolygonCutWithLineSegment
9345fcae35303fdd258b1cae2087811ee25257df,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	PT to Pt in method package intersect(x1 double  y1 double  x2 double  y2 double  x3 double  y3 double  x4 double  y4 double) : Pt from class ConvexPolygonCutWithLineSegment
9345fcae35303fdd258b1cae2087811ee25257df,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	private to package in method package intersect(x1 double  y1 double  x2 double  y2 double  x3 double  y3 double  x4 double  y4 double) : Pt from class ConvexPolygonCutWithLineSegment
9345fcae35303fdd258b1cae2087811ee25257df,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	rightPolygon : PT[] to poly1 : Pt[] in method public main(args String[]) : void from class ConvexPolygonCutWithLineSegment
9345fcae35303fdd258b1cae2087811ee25257df,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	polygon : PT[] to squarePolygon : Pt[] in method public main(args String[]) : void from class ConvexPolygonCutWithLineSegment
9345fcae35303fdd258b1cae2087811ee25257df,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	pt1 : PT to p1 : Pt in method public main(args String[]) : void from class ConvexPolygonCutWithLineSegment
9345fcae35303fdd258b1cae2087811ee25257df,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	pt2 : PT to p2 : Pt in method public main(args String[]) : void from class ConvexPolygonCutWithLineSegment
9345fcae35303fdd258b1cae2087811ee25257df,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	leftPolygon : PT[] to poly2 : Pt[] in method public main(args String[]) : void from class ConvexPolygonCutWithLineSegment
9345fcae35303fdd258b1cae2087811ee25257df,RENAME_VARIABLE, Rename Variable Rename Variable	rightPolygon : PT[] to poly1 : Pt[] in method public main(args String[]) : void from class ConvexPolygonCutWithLineSegment
9345fcae35303fdd258b1cae2087811ee25257df,RENAME_VARIABLE, Rename Variable Rename Variable	polygon : PT[] to squarePolygon : Pt[] in method public main(args String[]) : void from class ConvexPolygonCutWithLineSegment
9345fcae35303fdd258b1cae2087811ee25257df,RENAME_VARIABLE, Rename Variable Rename Variable	pt1 : PT to p1 : Pt in method public main(args String[]) : void from class ConvexPolygonCutWithLineSegment
9345fcae35303fdd258b1cae2087811ee25257df,RENAME_VARIABLE, Rename Variable Rename Variable	pt2 : PT to p2 : Pt in method public main(args String[]) : void from class ConvexPolygonCutWithLineSegment
9345fcae35303fdd258b1cae2087811ee25257df,RENAME_VARIABLE, Rename Variable Rename Variable	leftPolygon : PT[] to poly2 : Pt[] in method public main(args String[]) : void from class ConvexPolygonCutWithLineSegment
5b9a100e4c4eaf42509d3e618744017ce0ea10f5,RENAME_ATTRIBUTE, Rename Attribute Rename Attribute	onStack : boolean[] to visited : boolean[] in class com.williamfiset.algorithms.graphtheory.TarjanSccSolverAdjacencyList
af6ef7e9d42da93e37929fc204227b31c5c5e3a3,INLINE_VARIABLE, Inline Variable Inline Variable	edges : List<Edge> in method private dfs(node int  flow long) : long from class com.williamfiset.algorithms.graphtheory.networkflow.examples.CapacityScalingExample.CapacityScalingSolver
d1edf4f8ad8cf6f6ca94775b3419eee43166b3f3,RENAME_METHOD, Rename Method Rename Method	private topologicalSortDFS(i int  at int  visited boolean[]  ordering int[]  adjList Map<Integer List<Edge>>) : int renamed to private dfs(i int  at int  visited boolean[]  ordering int[]  graph Map<Integer List<Edge>>) : int in class TopologicalSortAdjacencyList
d1edf4f8ad8cf6f6ca94775b3419eee43166b3f3,RENAME_PARAMETER, Rename Parameter Rename Parameter	adjList : Map<Integer List<Edge>> to graph : Map<Integer List<Edge>> in method public topologicalSort(graph Map<Integer List<Edge>>  numNodes int) : int[] from class TopologicalSortAdjacencyList
d1edf4f8ad8cf6f6ca94775b3419eee43166b3f3,RENAME_PARAMETER, Rename Parameter Rename Parameter	adjList : Map<Integer List<Edge>> to graph : Map<Integer List<Edge>> in method public dagShortestPath(graph Map<Integer List<Edge>>  start int  numNodes int) : Integer[] from class TopologicalSortAdjacencyList
d1edf4f8ad8cf6f6ca94775b3419eee43166b3f3,RENAME_VARIABLE, Rename Variable Rename Variable	adjList : Map<Integer List<Edge>> to graph : Map<Integer List<Edge>> in method public main(args String[]) : void from class TopologicalSortAdjacencyList
d1edf4f8ad8cf6f6ca94775b3419eee43166b3f3,RENAME_PARAMETER, Rename Parameter Rename Parameter	adjList : Map<Integer List<Edge>> to graph : Map<Integer List<Edge>> in method private dfs(i int  at int  visited boolean[]  ordering int[]  graph Map<Integer List<Edge>>) : int from class TopologicalSortAdjacencyList
755837fa366d552b85307da156256bbd90446836,RENAME_METHOD, Rename Method Rename Method	public createGraph(n int) : List<List<Integer>> renamed to public createEmptyGraph(n int) : List<List<Integer>> in class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphism
cde537c9ef0e66803affb95a2b0a07c19bd3f078,RENAME_VARIABLE, Rename Variable Rename Variable	s : String to str : String in method public main(args String[]) : void from class RabinKarp
cde537c9ef0e66803affb95a2b0a07c19bd3f078,RENAME_VARIABLE, Rename Variable Rename Variable	p : String to pat : String in method public main(args String[]) : void from class RabinKarp
cde537c9ef0e66803affb95a2b0a07c19bd3f078,MOVE_SOURCE_FOLDER, Move Source Folder Move Source Folder	 to StringAlgorithms
cde537c9ef0e66803affb95a2b0a07c19bd3f078,MOVE_SOURCE_FOLDER, Move Source Folder Move Source Folder	 to GraphTheory
80a2593fca238d47636b44bb08c2323d8b4e5a9d,RENAME_PARAMETER, Rename Parameter Rename Parameter	kk : Key to value : int in method public Node(value int) from class com.williamfiset.algorithms.datastructures.skiplist.SkipList.Node
80a2593fca238d47636b44bb08c2323d8b4e5a9d,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	kk : Key to value : int in method public Node(value int) from class com.williamfiset.algorithms.datastructures.skiplist.SkipList.Node
80a2593fca238d47636b44bb08c2323d8b4e5a9d,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private rand : Random from class com.williamfiset.algorithms.datastructures.skiplist.SkipList
80a2593fca238d47636b44bb08c2323d8b4e5a9d,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private height : int from class com.williamfiset.algorithms.datastructures.skiplist.SkipList
80a2593fca238d47636b44bb08c2323d8b4e5a9d,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private head : Node from class com.williamfiset.algorithms.datastructures.skiplist.SkipList
80a2593fca238d47636b44bb08c2323d8b4e5a9d,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private tail : Node from class com.williamfiset.algorithms.datastructures.skiplist.SkipList
80a2593fca238d47636b44bb08c2323d8b4e5a9d,EXTRACT_OPERATION, Extract Method Extract Method	private setHeadTail(height int  nLeft Node  nRight Node) : void extracted from public SkipList(height int  minKey Key  maxKey Key  h int) in class com.williamfiset.algorithms.datastructures.skiplist.SkipList
80a2593fca238d47636b44bb08c2323d8b4e5a9d,PARAMETERIZE_VARIABLE, Parameterize Variable Parameterize Variable	currLeft : Node to nLeft : Node in method private setHeadTail(height int  nLeft Node  nRight Node) : void from class com.williamfiset.algorithms.datastructures.skiplist.SkipList
80a2593fca238d47636b44bb08c2323d8b4e5a9d,PARAMETERIZE_VARIABLE, Parameterize Variable Parameterize Variable	currRight : Node to nRight : Node in method private setHeadTail(height int  nLeft Node  nRight Node) : void from class com.williamfiset.algorithms.datastructures.skiplist.SkipList
80a2593fca238d47636b44bb08c2323d8b4e5a9d,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	minKey : Key to minValue : int in method public SkipList(height int  minValue int  maxValue int) from class com.williamfiset.algorithms.datastructures.skiplist.SkipList
80a2593fca238d47636b44bb08c2323d8b4e5a9d,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	maxKey : Key to maxValue : int in method public SkipList(height int  minValue int  maxValue int) from class com.williamfiset.algorithms.datastructures.skiplist.SkipList
80a2593fca238d47636b44bb08c2323d8b4e5a9d,RENAME_PARAMETER, Rename Parameter Rename Parameter	minKey : Key to minValue : int in method public SkipList(height int  minValue int  maxValue int) from class com.williamfiset.algorithms.datastructures.skiplist.SkipList
80a2593fca238d47636b44bb08c2323d8b4e5a9d,RENAME_PARAMETER, Rename Parameter Rename Parameter	maxKey : Key to maxValue : int in method public SkipList(height int  minValue int  maxValue int) from class com.williamfiset.algorithms.datastructures.skiplist.SkipList
80a2593fca238d47636b44bb08c2323d8b4e5a9d,REMOVE_PARAMETER, Remove Parameter Remove Parameter	h : int in method public SkipList(height int  minKey Key  maxKey Key  h int) from class com.williamfiset.algorithms.datastructures.skiplist.SkipList
80a2593fca238d47636b44bb08c2323d8b4e5a9d,RENAME_ATTRIBUTE, Rename Attribute Rename Attribute	leftDist : int to index : int in class com.williamfiset.algorithms.datastructures.skiplist.SkipList.Node
80a2593fca238d47636b44bb08c2323d8b4e5a9d,RENAME_PARAMETER, Rename Parameter Rename Parameter	n2 : Node to insertNode : Node in method private insert(startNode Node  insertNode Node  lower Node  insertHeight int  distance int) : void from class com.williamfiset.algorithms.datastructures.skiplist.SkipList
80a2593fca238d47636b44bb08c2323d8b4e5a9d,ADD_PARAMETER, Add Parameter Add Parameter	startNode : Node in method private insert(startNode Node  insertNode Node  lower Node  insertHeight int  distance int) : void from class com.williamfiset.algorithms.datastructures.skiplist.SkipList
80a2593fca238d47636b44bb08c2323d8b4e5a9d,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	public to private in method private insert(startNode Node  insertNode Node  lower Node  insertHeight int  distance int) : void from class com.williamfiset.algorithms.datastructures.skiplist.SkipList
80a2593fca238d47636b44bb08c2323d8b4e5a9d,MOVE_OPERATION, Move Method Move Method	public insert(n2 Node  lower Node  insertHeight int  distance int) : void from class com.williamfiset.algorithms.datastructures.skiplist.SkipList.Node to private insert(startNode Node  insertNode Node  lower Node  insertHeight int  distance int) : void from class com.williamfiset.algorithms.datastructures.skiplist.SkipList
81d084f7eae21b9e01022004c8b5cac5729ec593,EXTRACT_VARIABLE, Extract Variable Extract Variable	cap : long in method private bfs() : boolean from class com.williamfiset.algorithms.graphtheory.networkflow.Dinics
575f7620c895e3d1d408eeddbd473efe6d532157,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public rabinKarp(text String  pattern String) : List<Integer> from class RabinKarp
575f7620c895e3d1d408eeddbd473efe6d532157,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public rabinKarpBackwards(text String  pattern String) : List<Integer> from class RabinKarp
575f7620c895e3d1d408eeddbd473efe6d532157,ADD_ATTRIBUTE_MODIFIER, Add Attribute Modifier Add Attribute Modifier	static in attribute private N_HASHES : int from class RabinKarp
575f7620c895e3d1d408eeddbd473efe6d532157,MOVE_ATTRIBUTE, Move Attribute Move Attribute	private N_HASHES : int from class StringSet to private N_HASHES : int from class RabinKarp
575f7620c895e3d1d408eeddbd473efe6d532157,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	firstValue : int to firstValue : char in method private addLeft(rollingHash long  firstValue char  modIndex int  len int) : long from class RabinKarp
575f7620c895e3d1d408eeddbd473efe6d532157,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	public to private in method private addLeft(rollingHash long  firstValue char  modIndex int  len int) : long from class RabinKarp
575f7620c895e3d1d408eeddbd473efe6d532157,ADD_METHOD_MODIFIER, Add Method Modifier Add Method Modifier	static in method private addLeft(rollingHash long  firstValue char  modIndex int  len int) : long from class RabinKarp
575f7620c895e3d1d408eeddbd473efe6d532157,MOVE_OPERATION, Move Method Move Method	public addLeft(rollingHash long  firstValue int  modIndex int  len int) : long from class StringSet to private addLeft(rollingHash long  firstValue char  modIndex int  len int) : long from class RabinKarp
575f7620c895e3d1d408eeddbd473efe6d532157,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	lastValue : int to lastValue : char in method private removeRight(rollingHash long  lastValue char  modIndex int) : long from class RabinKarp
575f7620c895e3d1d408eeddbd473efe6d532157,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	public to private in method private removeRight(rollingHash long  lastValue char  modIndex int) : long from class RabinKarp
575f7620c895e3d1d408eeddbd473efe6d532157,ADD_METHOD_MODIFIER, Add Method Modifier Add Method Modifier	static in method private removeRight(rollingHash long  lastValue char  modIndex int) : long from class RabinKarp
575f7620c895e3d1d408eeddbd473efe6d532157,MOVE_OPERATION, Move Method Move Method	public removeRight(rollingHash long  lastValue int  modIndex int) : long from class StringSet to private removeRight(rollingHash long  lastValue char  modIndex int) : long from class RabinKarp
575f7620c895e3d1d408eeddbd473efe6d532157,ADD_METHOD_MODIFIER, Add Method Modifier Add Method Modifier	static in method public computeHash(str String) : long[] from class RabinKarp
575f7620c895e3d1d408eeddbd473efe6d532157,MOVE_OPERATION, Move Method Move Method	public computeHash(str String) : long[] from class StringSet to public computeHash(str String) : long[] from class RabinKarp
15ff73b7fb0881e3ca632fd24e1350f8ae957e84,MOVE_SOURCE_FOLDER, Move Source Folder Move Source Folder	com to src/main/java/com
15ff73b7fb0881e3ca632fd24e1350f8ae957e84,MOVE_SOURCE_FOLDER, Move Source Folder Move Source Folder	javatests to src/test/java/javatests
66febf87469c718f727f012aee741c30ed945825,MOVE_CLASS, Move Class Move Class	com.williamfiset.algorithms.graphtheory.MaximumCardinalityBipartiteMatchingAugmentingPathAdjacencyList moved to com.williamfiset.algorithms.graphtheory.networkflow.MaximumCardinalityBipartiteMatchingAugmentingPathAdjacencyList
66febf87469c718f727f012aee741c30ed945825,EXTRACT_OPERATION, Extract Method Extract Method	private createEmptyGraph(n int) : List<List<Integer>> extracted from public main(args String[]) : void in class com.williamfiset.algorithms.graphtheory.networkflow.MaximumCardinalityBipartiteMatchingAugmentingPathAdjacencyList
66febf87469c718f727f012aee741c30ed945825,INLINE_VARIABLE, Inline Variable Inline Variable	edges : List<Integer> in method private augment(graph List<List<Integer>>  visited int[]  next int[]  at int) : int from class com.williamfiset.algorithms.graphtheory.MaximumCardinalityBipartiteMatchingAugmentingPathAdjacencyList
66febf87469c718f727f012aee741c30ed945825,RENAME_VARIABLE, Rename Variable Rename Variable	node : int to oppositeNode : int in method private augment(graph List<List<Integer>>  visited int[]  next int[]  at int) : int from class com.williamfiset.algorithms.graphtheory.networkflow.MaximumCardinalityBipartiteMatchingAugmentingPathAdjacencyList
66febf87469c718f727f012aee741c30ed945825,RENAME_VARIABLE, Rename Variable Rename Variable	rightNode : int to node : int in method private augment(graph List<List<Integer>>  visited int[]  next int[]  at int) : int from class com.williamfiset.algorithms.graphtheory.networkflow.MaximumCardinalityBipartiteMatchingAugmentingPathAdjacencyList
f6817d029d0618f57b04172e8ba36f37fbf03051,MOVE_CLASS, Move Class Move Class	com.williamfiset.algorithms.graphtheory.TreeCenter moved to com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenter
f6817d029d0618f57b04172e8ba36f37fbf03051,MOVE_CLASS, Move Class Move Class	com.williamfiset.algorithms.graphtheory.TreeDiameter moved to com.williamfiset.algorithms.graphtheory.treealgorithms.TreeDiameter
f6817d029d0618f57b04172e8ba36f37fbf03051,MOVE_CLASS, Move Class Move Class	com.williamfiset.algorithms.graphtheory.TreeNode moved to com.williamfiset.algorithms.graphtheory.treealgorithms.TreeNode
f6817d029d0618f57b04172e8ba36f37fbf03051,MOVE_CLASS, Move Class Move Class	com.williamfiset.algorithms.graphtheory.RootingTree moved to com.williamfiset.algorithms.graphtheory.treealgorithms.RootingTree
f6817d029d0618f57b04172e8ba36f37fbf03051,MOVE_CLASS, Move Class Move Class	com.williamfiset.algorithms.graphtheory.TreeCanonicalFormAdjacencyList2 moved to com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCanonicalFormAdjacencyList2
f6817d029d0618f57b04172e8ba36f37fbf03051,ADD_VARIABLE_MODIFIER, Add Variable Modifier Add Variable Modifier	final in variable n : int in method public findTreeCenters(graph List<List<Integer>>) : List<Integer> from class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenter
f6817d029d0618f57b04172e8ba36f37fbf03051,RENAME_METHOD, Rename Method Rename Method	public createEmptyGraph(n int) : List<List<Integer>> renamed to public createEmptyTree(n int) : List<List<Integer>> in class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCanonicalFormAdjacencyList2
f6817d029d0618f57b04172e8ba36f37fbf03051,RENAME_METHOD, Rename Method Rename Method	public canonizeTree(graph List<List<Integer>>) : String renamed to public encodeTree(tree List<List<Integer>>) : String in class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCanonicalFormAdjacencyList2
f6817d029d0618f57b04172e8ba36f37fbf03051,RENAME_PARAMETER, Rename Parameter Rename Parameter	graph : List<List<Integer>> to tree : List<List<Integer>> in method public addUndirectedEdge(tree List<List<Integer>>  from int  to int) : void from class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCanonicalFormAdjacencyList2
f6817d029d0618f57b04172e8ba36f37fbf03051,ADD_METHOD_MODIFIER, Add Method Modifier Add Method Modifier	static in method public addUndirectedEdge(tree List<List<Integer>>  from int  to int) : void from class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCanonicalFormAdjacencyList2
f6817d029d0618f57b04172e8ba36f37fbf03051,RENAME_VARIABLE, Rename Variable Rename Variable	graph : List<List<Integer>> to tree : List<List<Integer>> in method public createEmptyTree(n int) : List<List<Integer>> from class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCanonicalFormAdjacencyList2
f6817d029d0618f57b04172e8ba36f37fbf03051,EXTRACT_VARIABLE, Extract Variable Extract Variable	root : int in method public encodeTree(tree List<List<Integer>>) : String from class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCanonicalFormAdjacencyList2
f6817d029d0618f57b04172e8ba36f37fbf03051,EXTRACT_VARIABLE, Extract Variable Extract Variable	edges : List<Integer> in method public encodeTree(tree List<List<Integer>>) : String from class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCanonicalFormAdjacencyList2
f6817d029d0618f57b04172e8ba36f37fbf03051,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	q : Queue<TreeNode> to q : Queue<Integer> in method public encodeTree(tree List<List<Integer>>) : String from class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCanonicalFormAdjacencyList2
f6817d029d0618f57b04172e8ba36f37fbf03051,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	leaf : Integer to leaf : int in method public encodeTree(tree List<List<Integer>>) : String from class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCanonicalFormAdjacencyList2
f6817d029d0618f57b04172e8ba36f37fbf03051,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	p : Integer to p : int in method public encodeTree(tree List<List<Integer>>) : String from class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCanonicalFormAdjacencyList2
f6817d029d0618f57b04172e8ba36f37fbf03051,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	next : Integer to next : int in method public encodeTree(tree List<List<Integer>>) : String from class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCanonicalFormAdjacencyList2
f6817d029d0618f57b04172e8ba36f37fbf03051,RENAME_PARAMETER, Rename Parameter Rename Parameter	graph : List<List<Integer>> to tree : List<List<Integer>> in method public encodeTree(tree List<List<Integer>>) : String from class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCanonicalFormAdjacencyList2
efac6c5e0c9e96400dbc976f5bfe2424fc1d8868,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	void to List<Integer> in method package rabinKarp(text String  pattern String) : List<Integer> from class RabinKarp
efac6c5e0c9e96400dbc976f5bfe2424fc1d8868,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	void to List<Integer> in method package rabinKarpBackwards(text String  pattern String) : List<Integer> from class RabinKarp
f6e0710ef8cc3361cb989fad145c78b36e597d66,ADD_METHOD_MODIFIER, Add Method Modifier Add Method Modifier	static in method public setBit(set int  i int) : int from class BitManipulations
f6e0710ef8cc3361cb989fad145c78b36e597d66,ADD_METHOD_MODIFIER, Add Method Modifier Add Method Modifier	static in method public isSet(set int  i int) : boolean from class BitManipulations
f6e0710ef8cc3361cb989fad145c78b36e597d66,ADD_METHOD_MODIFIER, Add Method Modifier Add Method Modifier	static in method public clearBit(set int  i int) : int from class BitManipulations
f6e0710ef8cc3361cb989fad145c78b36e597d66,ADD_METHOD_MODIFIER, Add Method Modifier Add Method Modifier	static in method public toggleBit(set int  i int) : int from class BitManipulations
f6e0710ef8cc3361cb989fad145c78b36e597d66,ADD_METHOD_MODIFIER, Add Method Modifier Add Method Modifier	static in method public setAll(n int) : int from class BitManipulations
f6e0710ef8cc3361cb989fad145c78b36e597d66,ADD_METHOD_MODIFIER, Add Method Modifier Add Method Modifier	static in method public isPowerOfTwo(n int) : boolean from class BitManipulations
b05f41a6b29f98e32f442aad5c13f724f3227bd8,EXTRACT_OPERATION, Extract Method Extract Method	package mainProgram() : void extracted from public main(Fiset String[]) : void in class NarrowArtGalleryRecursive
90c98db5da7a0bb29faa250becde9ffb8edac0ee,MOVE_CLASS, Move Class Move Class	com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlow.getAugmentingPath.Node moved to com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowJohnsons.getAugmentingPath.Node
90c98db5da7a0bb29faa250becde9ffb8edac0ee,REMOVE_VARIABLE_MODIFIER, Remove Variable Modifier Remove Variable Modifier	final in variable cap : long in method private bfs() : boolean from class com.williamfiset.algorithms.graphtheory.networkflow.Dinics
90c98db5da7a0bb29faa250becde9ffb8edac0ee,INLINE_OPERATION, Inline Method Inline Method	private findBottleNeck() : long inlined to public solve() : void in class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowWithBellmanFord
90c98db5da7a0bb29faa250becde9ffb8edac0ee,INLINE_OPERATION, Inline Method Inline Method	private findBottleNeck() : long inlined to public solve() : void in class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowWithBellmanFord
90c98db5da7a0bb29faa250becde9ffb8edac0ee,EXTRACT_VARIABLE, Extract Variable Extract Variable	bottleNeck : long in method public solve() : void from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowWithBellmanFord
90c98db5da7a0bb29faa250becde9ffb8edac0ee,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	protected to private in attribute private solved : boolean from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase
90c98db5da7a0bb29faa250becde9ffb8edac0ee,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to public in attribute public originalCost : long from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase.Edge
90c98db5da7a0bb29faa250becde9ffb8edac0ee,ADD_ATTRIBUTE_MODIFIER, Add Attribute Modifier Add Attribute Modifier	final in attribute public originalCost : long from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase.Edge
90c98db5da7a0bb29faa250becde9ffb8edac0ee,MOVE_RENAME_ATTRIBUTE, Move And Rename Attribute Move And Rename Attribute	package cost : long renamed to public originalCost : long and moved from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlow.Edge to class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase.Edge
90c98db5da7a0bb29faa250becde9ffb8edac0ee,MOVE_OPERATION, Move Method Move Method	private init() : void from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlow to private init() : void from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowJohnsons
90c98db5da7a0bb29faa250becde9ffb8edac0ee,MOVE_OPERATION, Move Method Move Method	private adjustEdgeCosts(dist long[]) : void from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlow to private adjustEdgeCosts(dist long[]) : void from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowJohnsons
90c98db5da7a0bb29faa250becde9ffb8edac0ee,MOVE_OPERATION, Move Method Move Method	private getAugmentingPath() : List<Edge> from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlow to private getAugmentingPath() : List<Edge> from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowJohnsons
90c98db5da7a0bb29faa250becde9ffb8edac0ee,EXTRACT_AND_MOVE_OPERATION, Extract And Move Method Extract And Move Method	public augment(bottleNeck long) : void extracted from private dfs(node int  flow long) : long in class com.williamfiset.algorithms.graphtheory.networkflow.CapacityScalingSolverAdjacencyList & moved to class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase.Edge
90c98db5da7a0bb29faa250becde9ffb8edac0ee,EXTRACT_AND_MOVE_OPERATION, Extract And Move Method Extract And Move Method	public augment(bottleNeck long) : void extracted from private dfs(at int  p int[]  flow long) : long in class com.williamfiset.algorithms.graphtheory.networkflow.Dinics & moved to class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase.Edge
90c98db5da7a0bb29faa250becde9ffb8edac0ee,EXTRACT_AND_MOVE_OPERATION, Extract And Move Method Extract And Move Method	public augment(bottleNeck long) : void extracted from private bfs() : long in class com.williamfiset.algorithms.graphtheory.networkflow.EdmondsKarpAdjacencyList & moved to class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase.Edge
90c98db5da7a0bb29faa250becde9ffb8edac0ee,EXTRACT_AND_MOVE_OPERATION, Extract And Move Method Extract And Move Method	public augment(bottleNeck long) : void extracted from private dfs(node int  flow long) : long in class com.williamfiset.algorithms.graphtheory.networkflow.FordFulkersonDfsSolverAdjacencyList & moved to class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase.Edge
621df41cf4510ad8bcdbde33707b3cf78962b007,RENAME_METHOD, Rename Method Rename Method	public testSimplePath() : void renamed to public smallExample() : void in class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
03c80a3256ea612b3f6fd4d568d1aa5eb4c15d9f,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	private to public in method public createGraph(n int) : List<List<Integer>> from class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphism
03c80a3256ea612b3f6fd4d568d1aa5eb4c15d9f,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	private to public in method public addUndirectedEdge(graph List<List<Integer>>  from int  to int) : void from class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphism
35ac36e9e0fa4b80d7f7c482d339945ff1fd9159,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public f(n int  k int) : int from class NarrowArtGalleryRecursive
35ac36e9e0fa4b80d7f7c482d339945ff1fd9159,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public f(n int  k int  c int) : int from class NarrowArtGalleryRecursive
f7161cdb117621bcd4e99fb27a755ad56767e0b3,EXTRACT_OPERATION, Extract Method Extract Method	public display(shift int) : void extracted from public display() : void in class LongestCommonSubstring.SuffixArray
f7161cdb117621bcd4e99fb27a755ad56767e0b3,EXTRACT_VARIABLE, Extract Variable Extract Variable	suffixArray : char[] in method public display(shift int) : void from class LongestCommonSubstring.SuffixArray
0d4ad3de258105e10fe2074bf15692d3a0049ae9,MOVE_SOURCE_FOLDER, Move Source Folder Move Source Folder	 to Math
9e59078f8d074e3867fea0f6cc2887f150e2e768,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	public to package in attribute package from : int from class com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample.Edge
9e59078f8d074e3867fea0f6cc2887f150e2e768,ADD_ATTRIBUTE_MODIFIER, Add Attribute Modifier Add Attribute Modifier	final in attribute package from : int from class com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample.Edge
9e59078f8d074e3867fea0f6cc2887f150e2e768,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	public to package in attribute package to : int from class com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample.Edge
9e59078f8d074e3867fea0f6cc2887f150e2e768,ADD_ATTRIBUTE_MODIFIER, Add Attribute Modifier Add Attribute Modifier	final in attribute package to : int from class com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample.Edge
9e59078f8d074e3867fea0f6cc2887f150e2e768,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	public to package in attribute package residual : Edge from class com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample.Edge
9e59078f8d074e3867fea0f6cc2887f150e2e768,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	public to package in attribute package flow : long from class com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample.Edge
9e59078f8d074e3867fea0f6cc2887f150e2e768,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	public to package in attribute package capacity : long from class com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample.Edge
9e59078f8d074e3867fea0f6cc2887f150e2e768,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	public to package in attribute package originalCapacity : long from class com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample.Edge
b670e202ff1c6f1deca723374e121c068081dc63,CHANGE_TYPE_DECLARATION_KIND, Change Type Declaration Kind Change Type Declaration Kind	class to interface in type com.williamfiset.algorithms.datastructures.stack.Stack
b670e202ff1c6f1deca723374e121c068081dc63,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = Exception.class) to @Test in method public testPopOnEmpty() : void from class com.williamfiset.algorithms.datastructures.stack.StackTest
b670e202ff1c6f1deca723374e121c068081dc63,EXTRACT_SUBCLASS, Extract Subclass Extract Subclass	com.williamfiset.algorithms.datastructures.stack.ArrayStack from class com.williamfiset.algorithms.datastructures.stack.Stack
b670e202ff1c6f1deca723374e121c068081dc63,PUSH_DOWN_ATTRIBUTE, Push Down Attribute Push Down Attribute	private list : java.util.LinkedList<T> from class com.williamfiset.algorithms.datastructures.stack.Stack to private list : java.util.LinkedList<T> from class com.williamfiset.algorithms.datastructures.stack.ListStack
b670e202ff1c6f1deca723374e121c068081dc63,PUSH_DOWN_OPERATION, Push Down Method Push Down Method	public size() : int from class com.williamfiset.algorithms.datastructures.stack.Stack to public size() : int from class com.williamfiset.algorithms.datastructures.stack.ArrayStack
b670e202ff1c6f1deca723374e121c068081dc63,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@Override in method public size() : int from class com.williamfiset.algorithms.datastructures.stack.ArrayStack
b670e202ff1c6f1deca723374e121c068081dc63,PUSH_DOWN_OPERATION, Push Down Method Push Down Method	public isEmpty() : boolean from class com.williamfiset.algorithms.datastructures.stack.Stack to public isEmpty() : boolean from class com.williamfiset.algorithms.datastructures.stack.ArrayStack
b670e202ff1c6f1deca723374e121c068081dc63,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@Override in method public isEmpty() : boolean from class com.williamfiset.algorithms.datastructures.stack.ArrayStack
b670e202ff1c6f1deca723374e121c068081dc63,PUSH_DOWN_OPERATION, Push Down Method Push Down Method	public push(elem T) : void from class com.williamfiset.algorithms.datastructures.stack.Stack to public push(elem T) : void from class com.williamfiset.algorithms.datastructures.stack.ArrayStack
b670e202ff1c6f1deca723374e121c068081dc63,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@Override in method public push(elem T) : void from class com.williamfiset.algorithms.datastructures.stack.ArrayStack
b670e202ff1c6f1deca723374e121c068081dc63,PUSH_DOWN_OPERATION, Push Down Method Push Down Method	public pop() : T from class com.williamfiset.algorithms.datastructures.stack.Stack to public pop() : T from class com.williamfiset.algorithms.datastructures.stack.ArrayStack
b670e202ff1c6f1deca723374e121c068081dc63,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@Override in method public pop() : T from class com.williamfiset.algorithms.datastructures.stack.ArrayStack
b670e202ff1c6f1deca723374e121c068081dc63,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@SuppressWarnings("unchecked") in method public pop() : T from class com.williamfiset.algorithms.datastructures.stack.ArrayStack
b670e202ff1c6f1deca723374e121c068081dc63,PUSH_DOWN_OPERATION, Push Down Method Push Down Method	public peek() : T from class com.williamfiset.algorithms.datastructures.stack.Stack to public peek() : T from class com.williamfiset.algorithms.datastructures.stack.ArrayStack
b670e202ff1c6f1deca723374e121c068081dc63,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@Override in method public peek() : T from class com.williamfiset.algorithms.datastructures.stack.ArrayStack
b670e202ff1c6f1deca723374e121c068081dc63,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@SuppressWarnings("unchecked") in method public peek() : T from class com.williamfiset.algorithms.datastructures.stack.ArrayStack
b670e202ff1c6f1deca723374e121c068081dc63,PUSH_DOWN_OPERATION, Push Down Method Push Down Method	public Stack(firstElem T) from class com.williamfiset.algorithms.datastructures.stack.Stack to public ListStack(firstElem T) from class com.williamfiset.algorithms.datastructures.stack.ListStack
b670e202ff1c6f1deca723374e121c068081dc63,PUSH_DOWN_OPERATION, Push Down Method Push Down Method	public iterator() : Iterator<T> from class com.williamfiset.algorithms.datastructures.stack.Stack to public iterator() : Iterator<T> from class com.williamfiset.algorithms.datastructures.stack.ListStack
bb59099c01aaf5e035ab6bb427c588415a187bd1,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@SuppressWarnings("unchecked") in method public createGraph(V int) : List<Edge>[] from class com.williamfiset.algorithms.graphtheory.BellmanFordAdjacencyList
bb59099c01aaf5e035ab6bb427c588415a187bd1,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@SuppressWarnings("unchecked") in method private initializeGraph() : void from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase
bb59099c01aaf5e035ab6bb427c588415a187bd1,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@SuppressWarnings("unchecked") in method private initializeEmptyFlowGraph() : void from class com.williamfiset.algorithms.graphtheory.networkflow.examples.CapacityScalingExample.NetworkFlowSolverBase
bb59099c01aaf5e035ab6bb427c588415a187bd1,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@SuppressWarnings("unchecked") in method private initializeEmptyFlowGraph() : void from class com.williamfiset.algorithms.graphtheory.networkflow.examples.EdmondsKarpExample.NetworkFlowSolverBase
79d07c3d554850103fa7f9808a2c8cb887ddbc09,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	package to public in class TernarySearchDiscrete
0d4960e78a68ade680e445f64f3de89d56d944f2,RENAME_CLASS, Rename Class Rename Class	com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCanonicalFormAdjacencyList2 renamed to com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCanonicalFormAdjacencyList
56a9286d154fcab55b17fd610fffe38c5689fda8,INLINE_VARIABLE, Inline Variable Inline Variable	edges : List<Integer> in method private setUp() : void from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
fd3bb676cb3a959ee9ac1800f165422c272a7d6d,RENAME_VARIABLE, Rename Variable Rename Variable	e : Edge to edge : Edge in method private solve() : void from class com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList
fd3bb676cb3a959ee9ac1800f165422c272a7d6d,REMOVE_PARAMETER, Remove Parameter Remove Parameter	ipq : MinIndexedDHeap<Edge> in method private relaxEdgesAtNode(nodeIndex int  ipq MinIndexedDHeap<Edge>) : void from class com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList
fd3bb676cb3a959ee9ac1800f165422c272a7d6d,RENAME_METHOD, Rename Method Rename Method	public prims(graph Map<Integer List<Edge>>  n int) : Long renamed to private addInitialEdges() : boolean in class com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyList
fd3bb676cb3a959ee9ac1800f165422c272a7d6d,EXTRACT_OPERATION, Extract Method Extract Method	private addEdges(nodeIndex int) : void extracted from public prims(graph Map<Integer List<Edge>>  n int) : Long in class com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyList
fd3bb676cb3a959ee9ac1800f165422c272a7d6d,REPLACE_VARIABLE_WITH_ATTRIBUTE, Replace Variable With Attribute Replace Variable With Attribute	visited : boolean[] to visited : boolean[] in method private addEdges(nodeIndex int) : void from class com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyList
fd3bb676cb3a959ee9ac1800f165422c272a7d6d,REPLACE_VARIABLE_WITH_ATTRIBUTE, Replace Variable With Attribute Replace Variable With Attribute	pq : PriorityQueue<Edge> to pq : PriorityQueue<Edge> in method private addEdges(nodeIndex int) : void from class com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyList
fd3bb676cb3a959ee9ac1800f165422c272a7d6d,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	Long to boolean in method private addInitialEdges() : boolean from class com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyList
fd3bb676cb3a959ee9ac1800f165422c272a7d6d,REMOVE_PARAMETER, Remove Parameter Remove Parameter	graph : Map<Integer List<Edge>> in method public prims(graph Map<Integer List<Edge>>  n int) : Long from class com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyList
fd3bb676cb3a959ee9ac1800f165422c272a7d6d,REMOVE_PARAMETER, Remove Parameter Remove Parameter	n : int in method public prims(graph Map<Integer List<Edge>>  n int) : Long from class com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyList
fd3bb676cb3a959ee9ac1800f165422c272a7d6d,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	public to private in method private addInitialEdges() : boolean from class com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyList
fd3bb676cb3a959ee9ac1800f165422c272a7d6d,REMOVE_METHOD_MODIFIER, Remove Method Modifier Remove Method Modifier	static in method public prims(graph Map<Integer List<Edge>>  n int) : Long from class com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyList
3037e90e666d8bec4c8c00b87e37e2bbba1b8555,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	public to private in class com.williamfiset.algorithms.graphtheory.FordFulkersonDfsSolverAdjacencyList.Edge
3037e90e666d8bec4c8c00b87e37e2bbba1b8555,RENAME_METHOD, Rename Method Rename Method	public createGraph(n int) : List<List<Edge>> renamed to private initializeGraph() : List<List<Edge>> in class com.williamfiset.algorithms.graphtheory.FordFulkersonDfsSolverAdjacencyList
3037e90e666d8bec4c8c00b87e37e2bbba1b8555,RENAME_PARAMETER, Rename Parameter Rename Parameter	graph : List<List<Edge>> to n : int in method public FordFulkersonDfsSolverAdjacencyList(n int  source int  sink int) from class com.williamfiset.algorithms.graphtheory.FordFulkersonDfsSolverAdjacencyList
3037e90e666d8bec4c8c00b87e37e2bbba1b8555,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	graph : List<List<Edge>> to n : int in method public FordFulkersonDfsSolverAdjacencyList(n int  source int  sink int) from class com.williamfiset.algorithms.graphtheory.FordFulkersonDfsSolverAdjacencyList
3037e90e666d8bec4c8c00b87e37e2bbba1b8555,REMOVE_PARAMETER, Remove Parameter Remove Parameter	n : int in method public createGraph(n int) : List<List<Edge>> from class com.williamfiset.algorithms.graphtheory.FordFulkersonDfsSolverAdjacencyList
3037e90e666d8bec4c8c00b87e37e2bbba1b8555,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	public to private in method private initializeGraph() : List<List<Edge>> from class com.williamfiset.algorithms.graphtheory.FordFulkersonDfsSolverAdjacencyList
3037e90e666d8bec4c8c00b87e37e2bbba1b8555,REMOVE_METHOD_MODIFIER, Remove Method Modifier Remove Method Modifier	static in method public createGraph(n int) : List<List<Edge>> from class com.williamfiset.algorithms.graphtheory.FordFulkersonDfsSolverAdjacencyList
3037e90e666d8bec4c8c00b87e37e2bbba1b8555,REMOVE_PARAMETER, Remove Parameter Remove Parameter	graph : List<List<Edge>> in method public addEdge(graph List<List<Edge>>  from int  to int  capacity int) : void from class com.williamfiset.algorithms.graphtheory.FordFulkersonDfsSolverAdjacencyList
3037e90e666d8bec4c8c00b87e37e2bbba1b8555,REMOVE_METHOD_MODIFIER, Remove Method Modifier Remove Method Modifier	static in method public addEdge(graph List<List<Edge>>  from int  to int  capacity int) : void from class com.williamfiset.algorithms.graphtheory.FordFulkersonDfsSolverAdjacencyList
0e0c7a372950fa0036815479ff3b9015d443b742,RENAME_ATTRIBUTE, Rename Attribute Rename Attribute	t : long[][] to dp : long[][] in class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour.MinSparseTable
0e0c7a372950fa0036815479ff3b9015d443b742,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	last : Integer[] to last : int[] in class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour
0e0c7a372950fa0036815479ff3b9015d443b742,RENAME_VARIABLE, Rename Variable Rename Variable	i : int to l : int in method public lca(id1 int  id2 int) : TreeNode from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour
0e0c7a372950fa0036815479ff3b9015d443b742,RENAME_VARIABLE, Rename Variable Rename Variable	j : int to r : int in method public lca(id1 int  id2 int) : TreeNode from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour
0e0c7a372950fa0036815479ff3b9015d443b742,RENAME_VARIABLE, Rename Variable Rename Variable	k : int to i : int in method public lca(id1 int  id2 int) : TreeNode from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour
0e0c7a372950fa0036815479ff3b9015d443b742,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	void to int in method private dfs(node TreeNode  height long  index int) : int from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour
0e0c7a372950fa0036815479ff3b9015d443b742,ADD_PARAMETER, Add Parameter Add Parameter	index : int in method private dfs(node TreeNode  height long  index int) : int from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour
0e0c7a372950fa0036815479ff3b9015d443b742,RENAME_ATTRIBUTE, Rename Attribute Rename Attribute	nodes : TreeNode[] to nodeOrder : TreeNode[] in class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour
c989ae70e9c64070a647070b2b3ece0dc7718974,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private id : int from class BridgesAdjacencyList
c989ae70e9c64070a647070b2b3ece0dc7718974,REMOVE_ATTRIBUTE_MODIFIER, Remove Attribute Modifier Remove Attribute Modifier	static in attribute package id : int from class BridgesAdjacencyList
c989ae70e9c64070a647070b2b3ece0dc7718974,EXTRACT_OPERATION, Extract Method Extract Method	public createGraph(n int) : List<List<Integer>> extracted from public main(args String[]) : void in class BridgesAdjacencyList
c989ae70e9c64070a647070b2b3ece0dc7718974,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	graph : List<List<Edge>> to graph : List<List<Integer>> in method public createGraph(n int) : List<List<Integer>> from class BridgesAdjacencyList
c989ae70e9c64070a647070b2b3ece0dc7718974,PARAMETERIZE_VARIABLE, Parameterize Variable Parameterize Variable	N : int to n : int in method public createGraph(n int) : List<List<Integer>> from class BridgesAdjacencyList
c989ae70e9c64070a647070b2b3ece0dc7718974,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	graph : List<List<Edge>> to graph : List<List<Integer>> in method public main(args String[]) : void from class BridgesAdjacencyList
c989ae70e9c64070a647070b2b3ece0dc7718974,RENAME_VARIABLE, Rename Variable Rename Variable	N : int to n : int in method public main(args String[]) : void from class BridgesAdjacencyList
c989ae70e9c64070a647070b2b3ece0dc7718974,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	List<Edge> to List<Integer> in method public findBridges(graph List<List<Integer>>  N int) : List<Integer> from class BridgesAdjacencyList
c989ae70e9c64070a647070b2b3ece0dc7718974,REMOVE_METHOD_MODIFIER, Remove Method Modifier Remove Method Modifier	static in method public findBridges(graph List<List<Edge>>  N int) : List<Edge> from class BridgesAdjacencyList
c989ae70e9c64070a647070b2b3ece0dc7718974,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	edges : List<Edge> to edges : List<Integer> in method private dfs(at int  parent int  bridges List<Integer>) : void from class BridgesAdjacencyList
c989ae70e9c64070a647070b2b3ece0dc7718974,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	to : int to to : Integer in method private dfs(at int  parent int  bridges List<Integer>) : void from class BridgesAdjacencyList
c989ae70e9c64070a647070b2b3ece0dc7718974,MERGE_PARAMETER, Merge Parameter Merge Parameter	[ids : int[]  low : int[]  visited : boolean[]  graph : List<List<Edge>>] to bridges : List<Integer> in method private dfs(at int  parent int  bridges List<Integer>) : void from class BridgesAdjacencyList
c989ae70e9c64070a647070b2b3ece0dc7718974,REMOVE_METHOD_MODIFIER, Remove Method Modifier Remove Method Modifier	static in method private dfs(at int  parent int  ids int[]  low int[]  visited boolean[]  graph List<List<Edge>>) : void from class BridgesAdjacencyList
c989ae70e9c64070a647070b2b3ece0dc7718974,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	graph : List<List<Edge>> to graph : List<List<Integer>> in method public addEdge(graph List<List<Integer>>  from int  to int) : void from class BridgesAdjacencyList
c989ae70e9c64070a647070b2b3ece0dc7718974,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public addEdge(graph List<List<Integer>>  from int  to int) : void from class BridgesAdjacencyList
5bb0fdf2b0a4e703519cecc4b03e9af6898426e9,RENAME_PARAMETER, Rename Parameter Rename Parameter	N : int to n : int in method public initializeEmptyGraph(n int) : List<List<Integer>> from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
aca68ad6ce71e5a156b6df32267e2b688750f5a1,MOVE_CLASS, Move Class Move Class	com.williamfiset.algorithms.graphtheory.FordFulkersonDfsSolverAdjacencyList moved to com.williamfiset.algorithms.graphtheory.networkflow.FordFulkersonDfsSolverAdjacencyList
172f3a7ecf517ce74522c2a0d4e75d4e48e98a28,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	package to public in class com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyList.Edge
172f3a7ecf517ce74522c2a0d4e75d4e48e98a28,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	private to public in class com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyList.Node
172f3a7ecf517ce74522c2a0d4e75d4e48e98a28,RENAME_PARAMETER, Rename Parameter Rename Parameter	nodeID : int to id : int in method public Node(id int  value double) from class com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyList.Node
172f3a7ecf517ce74522c2a0d4e75d4e48e98a28,RENAME_PARAMETER, Rename Parameter Rename Parameter	nodeValue : double to value : double in method public Node(id int  value double) from class com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyList.Node
172f3a7ecf517ce74522c2a0d4e75d4e48e98a28,REMOVE_PARAMETER, Remove Parameter Remove Parameter	graph : Map<Integer List<Edge>> in method public dijkstra(graph Map<Integer List<Edge>>  start int  end int  n int) : double from class com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyList
172f3a7ecf517ce74522c2a0d4e75d4e48e98a28,REMOVE_PARAMETER, Remove Parameter Remove Parameter	n : int in method public dijkstra(graph Map<Integer List<Edge>>  start int  end int  n int) : double from class com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyList
172f3a7ecf517ce74522c2a0d4e75d4e48e98a28,REMOVE_METHOD_MODIFIER, Remove Method Modifier Remove Method Modifier	static in method public dijkstra(graph Map<Integer List<Edge>>  start int  end int  n int) : double from class com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyList
172f3a7ecf517ce74522c2a0d4e75d4e48e98a28,REPLACE_VARIABLE_WITH_ATTRIBUTE, Replace Variable With Attribute Replace Variable With Attribute	dists : double[] to dist : double[] in method public dijkstra(start int  end int) : double from class com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyList
172f3a7ecf517ce74522c2a0d4e75d4e48e98a28,MOVE_ATTRIBUTE, Move Attribute Move Attribute	private EPS : double from class com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyList.Node to private EPS : double from class com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyList
f400c81f84fe5f594445f999dea93f72fd66055e,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	expected : List<Pair> to expected : List<Pair<Integer Integer>> in method public testTreeCase() : void from class com.williamfiset.algorithms.graphtheory.BridgesAdjacencyListTest
f400c81f84fe5f594445f999dea93f72fd66055e,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	expected : List<Pair> to expected : List<Pair<Integer Integer>> in method public graphWithCyclesTest() : void from class com.williamfiset.algorithms.graphtheory.BridgesAdjacencyListTest
f400c81f84fe5f594445f999dea93f72fd66055e,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	expected : List<Pair> to expected : List<Pair<Integer Integer>> in method public testGraphInSlides() : void from class com.williamfiset.algorithms.graphtheory.BridgesAdjacencyListTest
f400c81f84fe5f594445f999dea93f72fd66055e,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	expected : List<Pair> to expected : List<Pair<Integer Integer>> in method public testDisconnectedGraph() : void from class com.williamfiset.algorithms.graphtheory.BridgesAdjacencyListTest
f400c81f84fe5f594445f999dea93f72fd66055e,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	pair : Pair to pair : Pair<Integer Integer> in method private getSortedBridges(bridgeNodes List<Integer>) : List<Pair<Integer Integer>> from class com.williamfiset.algorithms.graphtheory.BridgesAdjacencyListTest
7bab9b9d39bf76e743e2a40a1bc6e9055a20ab4b,RENAME_METHOD, Rename Method Rename Method	package isSet(arr long[]  n int) : boolean renamed to public isNotSet(arr long[]  n int) : boolean in class com.williamfiset.algorithms.math.CompressedPrimeSieve
7bab9b9d39bf76e743e2a40a1bc6e9055a20ab4b,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	NUM_BITS : int to NUM_BITS : double in class com.williamfiset.algorithms.math.CompressedPrimeSieve
7bab9b9d39bf76e743e2a40a1bc6e9055a20ab4b,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private NUM_BITS : double from class com.williamfiset.algorithms.math.CompressedPrimeSieve
7bab9b9d39bf76e743e2a40a1bc6e9055a20ab4b,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private NUM_BITS_SHIFT : int from class com.williamfiset.algorithms.math.CompressedPrimeSieve
7bab9b9d39bf76e743e2a40a1bc6e9055a20ab4b,RENAME_VARIABLE, Rename Variable Rename Variable	LIMIT : int to limit : int in method public main(args String[]) : void from class com.williamfiset.algorithms.math.CompressedPrimeSieve
7bab9b9d39bf76e743e2a40a1bc6e9055a20ab4b,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private setBit(arr long[]  n int) : void from class com.williamfiset.algorithms.math.CompressedPrimeSieve
7bab9b9d39bf76e743e2a40a1bc6e9055a20ab4b,RENAME_VARIABLE, Rename Variable Rename Variable	num_chunks : int to numChunks : int in method public primeSieve(limit int) : long[] from class com.williamfiset.algorithms.math.CompressedPrimeSieve
7bab9b9d39bf76e743e2a40a1bc6e9055a20ab4b,RENAME_VARIABLE, Rename Variable Rename Variable	sqrt_limit : int to sqrtLimit : int in method public primeSieve(limit int) : long[] from class com.williamfiset.algorithms.math.CompressedPrimeSieve
7bab9b9d39bf76e743e2a40a1bc6e9055a20ab4b,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public primeSieve(limit int) : long[] from class com.williamfiset.algorithms.math.CompressedPrimeSieve
7bab9b9d39bf76e743e2a40a1bc6e9055a20ab4b,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public isNotSet(arr long[]  n int) : boolean from class com.williamfiset.algorithms.math.CompressedPrimeSieve
d6dbfdb595ab849f2927176ca9e5e1ee87149828,MOVE_CLASS, Move Class Move Class	SuffixArray moved to LongestCommonPrefixArray.SuffixArray
d6dbfdb595ab849f2927176ca9e5e1ee87149828,MOVE_CLASS, Move Class Move Class	SuffixArray moved to LongestRepeatedSubstring.SuffixArray
d6dbfdb595ab849f2927176ca9e5e1ee87149828,MOVE_CLASS, Move Class Move Class	SuffixArray moved to SubstringVerificationSuffixArray.SuffixArray
d6dbfdb595ab849f2927176ca9e5e1ee87149828,MOVE_CLASS, Move Class Move Class	SuffixArray moved to LongestCommonSubstring.SuffixArray
d6dbfdb595ab849f2927176ca9e5e1ee87149828,ADD_CLASS_MODIFIER, Add Class Modifier Add Class Modifier	static in class LongestCommonPrefixArray.SuffixArray
d6dbfdb595ab849f2927176ca9e5e1ee87149828,ADD_CLASS_MODIFIER, Add Class Modifier Add Class Modifier	static in class LongestRepeatedSubstring.SuffixArray
d6dbfdb595ab849f2927176ca9e5e1ee87149828,ADD_CLASS_MODIFIER, Add Class Modifier Add Class Modifier	static in class SubstringVerificationSuffixArray.SuffixArray
d6dbfdb595ab849f2927176ca9e5e1ee87149828,ADD_CLASS_MODIFIER, Add Class Modifier Add Class Modifier	static in class LongestCommonSubstring.SuffixArray
d6dbfdb595ab849f2927176ca9e5e1ee87149828,MOVE_OPERATION, Move Method Move Method	private fillIndexMap(strings String[]  indexMap int[]) : int from class SuffixArray to private fillIndexMap(strings String[]  indexMap int[]) : int from class LongestCommonSubstring
d6dbfdb595ab849f2927176ca9e5e1ee87149828,MOVE_OPERATION, Move Method Move Method	private constructText(strings String[]  TEXT_LENGTH int  SHIFT int) : int[] from class SuffixArray to private constructText(strings String[]  TEXT_LENGTH int  SHIFT int) : int[] from class LongestCommonSubstring
d6dbfdb595ab849f2927176ca9e5e1ee87149828,MOVE_OPERATION, Move Method Move Method	private computeTextLength(strings String[]) : int from class SuffixArray to private computeTextLength(strings String[]) : int from class LongestCommonSubstring
d6dbfdb595ab849f2927176ca9e5e1ee87149828,MOVE_OPERATION, Move Method Move Method	public lcs(strings String[]  K int) : TreeSet<String> from class SuffixArray to public lcs(strings String[]  K int) : TreeSet<String> from class LongestCommonSubstring
d6dbfdb595ab849f2927176ca9e5e1ee87149828,MOVE_OPERATION, Move Method Move Method	private removeColor(windowColorCountMap Map<Integer Integer>  windowColorCount int  lastColor int) : int from class SuffixArray to private removeColor(windowColorCountMap Map<Integer Integer>  windowColorCount int  lastColor int) : int from class LongestCommonSubstring
d6dbfdb595ab849f2927176ca9e5e1ee87149828,MOVE_OPERATION, Move Method Move Method	private addColor(windowColorCountMap Map<Integer Integer>  windowColorCount int  nextColor int) : int from class SuffixArray to private addColor(windowColorCountMap Map<Integer Integer>  windowColorCount int  nextColor int) : int from class LongestCommonSubstring
1c744e12470d09db6155172b2b0aa8539eea650c,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	t : long[] to t : Long[] in class com.williamfiset.algorithms.datastructures.segmenttree.MinQueryAssignUpdateSegmentTree
1c744e12470d09db6155172b2b0aa8539eea650c,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	lazy : long[] to lazy : Long[] in class com.williamfiset.algorithms.datastructures.segmenttree.MinQueryAssignUpdateSegmentTree
1c744e12470d09db6155172b2b0aa8539eea650c,EXTRACT_OPERATION, Extract Method Extract Method	private minFunction(a Long  b Long) : Long extracted from private rangeQuery1(i int  tl int  tr int  l int  r int) : long in class com.williamfiset.algorithms.datastructures.segmenttree.MinQueryAssignUpdateSegmentTree
1c744e12470d09db6155172b2b0aa8539eea650c,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	long to Long in method private rangeQuery1(i int  tl int  tr int  l int  r int) : Long from class com.williamfiset.algorithms.datastructures.segmenttree.MinQueryAssignUpdateSegmentTree
1c744e12470d09db6155172b2b0aa8539eea650c,RENAME_METHOD, Rename Method Rename Method	private function(a Long  b Long) : Long renamed to private sumFunction(a Long  b Long) : Long in class com.williamfiset.algorithms.datastructures.segmenttree.SumQuerySumUpdateSegmentTree
8a6ca02d93ee71e9a8f54e2f72e646c753c22dfd,MOVE_CLASS, Move Class Move Class	com.williamfiset.algorithms.graphtheory.examples.EagerPrimsAdjacencyList.Edge moved to com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample.Edge
8a6ca02d93ee71e9a8f54e2f72e646c753c22dfd,MOVE_CLASS, Move Class Move Class	com.williamfiset.algorithms.graphtheory.examples.EagerPrimsAdjacencyList.MinIndexedDHeap moved to com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample.MinIndexedDHeap
8a6ca02d93ee71e9a8f54e2f72e646c753c22dfd,MOVE_RENAME_CLASS, Move And Rename Class Move And Rename Class	com.williamfiset.algorithms.graphtheory.examples.EagerPrimsAdjacencyList moved and renamed to com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample.MinimumSpanningTreeSolver
8a6ca02d93ee71e9a8f54e2f72e646c753c22dfd,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	package to private in class com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample.Edge
8a6ca02d93ee71e9a8f54e2f72e646c753c22dfd,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	public to private in class com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample.MinimumSpanningTreeSolver
8a6ca02d93ee71e9a8f54e2f72e646c753c22dfd,ADD_CLASS_MODIFIER, Add Class Modifier Add Class Modifier	static in class com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample.MinimumSpanningTreeSolver
8a6ca02d93ee71e9a8f54e2f72e646c753c22dfd,EXTRACT_CLASS, Extract Class Extract Class	com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample from class com.williamfiset.algorithms.graphtheory.examples.EagerPrimsAdjacencyList
8a6ca02d93ee71e9a8f54e2f72e646c753c22dfd,MOVE_OPERATION, Move Method Move Method	public main(args String[]) : void from class com.williamfiset.algorithms.graphtheory.examples.EagerPrimsAdjacencyList to public main(args String[]) : void from class com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample
8a6ca02d93ee71e9a8f54e2f72e646c753c22dfd,INLINE_VARIABLE, Inline Variable Inline Variable	cost : Long in method public main(args String[]) : void from class com.williamfiset.algorithms.graphtheory.examples.EagerPrimsAdjacencyList
8a6ca02d93ee71e9a8f54e2f72e646c753c22dfd,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	solver : EagerPrimsAdjacencyList to solver : MinimumSpanningTreeSolver in method public main(args String[]) : void from class com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample
8a6ca02d93ee71e9a8f54e2f72e646c753c22dfd,MOVE_OPERATION, Move Method Move Method	package createEmptyGraph(n int) : List<List<Edge>> from class com.williamfiset.algorithms.graphtheory.examples.EagerPrimsAdjacencyList to private createEmptyGraph(n int) : List<List<Edge>> from class com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample
8a6ca02d93ee71e9a8f54e2f72e646c753c22dfd,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private createEmptyGraph(n int) : List<List<Edge>> from class com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample
8a6ca02d93ee71e9a8f54e2f72e646c753c22dfd,MOVE_OPERATION, Move Method Move Method	package addDirectedEdge(g List<List<Edge>>  from int  to int  cost int) : void from class com.williamfiset.algorithms.graphtheory.examples.EagerPrimsAdjacencyList to private addDirectedEdge(g List<List<Edge>>  from int  to int  cost int) : void from class com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample
8a6ca02d93ee71e9a8f54e2f72e646c753c22dfd,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private addDirectedEdge(g List<List<Edge>>  from int  to int  cost int) : void from class com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample
8a6ca02d93ee71e9a8f54e2f72e646c753c22dfd,MOVE_OPERATION, Move Method Move Method	package addUndirectedEdge(g List<List<Edge>>  from int  to int  cost int) : void from class com.williamfiset.algorithms.graphtheory.examples.EagerPrimsAdjacencyList to private addUndirectedEdge(g List<List<Edge>>  from int  to int  cost int) : void from class com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample
8a6ca02d93ee71e9a8f54e2f72e646c753c22dfd,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private addUndirectedEdge(g List<List<Edge>>  from int  to int  cost int) : void from class com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample
2cec4695af6f849a1913c2cc0c5ff2c555e6a31d,ADD_PARAMETER, Add Parameter Add Parameter	root : int in method private dfs(root int  at int  parent int) : void from class ArticulationPointsAdjacencyList
2cec4695af6f849a1913c2cc0c5ff2c555e6a31d,RENAME_ATTRIBUTE, Rename Attribute Rename Attribute	rootNodeChildren : int to rootNumChildren : int in class ArticulationPointsAdjacencyList
2cec4695af6f849a1913c2cc0c5ff2c555e6a31d,PARAMETERIZE_ATTRIBUTE, Parameterize Attribute Parameterize Attribute	ROOT : int to root : int in method private dfs(root int  at int  parent int) : void from class ArticulationPointsAdjacencyList
2cec4695af6f849a1913c2cc0c5ff2c555e6a31d,EXTRACT_OPERATION, Extract Method Extract Method	private getSortedBridges(bridgeNodes List<Integer>) : List<Pair<Integer Integer>> extracted from public testTreeCase() : void in class BridgesAdjacencyListIterativeTest
2cec4695af6f849a1913c2cc0c5ff2c555e6a31d,EXTRACT_OPERATION, Extract Method Extract Method	private getSortedBridges(bridgeNodes List<Integer>) : List<Pair<Integer Integer>> extracted from public graphWithCyclesTest() : void in class BridgesAdjacencyListIterativeTest
2cec4695af6f849a1913c2cc0c5ff2c555e6a31d,EXTRACT_OPERATION, Extract Method Extract Method	private getSortedBridges(bridgeNodes List<Integer>) : List<Pair<Integer Integer>> extracted from public testGraphInSlides() : void in class BridgesAdjacencyListIterativeTest
2cec4695af6f849a1913c2cc0c5ff2c555e6a31d,INLINE_VARIABLE, Inline Variable Inline Variable	bridges : List<Integer> in method public testTreeCase() : void from class BridgesAdjacencyListIterativeTest
2cec4695af6f849a1913c2cc0c5ff2c555e6a31d,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	actual : List<Pair> to bridges : List<Pair<Integer Integer>> in method private getSortedBridges(bridgeNodes List<Integer>) : List<Pair<Integer Integer>> from class BridgesAdjacencyListIterativeTest
2cec4695af6f849a1913c2cc0c5ff2c555e6a31d,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	actual : List<Pair> to bridges : List<Pair<Integer Integer>> in method private getSortedBridges(bridgeNodes List<Integer>) : List<Pair<Integer Integer>> from class BridgesAdjacencyListIterativeTest
2cec4695af6f849a1913c2cc0c5ff2c555e6a31d,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	actual : List<Pair> to bridges : List<Pair<Integer Integer>> in method private getSortedBridges(bridgeNodes List<Integer>) : List<Pair<Integer Integer>> from class BridgesAdjacencyListIterativeTest
2cec4695af6f849a1913c2cc0c5ff2c555e6a31d,RENAME_VARIABLE, Rename Variable Rename Variable	actual : List<Pair> to bridges : List<Pair<Integer Integer>> in method private getSortedBridges(bridgeNodes List<Integer>) : List<Pair<Integer Integer>> from class BridgesAdjacencyListIterativeTest
2cec4695af6f849a1913c2cc0c5ff2c555e6a31d,RENAME_VARIABLE, Rename Variable Rename Variable	actual : List<Pair> to bridges : List<Pair<Integer Integer>> in method private getSortedBridges(bridgeNodes List<Integer>) : List<Pair<Integer Integer>> from class BridgesAdjacencyListIterativeTest
2cec4695af6f849a1913c2cc0c5ff2c555e6a31d,RENAME_VARIABLE, Rename Variable Rename Variable	actual : List<Pair> to bridges : List<Pair<Integer Integer>> in method private getSortedBridges(bridgeNodes List<Integer>) : List<Pair<Integer Integer>> from class BridgesAdjacencyListIterativeTest
2cec4695af6f849a1913c2cc0c5ff2c555e6a31d,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	solver : BridgesAdjacencyListIterative to solver : BridgesAdjacencyList in method public testTreeCase() : void from class BridgesAdjacencyListIterativeTest
2cec4695af6f849a1913c2cc0c5ff2c555e6a31d,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	actual : List<Pair> to sortedBridges : List<Pair<Integer Integer>> in method public graphWithCyclesTest() : void from class BridgesAdjacencyListIterativeTest
2cec4695af6f849a1913c2cc0c5ff2c555e6a31d,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	solver : BridgesAdjacencyListIterative to solver : BridgesAdjacencyList in method public graphWithCyclesTest() : void from class BridgesAdjacencyListIterativeTest
2cec4695af6f849a1913c2cc0c5ff2c555e6a31d,RENAME_VARIABLE, Rename Variable Rename Variable	actual : List<Pair> to sortedBridges : List<Pair<Integer Integer>> in method public graphWithCyclesTest() : void from class BridgesAdjacencyListIterativeTest
2cec4695af6f849a1913c2cc0c5ff2c555e6a31d,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	actual : List<Pair> to sortedBridges : List<Pair<Integer Integer>> in method public testGraphInSlides() : void from class BridgesAdjacencyListIterativeTest
2cec4695af6f849a1913c2cc0c5ff2c555e6a31d,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	solver : BridgesAdjacencyListIterative to solver : BridgesAdjacencyList in method public testGraphInSlides() : void from class BridgesAdjacencyListIterativeTest
2cec4695af6f849a1913c2cc0c5ff2c555e6a31d,RENAME_VARIABLE, Rename Variable Rename Variable	actual : List<Pair> to sortedBridges : List<Pair<Integer Integer>> in method public testGraphInSlides() : void from class BridgesAdjacencyListIterativeTest
2cec4695af6f849a1913c2cc0c5ff2c555e6a31d,EXTRACT_OPERATION, Extract Method Extract Method	private getSortedBridges(bridgeNodes List<Integer>) : List<Pair<Integer Integer>> extracted from public testTreeCase() : void in class BridgesAdjacencyListTest
2cec4695af6f849a1913c2cc0c5ff2c555e6a31d,EXTRACT_OPERATION, Extract Method Extract Method	private getSortedBridges(bridgeNodes List<Integer>) : List<Pair<Integer Integer>> extracted from public graphWithCyclesTest() : void in class BridgesAdjacencyListTest
2cec4695af6f849a1913c2cc0c5ff2c555e6a31d,EXTRACT_OPERATION, Extract Method Extract Method	private getSortedBridges(bridgeNodes List<Integer>) : List<Pair<Integer Integer>> extracted from public testGraphInSlides() : void in class BridgesAdjacencyListTest
2cec4695af6f849a1913c2cc0c5ff2c555e6a31d,INLINE_VARIABLE, Inline Variable Inline Variable	bridges : List<Integer> in method public testTreeCase() : void from class BridgesAdjacencyListTest
2cec4695af6f849a1913c2cc0c5ff2c555e6a31d,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	actual : List<Pair> to bridges : List<Pair<Integer Integer>> in method private getSortedBridges(bridgeNodes List<Integer>) : List<Pair<Integer Integer>> from class BridgesAdjacencyListTest
2cec4695af6f849a1913c2cc0c5ff2c555e6a31d,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	actual : List<Pair> to bridges : List<Pair<Integer Integer>> in method private getSortedBridges(bridgeNodes List<Integer>) : List<Pair<Integer Integer>> from class BridgesAdjacencyListTest
2cec4695af6f849a1913c2cc0c5ff2c555e6a31d,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	actual : List<Pair> to bridges : List<Pair<Integer Integer>> in method private getSortedBridges(bridgeNodes List<Integer>) : List<Pair<Integer Integer>> from class BridgesAdjacencyListTest
2cec4695af6f849a1913c2cc0c5ff2c555e6a31d,RENAME_VARIABLE, Rename Variable Rename Variable	actual : List<Pair> to bridges : List<Pair<Integer Integer>> in method private getSortedBridges(bridgeNodes List<Integer>) : List<Pair<Integer Integer>> from class BridgesAdjacencyListTest
2cec4695af6f849a1913c2cc0c5ff2c555e6a31d,RENAME_VARIABLE, Rename Variable Rename Variable	actual : List<Pair> to bridges : List<Pair<Integer Integer>> in method private getSortedBridges(bridgeNodes List<Integer>) : List<Pair<Integer Integer>> from class BridgesAdjacencyListTest
2cec4695af6f849a1913c2cc0c5ff2c555e6a31d,RENAME_VARIABLE, Rename Variable Rename Variable	actual : List<Pair> to bridges : List<Pair<Integer Integer>> in method private getSortedBridges(bridgeNodes List<Integer>) : List<Pair<Integer Integer>> from class BridgesAdjacencyListTest
2cec4695af6f849a1913c2cc0c5ff2c555e6a31d,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	actual : List<Pair> to sortedBridges : List<Pair<Integer Integer>> in method public graphWithCyclesTest() : void from class BridgesAdjacencyListTest
2cec4695af6f849a1913c2cc0c5ff2c555e6a31d,RENAME_VARIABLE, Rename Variable Rename Variable	actual : List<Pair> to sortedBridges : List<Pair<Integer Integer>> in method public graphWithCyclesTest() : void from class BridgesAdjacencyListTest
2cec4695af6f849a1913c2cc0c5ff2c555e6a31d,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	actual : List<Pair> to sortedBridges : List<Pair<Integer Integer>> in method public testGraphInSlides() : void from class BridgesAdjacencyListTest
2cec4695af6f849a1913c2cc0c5ff2c555e6a31d,RENAME_VARIABLE, Rename Variable Rename Variable	actual : List<Pair> to sortedBridges : List<Pair<Integer Integer>> in method public testGraphInSlides() : void from class BridgesAdjacencyListTest
b3fbc78edab0c11919cc42c67d69e686c2c6524e,ADD_VARIABLE_MODIFIER, Add Variable Modifier Add Variable Modifier	final in variable n : int in method private combinations(at int  r int  used boolean[]  set int[]) : void from class UniqueCombinations
30760a414828360754af97671a8ffa8d71a3e8ea,EXTRACT_OPERATION, Extract Method Extract Method	private example1() : void extracted from public main(args String[]) : void in class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour
dca1c5dc9716dc3672fe50cccbb423f2e2136041,RENAME_CLASS, Rename Class Rename Class	com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlow renamed to com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowSolver
dca1c5dc9716dc3672fe50cccbb423f2e2136041,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	capacity : int to capacity : long in class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowSolver.Edge
dca1c5dc9716dc3672fe50cccbb423f2e2136041,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	cost : int to cost : long in class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowSolver.Edge
dca1c5dc9716dc3672fe50cccbb423f2e2136041,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	originalCapacity : int to originalCapacity : long in class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowSolver.Edge
dca1c5dc9716dc3672fe50cccbb423f2e2136041,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	capacity : int to capacity : long in method public Edge(from int  to int  capacity long  cost long) from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowSolver.Edge
dca1c5dc9716dc3672fe50cccbb423f2e2136041,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	cost : int to cost : long in method public Edge(from int  to int  capacity long  cost long) from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowSolver.Edge
dca1c5dc9716dc3672fe50cccbb423f2e2136041,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	public to package in class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowSolver
dca1c5dc9716dc3672fe50cccbb423f2e2136041,EXTRACT_OPERATION, Extract Method Extract Method	private init() : void extracted from public solve() : void in class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowSolver
dca1c5dc9716dc3672fe50cccbb423f2e2136041,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	flow : int to flow : long in method public solve() : void from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowSolver
dca1c5dc9716dc3672fe50cccbb423f2e2136041,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	dist : double[] to dist : long[] in method private getAugmentingPath() : List<Edge> from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowSolver
dca1c5dc9716dc3672fe50cccbb423f2e2136041,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	newDist : double to newDist : long in method private getAugmentingPath() : List<Edge> from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowSolver
dca1c5dc9716dc3672fe50cccbb423f2e2136041,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	bottleNeck : int to bottleNeck : long in method private findBottleNeck() : long from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowSolver
dca1c5dc9716dc3672fe50cccbb423f2e2136041,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	int to long in method private findBottleNeck() : long from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowSolver
dca1c5dc9716dc3672fe50cccbb423f2e2136041,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	value : double to value : long in method public Node(id int  value long) from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowSolver.getAugmentingPath.Node
dca1c5dc9716dc3672fe50cccbb423f2e2136041,MOVE_OPERATION, Move Method Move Method	public Node(id int  value double) from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlow.Node to public Node(id int  value long) from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowSolver.getAugmentingPath.Node
09348dc2e24b22f6c12dd5bb3c0b55d6252e6e3f,RENAME_VARIABLE, Rename Variable Rename Variable	dist : double[][] to matrix : double[][] in method public main(args String[]) : void from class TspBruteForce
494eb5f8298de192c9b56d60c914ca8367528b80,ADD_PARAMETER, Add Parameter Add Parameter	i : int in method public Edge(i int  u int  v int  cost int) from class com.williamfiset.algorithms.graphtheory.Boruvkas.Edge
494eb5f8298de192c9b56d60c914ca8367528b80,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	graph : List<List<Edge>> to graph : Edge[] in class com.williamfiset.algorithms.graphtheory.Boruvkas
494eb5f8298de192c9b56d60c914ca8367528b80,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	g : List<List<Edge>> to g : Edge[] in method public main(args String[]) : void from class com.williamfiset.algorithms.graphtheory.Boruvkas
494eb5f8298de192c9b56d60c914ca8367528b80,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	List<List<Edge>> to Edge[] in method package createEmptyGraph(m int) : Edge[] from class com.williamfiset.algorithms.graphtheory.Boruvkas
494eb5f8298de192c9b56d60c914ca8367528b80,RENAME_PARAMETER, Rename Parameter Rename Parameter	n : int to m : int in method package createEmptyGraph(m int) : Edge[] from class com.williamfiset.algorithms.graphtheory.Boruvkas
494eb5f8298de192c9b56d60c914ca8367528b80,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	graph : List<List<Edge>> to graph : Edge[] in method public Boruvkas(n int  graph Edge[]) from class com.williamfiset.algorithms.graphtheory.Boruvkas
494eb5f8298de192c9b56d60c914ca8367528b80,ADD_PARAMETER, Add Parameter Add Parameter	n : int in method public Boruvkas(n int  graph Edge[]) from class com.williamfiset.algorithms.graphtheory.Boruvkas
494eb5f8298de192c9b56d60c914ca8367528b80,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	g : List<List<Edge>> to g : Edge[] in method package addDirectedEdge(g Edge[]  i int  from int  to int  cost int) : void from class com.williamfiset.algorithms.graphtheory.Boruvkas
494eb5f8298de192c9b56d60c914ca8367528b80,ADD_PARAMETER, Add Parameter Add Parameter	i : int in method package addDirectedEdge(g Edge[]  i int  from int  to int  cost int) : void from class com.williamfiset.algorithms.graphtheory.Boruvkas
32db7a969da525a9dc3a6d87d61bebf07c825923,EXTRACT_OPERATION, Extract Method Extract Method	public isPrime(sieve long[]  n int) : boolean extracted from public main(args String[]) : void in class com.williamfiset.algorithms.math.CompressedPrimeSieve
32db7a969da525a9dc3a6d87d61bebf07c825923,PARAMETERIZE_VARIABLE, Parameterize Variable Parameterize Variable	i : int to n : int in method public isPrime(sieve long[]  n int) : boolean from class com.williamfiset.algorithms.math.CompressedPrimeSieve
32db7a969da525a9dc3a6d87d61bebf07c825923,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	public to private in method private isNotSet(arr long[]  n int) : boolean from class com.williamfiset.algorithms.math.CompressedPrimeSieve
6586cafe39e7936e21a34edd1a6dccfdac4f5eb3,ADD_ATTRIBUTE_MODIFIER, Add Attribute Modifier Add Attribute Modifier	final in attribute private n : int from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour
6586cafe39e7936e21a34edd1a6dccfdac4f5eb3,ADD_ATTRIBUTE_MODIFIER, Add Attribute Modifier Add Attribute Modifier	final in attribute private root : TreeNode from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour
6586cafe39e7936e21a34edd1a6dccfdac4f5eb3,EXTRACT_OPERATION, Extract Method Extract Method	private visit(node TreeNode  height long) : void extracted from private dfs(node TreeNode  height long  index int) : int in class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour
6586cafe39e7936e21a34edd1a6dccfdac4f5eb3,EXTRACT_OPERATION, Extract Method Extract Method	private visit(node TreeNode  height long) : void extracted from private dfs(node TreeNode  height long  index int) : int in class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour
6586cafe39e7936e21a34edd1a6dccfdac4f5eb3,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	int to void in method private dfs(node TreeNode  height long) : void from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour
6586cafe39e7936e21a34edd1a6dccfdac4f5eb3,REMOVE_PARAMETER, Remove Parameter Remove Parameter	index : int in method private dfs(node TreeNode  height long  index int) : int from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour
f7fecc640cb73e3cfaa00314711c41c59c262a58,RENAME_METHOD, Rename Method Rename Method	public treeCenter(graph List<List<Integer>>) : List<Integer> renamed to public findTreeCenters(graph List<List<Integer>>) : List<Integer> in class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenterLongestPathImpl
e97d8a88bc7f5164ad9636c8ba41b9f691c0318f,EXTRACT_OPERATION, Extract Method Extract Method	public test() : void extracted from public main(args String[]) : void in class TspDynamicProgrammingIterative
e97d8a88bc7f5164ad9636c8ba41b9f691c0318f,MERGE_CONDITIONAL, Merge Conditional Merge Conditional	[if(next == start)  if(notIn(next subset))] to if(next == start || notIn(next subset)) in method public solve() : void from class TspDynamicProgrammingIterative
e97d8a88bc7f5164ad9636c8ba41b9f691c0318f,MERGE_CONDITIONAL, Merge Conditional Merge Conditional	[if(end == start || end == next)  if(notIn(end subset))] to if(end == start || end == next || notIn(end subset)) in method public solve() : void from class TspDynamicProgrammingIterative
7fc65eedf3057c76d80b3283eaa67d5daea12148,RENAME_CLASS, Rename Class Rename Class	NarrowArtGallery renamed to NarrowArtGalleryRecursive
7fc65eedf3057c76d80b3283eaa67d5daea12148,REMOVE_THROWN_EXCEPTION_TYPE, Remove Thrown Exception Type Remove Thrown Exception Type	IOException in method public main(Fiset String[]) : void from class NarrowArtGallery
7fc65eedf3057c76d80b3283eaa67d5daea12148,RENAME_ATTRIBUTE, Rename Attribute Rename Attribute	in : InputReader to sc : Scanner in class NarrowArtGalleryRecursive
7fc65eedf3057c76d80b3283eaa67d5daea12148,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	in : InputReader to sc : Scanner in class NarrowArtGalleryRecursive
4669a89785a68e0acb8c026d9e47af3f8a4c1a91,EXTRACT_VARIABLE, Extract Variable Extract Variable	ax : double in method public collinear(a Point2D  b Point2D  c Point2D) : int from class com.williamfiset.algorithms.geometry.ConvexPolygonContainsPoint
4669a89785a68e0acb8c026d9e47af3f8a4c1a91,EXTRACT_VARIABLE, Extract Variable Extract Variable	bx : double in method public collinear(a Point2D  b Point2D  c Point2D) : int from class com.williamfiset.algorithms.geometry.ConvexPolygonContainsPoint
4669a89785a68e0acb8c026d9e47af3f8a4c1a91,EXTRACT_VARIABLE, Extract Variable Extract Variable	cx : double in method public collinear(a Point2D  b Point2D  c Point2D) : int from class com.williamfiset.algorithms.geometry.ConvexPolygonContainsPoint
4669a89785a68e0acb8c026d9e47af3f8a4c1a91,EXTRACT_VARIABLE, Extract Variable Extract Variable	ax : double in method public collinear(a Point2D  b Point2D  c Point2D) : int from class com.williamfiset.algorithms.geometry.PointInsideTriangle
4669a89785a68e0acb8c026d9e47af3f8a4c1a91,EXTRACT_VARIABLE, Extract Variable Extract Variable	bx : double in method public collinear(a Point2D  b Point2D  c Point2D) : int from class com.williamfiset.algorithms.geometry.PointInsideTriangle
4669a89785a68e0acb8c026d9e47af3f8a4c1a91,EXTRACT_VARIABLE, Extract Variable Extract Variable	cx : double in method public collinear(a Point2D  b Point2D  c Point2D) : int from class com.williamfiset.algorithms.geometry.PointInsideTriangle
0e91f3285e246780a0fb27ebe39006fda46e3b20,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	itemsSelected : java.util.List<Integer> to itemsSelected : List<Integer> in method public knapsack(capacity int  W int[]  V int[]) : int from class com.williamfiset.algorithms.dp.Knapsack_01
13ca5a35de404b52d1c7abd2a3f385b6f6a1b1c2,REPLACE_ATTRIBUTE_WITH_VARIABLE, Replace Attribute With Variable Replace Attribute With Variable	sc : Scanner to sc : Scanner in method public main(Fiset String[]) : void from class NarrowArtGalleryRecursive
c0e104ea7c0cc65a5bf61dc5eea9f7e01eb93512,ADD_METHOD_MODIFIER, Add Method Modifier Add Method Modifier	static in method private print(t int[][]) : void from class com.williamfiset.algorithms.datastructures.sparsetable.SparseTable
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,RENAME_METHOD, Rename Method Rename Method	public enqueue(value int) : void renamed to public offer(value Integer) : void in class com.williamfiset.algorithms.datastructures.queue.IntQueue
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,RENAME_METHOD, Rename Method Rename Method	public dequeue() : int renamed to public poll() : Integer in class com.williamfiset.algorithms.datastructures.queue.IntQueue
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,EXTRACT_OPERATION, Extract Method Extract Method	public isFull() : boolean extracted from public enqueue(value int) : void in class com.williamfiset.algorithms.datastructures.queue.IntQueue
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	int to Integer in method public peek() : Integer from class com.williamfiset.algorithms.datastructures.queue.IntQueue
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@Override in method public peek() : Integer from class com.williamfiset.algorithms.datastructures.queue.IntQueue
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	value : int to value : Integer in method public offer(value Integer) : void from class com.williamfiset.algorithms.datastructures.queue.IntQueue
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@Override in method public offer(value Integer) : void from class com.williamfiset.algorithms.datastructures.queue.IntQueue
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	int to Integer in method public poll() : Integer from class com.williamfiset.algorithms.datastructures.queue.IntQueue
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@Override in method public poll() : Integer from class com.williamfiset.algorithms.datastructures.queue.IntQueue
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,RENAME_ATTRIBUTE, Rename Attribute Rename Attribute	ar : int[] to data : int[] in class com.williamfiset.algorithms.datastructures.queue.IntQueue
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,CHANGE_TYPE_DECLARATION_KIND, Change Type Declaration Kind Change Type Declaration Kind	class to interface in type com.williamfiset.algorithms.datastructures.queue.Queue
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	int to Integer in method public peek() : Integer from class com.williamfiset.algorithms.datastructures.stack.IntStack
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@Override in method public peek() : Integer from class com.williamfiset.algorithms.datastructures.stack.IntStack
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	int to Integer in method public pop() : Integer from class com.williamfiset.algorithms.datastructures.stack.IntStack
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@Override in method public pop() : Integer from class com.williamfiset.algorithms.datastructures.stack.IntStack
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	value : int to value : Integer in method public push(value Integer) : void from class com.williamfiset.algorithms.datastructures.stack.IntStack
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@Override in method public push(value Integer) : void from class com.williamfiset.algorithms.datastructures.stack.IntStack
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,RENAME_METHOD, Rename Method Rename Method	public testEnqueueOneElement() : void renamed to public testofferOneElement() : void in class com.williamfiset.algorithms.datastructures.queue.IntQueueTest
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,RENAME_METHOD, Rename Method Rename Method	public testDequeueOneElement() : void renamed to public testpollOneElement() : void in class com.williamfiset.algorithms.datastructures.queue.IntQueueTest
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = Exception.class) to @Test in method public testPollOnEmpty() : void from class com.williamfiset.algorithms.datastructures.queue.QueueTest
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = Exception.class) to @Test in method public testPeekOnEmpty() : void from class com.williamfiset.algorithms.datastructures.queue.QueueTest
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test(expected = Exception.class) to @Test in method public testPeekOnEmpty() : void from class com.williamfiset.algorithms.datastructures.stack.StackTest
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,EXTRACT_SUBCLASS, Extract Subclass Extract Subclass	com.williamfiset.algorithms.datastructures.queue.ArrayQueue from class com.williamfiset.algorithms.datastructures.queue.Queue
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,PUSH_DOWN_ATTRIBUTE, Push Down Attribute Push Down Attribute	private list : java.util.LinkedList<T> from class com.williamfiset.algorithms.datastructures.queue.Queue to private list : java.util.LinkedList<T> from class com.williamfiset.algorithms.datastructures.queue.LinkedQueue
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,PUSH_DOWN_OPERATION, Push Down Method Push Down Method	public offer(elem T) : void from class com.williamfiset.algorithms.datastructures.queue.Queue to public offer(elem T) : void from class com.williamfiset.algorithms.datastructures.queue.ArrayQueue
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@Override in method public offer(elem T) : void from class com.williamfiset.algorithms.datastructures.queue.ArrayQueue
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,PUSH_DOWN_OPERATION, Push Down Method Push Down Method	public poll() : T from class com.williamfiset.algorithms.datastructures.queue.Queue to public poll() : T from class com.williamfiset.algorithms.datastructures.queue.ArrayQueue
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@Override in method public poll() : T from class com.williamfiset.algorithms.datastructures.queue.ArrayQueue
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@SuppressWarnings("unchecked") in method public poll() : T from class com.williamfiset.algorithms.datastructures.queue.ArrayQueue
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,PUSH_DOWN_OPERATION, Push Down Method Push Down Method	public peek() : T from class com.williamfiset.algorithms.datastructures.queue.Queue to public peek() : T from class com.williamfiset.algorithms.datastructures.queue.ArrayQueue
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@Override in method public peek() : T from class com.williamfiset.algorithms.datastructures.queue.ArrayQueue
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@SuppressWarnings("unchecked") in method public peek() : T from class com.williamfiset.algorithms.datastructures.queue.ArrayQueue
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,PUSH_DOWN_OPERATION, Push Down Method Push Down Method	public size() : int from class com.williamfiset.algorithms.datastructures.queue.Queue to public size() : int from class com.williamfiset.algorithms.datastructures.queue.ArrayQueue
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@Override in method public size() : int from class com.williamfiset.algorithms.datastructures.queue.ArrayQueue
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,PUSH_DOWN_OPERATION, Push Down Method Push Down Method	public isEmpty() : boolean from class com.williamfiset.algorithms.datastructures.queue.Queue to public isEmpty() : boolean from class com.williamfiset.algorithms.datastructures.queue.ArrayQueue
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@Override in method public isEmpty() : boolean from class com.williamfiset.algorithms.datastructures.queue.ArrayQueue
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,PUSH_DOWN_OPERATION, Push Down Method Push Down Method	public Queue(firstElem T) from class com.williamfiset.algorithms.datastructures.queue.Queue to public LinkedQueue(firstElem T) from class com.williamfiset.algorithms.datastructures.queue.LinkedQueue
d5f4fab7bd4f4e9a3872b01db4b46309456dae41,PUSH_DOWN_OPERATION, Push Down Method Push Down Method	public iterator() : Iterator<T> from class com.williamfiset.algorithms.datastructures.queue.Queue to public iterator() : Iterator<T> from class com.williamfiset.algorithms.datastructures.queue.LinkedQueue
a79289e0636e1bf7cb2811b6b0e8a80db49aa5ff,REMOVE_CLASS_ANNOTATION, Remove Class Annotation Remove Class Annotation	@SuppressWarnings("unchecked") in class com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbing
3eae2f55b3e39e9a7e997460990a4abffb4dfe9c,RENAME_VARIABLE, Rename Variable Rename Variable	index : int to bestIndex : int in method public solve() : void from class com.williamfiset.algorithms.graphtheory.TspDynamicProgrammingIterative
12786f3eefe25a40a07c1339b2d9a8185be2e590,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	mwpm : MinimumWeightPerfectMatching to impls : MwpmInterface[] in method public testSmallestMatrix1() : void from class com.williamfiset.algorithms.dp.MinimumWeightPerfectMatchingTest
12786f3eefe25a40a07c1339b2d9a8185be2e590,RENAME_VARIABLE, Rename Variable Rename Variable	mwpm : MinimumWeightPerfectMatching to impls : MwpmInterface[] in method public testSmallestMatrix1() : void from class com.williamfiset.algorithms.dp.MinimumWeightPerfectMatchingTest
12786f3eefe25a40a07c1339b2d9a8185be2e590,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	mwpm : MinimumWeightPerfectMatching to impls : MwpmInterface[] in method public testSmallMatrix1() : void from class com.williamfiset.algorithms.dp.MinimumWeightPerfectMatchingTest
12786f3eefe25a40a07c1339b2d9a8185be2e590,RENAME_VARIABLE, Rename Variable Rename Variable	mwpm : MinimumWeightPerfectMatching to impls : MwpmInterface[] in method public testSmallMatrix1() : void from class com.williamfiset.algorithms.dp.MinimumWeightPerfectMatchingTest
12786f3eefe25a40a07c1339b2d9a8185be2e590,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	mwpm : MinimumWeightPerfectMatching to impls : MwpmInterface[] in method public testSmallMatrix2() : void from class com.williamfiset.algorithms.dp.MinimumWeightPerfectMatchingTest
12786f3eefe25a40a07c1339b2d9a8185be2e590,RENAME_VARIABLE, Rename Variable Rename Variable	mwpm : MinimumWeightPerfectMatching to impls : MwpmInterface[] in method public testSmallMatrix2() : void from class com.williamfiset.algorithms.dp.MinimumWeightPerfectMatchingTest
12786f3eefe25a40a07c1339b2d9a8185be2e590,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	mwpm : MinimumWeightPerfectMatching to impls : MwpmInterface[] in method public testMediumMatrix1() : void from class com.williamfiset.algorithms.dp.MinimumWeightPerfectMatchingTest
12786f3eefe25a40a07c1339b2d9a8185be2e590,RENAME_VARIABLE, Rename Variable Rename Variable	mwpm : MinimumWeightPerfectMatching to impls : MwpmInterface[] in method public testMediumMatrix1() : void from class com.williamfiset.algorithms.dp.MinimumWeightPerfectMatchingTest
12786f3eefe25a40a07c1339b2d9a8185be2e590,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	mwpm : MinimumWeightPerfectMatching to impls : MwpmInterface[] in method public testMediumMatrix2() : void from class com.williamfiset.algorithms.dp.MinimumWeightPerfectMatchingTest
12786f3eefe25a40a07c1339b2d9a8185be2e590,RENAME_VARIABLE, Rename Variable Rename Variable	mwpm : MinimumWeightPerfectMatching to impls : MwpmInterface[] in method public testMediumMatrix2() : void from class com.williamfiset.algorithms.dp.MinimumWeightPerfectMatchingTest
12786f3eefe25a40a07c1339b2d9a8185be2e590,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	mwpm : MinimumWeightPerfectMatching to impls : MwpmInterface[] in method public testMatchingOutputsUniqueNodes() : void from class com.williamfiset.algorithms.dp.MinimumWeightPerfectMatchingTest
12786f3eefe25a40a07c1339b2d9a8185be2e590,RENAME_VARIABLE, Rename Variable Rename Variable	mwpm : MinimumWeightPerfectMatching to impls : MwpmInterface[] in method public testMatchingOutputsUniqueNodes() : void from class com.williamfiset.algorithms.dp.MinimumWeightPerfectMatchingTest
12786f3eefe25a40a07c1339b2d9a8185be2e590,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	mwpm : MinimumWeightPerfectMatching to impls : MwpmInterface[] in method public testMatchingAndCostAreConsistent() : void from class com.williamfiset.algorithms.dp.MinimumWeightPerfectMatchingTest
12786f3eefe25a40a07c1339b2d9a8185be2e590,RENAME_VARIABLE, Rename Variable Rename Variable	mwpm : MinimumWeightPerfectMatching to impls : MwpmInterface[] in method public testMatchingAndCostAreConsistent() : void from class com.williamfiset.algorithms.dp.MinimumWeightPerfectMatchingTest
12786f3eefe25a40a07c1339b2d9a8185be2e590,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	mwpm : MinimumWeightPerfectMatching to impls : MwpmInterface[] in method public testAgainstBruteForce_largeValues() : void from class com.williamfiset.algorithms.dp.MinimumWeightPerfectMatchingTest
12786f3eefe25a40a07c1339b2d9a8185be2e590,RENAME_VARIABLE, Rename Variable Rename Variable	mwpm : MinimumWeightPerfectMatching to impls : MwpmInterface[] in method public testAgainstBruteForce_largeValues() : void from class com.williamfiset.algorithms.dp.MinimumWeightPerfectMatchingTest
6612a2ae6b67998e95b0dc332eb0530230c3d4a2,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@SuppressWarnings("unchecked") in method private initializeEmptyFlowGraph() : void from class com.williamfiset.algorithms.graphtheory.networkflow.examples.DinicsExample.NetworkFlowSolverBase
6612a2ae6b67998e95b0dc332eb0530230c3d4a2,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	node : RedBlackTree.Node to node : RedBlackTree<Integer>.Node in method package assertBinarySearchTreeInvariant(node RedBlackTree<Integer>.Node) : boolean from class com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTreeTest
995250ded3624c7ef8eaf5c35e182435be90c89e,RENAME_CLASS, Rename Class Rename Class	BellmanFord renamed to BellmanFordEdgeList
38505fc8a9e27f272c2bdf0e3c2d40ac41e3bdeb,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	polynomial1 : int[] to polynomial1 : long[] in method public main(args String[]) : void from class FastFourierTransform
38505fc8a9e27f272c2bdf0e3c2d40ac41e3bdeb,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	polynomial2 : int[] to polynomial2 : long[] in method public main(args String[]) : void from class FastFourierTransform
38505fc8a9e27f272c2bdf0e3c2d40ac41e3bdeb,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	result : int[] to result : long[] in method public main(args String[]) : void from class FastFourierTransform
596f9995a12e7d0762010f63b0fd4d0055564a20,RENAME_PARAMETER, Rename Parameter Rename Parameter	points : Point2D[] to polygon : Point2D[] in method public minimumCostTriangulation(polygon Point2D[]) : double from class com.williamfiset.algorithms.geometry.MinimumCostConvexPolygonTriangulation
3d2af97226e03f940e64c697923f816b2e92e610,EXTRACT_VARIABLE, Extract Variable Extract Variable	result : DfsResult in method public findTreeCenters(graph List<List<Integer>>) : List<Integer> from class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenterLongestPathImpl
3d2af97226e03f940e64c697923f816b2e92e610,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	tuple : int[] to result : DfsResult in method private dfs(graph List<List<Integer>>  visited boolean[]  prev int[]  at int  parent int) : DfsResult from class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenterLongestPathImpl
3d2af97226e03f940e64c697923f816b2e92e610,RENAME_VARIABLE, Rename Variable Rename Variable	tuple : int[] to result : DfsResult in method private dfs(graph List<List<Integer>>  visited boolean[]  prev int[]  at int  parent int) : DfsResult from class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenterLongestPathImpl
3d2af97226e03f940e64c697923f816b2e92e610,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	int[] to DfsResult in method private dfs(graph List<List<Integer>>  visited boolean[]  prev int[]  at int  parent int) : DfsResult from class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenterLongestPathImpl
6c34da10d1d56bf1e41ceff9670a45375c9d03de,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	package to public in class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenter
9b4c44420542b37cca0a0514713e22aa5ea4e04c,RENAME_VARIABLE, Rename Variable Rename Variable	frontier : PriorityQueue<Edge> to pq : PriorityQueue<Edge> in method public prims(graph Map<Integer List<Edge>>  n int) : Long from class LazyPrimsAdjacencyList
83e02376e955b37a90920862b784ed29c50de472,REMOVE_PARAMETER, Remove Parameter Remove Parameter	root : TreeNode in method public lca(root TreeNode  id1 int  id2 int) : TreeNode from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestor
83e02376e955b37a90920862b784ed29c50de472,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	heights : int[] to heights : long[] in class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour
83e02376e955b37a90920862b784ed29c50de472,REMOVE_PARAMETER, Remove Parameter Remove Parameter	root : TreeNode in method private preprocess(root TreeNode  n int) : void from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour
83e02376e955b37a90920862b784ed29c50de472,REMOVE_PARAMETER, Remove Parameter Remove Parameter	n : int in method private preprocess(root TreeNode  n int) : void from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour
83e02376e955b37a90920862b784ed29c50de472,REMOVE_PARAMETER, Remove Parameter Remove Parameter	root : TreeNode in method public lca(root TreeNode  id1 int  id2 int  n int) : TreeNode from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour
83e02376e955b37a90920862b784ed29c50de472,REMOVE_PARAMETER, Remove Parameter Remove Parameter	n : int in method public lca(root TreeNode  id1 int  id2 int  n int) : TreeNode from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour
83e02376e955b37a90920862b784ed29c50de472,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	height : int to height : long in method private dfs(node TreeNode  height long) : void from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour
83e02376e955b37a90920862b784ed29c50de472,REPLACE_ATTRIBUTE_WITH_VARIABLE, Replace Attribute With Variable Replace Attribute With Variable	solver : LowestCommonAncestor to solver : LowestCommonAncestor in method public testLcaTreeFromSlides1() : void from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorTest
83e02376e955b37a90920862b784ed29c50de472,REPLACE_ATTRIBUTE_WITH_VARIABLE, Replace Attribute With Variable Replace Attribute With Variable	solver : LowestCommonAncestor to solver : LowestCommonAncestor in method public testLcaTreeFromSlides2() : void from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorTest
83e02376e955b37a90920862b784ed29c50de472,REPLACE_ATTRIBUTE_WITH_VARIABLE, Replace Attribute With Variable Replace Attribute With Variable	solver : LowestCommonAncestor to solver : LowestCommonAncestor in method public testLcaOfTheSameNodeIsItself() : void from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorTest
e9058addff886234ea746f406206694e4a6e274d,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	package to public in class com.williamfiset.algorithms.graphtheory.networkflow.Dinics.Edge
f552a85562c26503bab98cce1aab12cbabdd76d0,EXTRACT_OPERATION, Extract Method Extract Method	private findStartNode() : int extracted from public getEulerianPath() : int[] in class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
f552a85562c26503bab98cce1aab12cbabdd76d0,REPLACE_ATTRIBUTE_WITH_VARIABLE, Replace Attribute With Variable Replace Attribute With Variable	start : int to start : int in method private findStartNode() : int from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
75c0b8c644b5736981d6bbda8e1059905f21548f,INLINE_OPERATION, Inline Method Inline Method	private example2() : void inlined to public main(args String[]) : void in class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour
58d09628a33908f7da4b5a92d1ead055331f0def,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	minCoins : int to minCoins : Optional<Integer> in class com.williamfiset.algorithms.dp.CoinChange.Solution
58d09628a33908f7da4b5a92d1ead055331f0def,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	int to Solution in method public coinChangeSpaceEfficient(coins int[]  n int) : Solution from class com.williamfiset.algorithms.dp.CoinChange
9048c9b1d3503d339d61ba280ff1668aeb670423,EXTRACT_VARIABLE, Extract Variable Extract Variable	heapSize : int in method public BinaryHeap(elems Collection<T>) from class com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeap
21cce88d6d51f3e9eca75e742c03e7496d1573a7,INLINE_OPERATION, Inline Method Inline Method	private init(v long[]) : void inlined to public MinSparseTable(values long[]) in class com.williamfiset.algorithms.datastructures.sparsetable.examples.MinSparseTable
21cce88d6d51f3e9eca75e742c03e7496d1573a7,RENAME_VARIABLE, Rename Variable Rename Variable	len : int to length : int in method private queryMin(l int  r int) : long from class com.williamfiset.algorithms.datastructures.sparsetable.examples.MinSparseTable
21cce88d6d51f3e9eca75e742c03e7496d1573a7,EXTRACT_VARIABLE, Extract Variable Extract Variable	length : int in method public queryMinIndex(l int  r int) : int from class com.williamfiset.algorithms.datastructures.sparsetable.examples.MinSparseTable
21cce88d6d51f3e9eca75e742c03e7496d1573a7,RENAME_VARIABLE, Rename Variable Rename Variable	sparsetable : MinSparseTable to sparseTable : MinSparseTable in method public main(args String[]) : void from class com.williamfiset.algorithms.datastructures.sparsetable.examples.MinSparseTable
4e60c32dfb68255e4ac0e9608763f6d5a6f897d2,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	package to private in class FordFulkersonDFSAdjacencyList.Edge
4e60c32dfb68255e4ac0e9608763f6d5a6f897d2,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public addEdge(graph List<Edge>[]  from int  to int  capacity int) : void from class FordFulkersonDFSAdjacencyList
534aefb636c39e14184a8bc7b83c30df07d0c953,RENAME_METHOD, Rename Method Rename Method	public createGraph(n int) : List<List<Integer>> renamed to public createEmptyTree(n int) : List<List<Integer>> in class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenter
534aefb636c39e14184a8bc7b83c30df07d0c953,RENAME_PARAMETER, Rename Parameter Rename Parameter	graph : List<List<Integer>> to tree : List<List<Integer>> in method public findTreeCenters(tree List<List<Integer>>) : List<Integer> from class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenter
534aefb636c39e14184a8bc7b83c30df07d0c953,RENAME_PARAMETER, Rename Parameter Rename Parameter	graph : List<List<Integer>> to tree : List<List<Integer>> in method public addUndirectedEdge(tree List<List<Integer>>  from int  to int) : void from class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenter
534aefb636c39e14184a8bc7b83c30df07d0c953,RENAME_VARIABLE, Rename Variable Rename Variable	graph : List<List<Integer>> to tree : List<List<Integer>> in method public createEmptyTree(n int) : List<List<Integer>> from class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenter
365dc61a2031c00e040a0e82b3d9b3e56009d3bf,EXTRACT_OPERATION, Extract Method Extract Method	private defaultValue() : long extracted from private rangeQuery(i int  tl int  tr int  l int  r int) : long in class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree
79fff626f0b03dfdb4263c867b79534512661e57,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	tileFrequency : int[] to tileFrequency : Map<Integer Integer> in class BoardTilingsSolver
578e2645befab80fd1fdbf24fa5a94daea0d7049,ADD_PARAMETER, Add Parameter Add Parameter	min : Long in method public Segment(i int  value Long  min Long  max Long  tl int  tr int) from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2.Segment
578e2645befab80fd1fdbf24fa5a94daea0d7049,ADD_PARAMETER, Add Parameter Add Parameter	max : Long in method public Segment(i int  value Long  min Long  max Long  tl int  tr int) from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2.Segment
578e2645befab80fd1fdbf24fa5a94daea0d7049,RENAME_VARIABLE, Rename Variable Rename Variable	st : GenericSegmentTree2 to st1 : GenericSegmentTree2 in method public maxQueryMulUpdate_simple() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test
d53752c8630a5f066ede228d2fd91eb05a056b00,RENAME_CLASS, Rename Class Rename Class	com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive.Rv renamed to com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive.MatchingCost
d53752c8630a5f066ede228d2fd91eb05a056b00,EXTRACT_OPERATION, Extract Method Extract Method	private updateMatchingCost(mc MatchingCost  value Double) : void extracted from private f(state int  dp Rv[]  history int[]) : Rv in class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive
d53752c8630a5f066ede228d2fd91eb05a056b00,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	matchCost : Rv to mc : MatchingCost in method private updateMatchingCost(mc MatchingCost  value Double) : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive
d53752c8630a5f066ede228d2fd91eb05a056b00,PARAMETERIZE_VARIABLE, Parameterize Variable Parameterize Variable	matchCost : Rv to mc : MatchingCost in method private updateMatchingCost(mc MatchingCost  value Double) : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive
d53752c8630a5f066ede228d2fd91eb05a056b00,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	rv : Rv to mc : MatchingCost in method private solve() : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive
d53752c8630a5f066ede228d2fd91eb05a056b00,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	dp : Rv[] to dp : MatchingCost[] in method private solve() : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive
d53752c8630a5f066ede228d2fd91eb05a056b00,RENAME_VARIABLE, Rename Variable Rename Variable	rv : Rv to mc : MatchingCost in method private solve() : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive
d53752c8630a5f066ede228d2fd91eb05a056b00,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	rv : Rv to bestMatchingCost : MatchingCost in method private f(state int  dp MatchingCost[]  history int[]) : MatchingCost from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive
d53752c8630a5f066ede228d2fd91eb05a056b00,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	matchCost : Rv to matchCost : MatchingCost in method private f(state int  dp MatchingCost[]  history int[]) : MatchingCost from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive
d53752c8630a5f066ede228d2fd91eb05a056b00,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	dp : Rv[] to dp : MatchingCost[] in method private f(state int  dp MatchingCost[]  history int[]) : MatchingCost from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive
d53752c8630a5f066ede228d2fd91eb05a056b00,RENAME_VARIABLE, Rename Variable Rename Variable	rv : Rv to bestMatchingCost : MatchingCost in method private f(state int  dp MatchingCost[]  history int[]) : MatchingCost from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive
d53752c8630a5f066ede228d2fd91eb05a056b00,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	Rv to MatchingCost in method private f(state int  dp MatchingCost[]  history int[]) : MatchingCost from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive
d53752c8630a5f066ede228d2fd91eb05a056b00,RENAME_ATTRIBUTE, Rename Attribute Rename Attribute	invisibleEdgesSelected : int to impossibleEdgeMatches : int in class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive.MatchingCost
e59a669a29c451523499b600f91064fb7d5e7064,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	list : List to list : List<Pt> in method public main(args String[]) : void from class com.williamfiset.algorithms.geometry.ConvexPolygonCutWithLineSegment
74e3a8754a9b41509d15c8007205d175898a092b,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	private to public in method public encode(node TreeNode) : String from class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphism
5c829cd35a89ff76a03a6e5bdf54aac609a3afcd,REMOVE_ATTRIBUTE_MODIFIER, Remove Attribute Modifier Remove Attribute Modifier	static in attribute package ans : List<Integer> from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
5c829cd35a89ff76a03a6e5bdf54aac609a3afcd,EXTRACT_OPERATION, Extract Method Extract Method	public addDirectedEdge(g List<List<Integer>>  from int  to int) : void extracted from public testMoreComplexPath() : void in class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
5c829cd35a89ff76a03a6e5bdf54aac609a3afcd,EXTRACT_OPERATION, Extract Method Extract Method	public addDirectedEdge(g List<List<Integer>>  from int  to int) : void extracted from public testMoreComplexPath() : void in class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
5c829cd35a89ff76a03a6e5bdf54aac609a3afcd,EXTRACT_OPERATION, Extract Method Extract Method	public addDirectedEdge(g List<List<Integer>>  from int  to int) : void extracted from public testMoreComplexPath() : void in class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
5c829cd35a89ff76a03a6e5bdf54aac609a3afcd,EXTRACT_OPERATION, Extract Method Extract Method	public addDirectedEdge(g List<List<Integer>>  from int  to int) : void extracted from public testMoreComplexPath() : void in class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
5c829cd35a89ff76a03a6e5bdf54aac609a3afcd,EXTRACT_OPERATION, Extract Method Extract Method	public addDirectedEdge(g List<List<Integer>>  from int  to int) : void extracted from public testMoreComplexPath() : void in class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
5c829cd35a89ff76a03a6e5bdf54aac609a3afcd,EXTRACT_OPERATION, Extract Method Extract Method	public addDirectedEdge(g List<List<Integer>>  from int  to int) : void extracted from public testMoreComplexPath() : void in class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
5c829cd35a89ff76a03a6e5bdf54aac609a3afcd,EXTRACT_OPERATION, Extract Method Extract Method	public addDirectedEdge(g List<List<Integer>>  from int  to int) : void extracted from public testMoreComplexPath() : void in class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
5c829cd35a89ff76a03a6e5bdf54aac609a3afcd,EXTRACT_OPERATION, Extract Method Extract Method	public addDirectedEdge(g List<List<Integer>>  from int  to int) : void extracted from public testMoreComplexPath() : void in class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
5c829cd35a89ff76a03a6e5bdf54aac609a3afcd,EXTRACT_OPERATION, Extract Method Extract Method	public addDirectedEdge(g List<List<Integer>>  from int  to int) : void extracted from public testMoreComplexPath() : void in class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
5c829cd35a89ff76a03a6e5bdf54aac609a3afcd,EXTRACT_OPERATION, Extract Method Extract Method	public addDirectedEdge(g List<List<Integer>>  from int  to int) : void extracted from public testMoreComplexPath() : void in class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
5c829cd35a89ff76a03a6e5bdf54aac609a3afcd,EXTRACT_OPERATION, Extract Method Extract Method	public addDirectedEdge(g List<List<Integer>>  from int  to int) : void extracted from public testMoreComplexPath() : void in class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
5c829cd35a89ff76a03a6e5bdf54aac609a3afcd,EXTRACT_OPERATION, Extract Method Extract Method	public addDirectedEdge(g List<List<Integer>>  from int  to int) : void extracted from public testMoreComplexPath() : void in class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
5c829cd35a89ff76a03a6e5bdf54aac609a3afcd,EXTRACT_OPERATION, Extract Method Extract Method	public addDirectedEdge(g List<List<Integer>>  from int  to int) : void extracted from public testMoreComplexPath() : void in class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
5c829cd35a89ff76a03a6e5bdf54aac609a3afcd,EXTRACT_OPERATION, Extract Method Extract Method	public addDirectedEdge(g List<List<Integer>>  from int  to int) : void extracted from public testMoreComplexPath() : void in class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
5c829cd35a89ff76a03a6e5bdf54aac609a3afcd,PARAMETERIZE_VARIABLE, Parameterize Variable Parameterize Variable	graph : List<List<Integer>> to g : List<List<Integer>> in method public addDirectedEdge(g List<List<Integer>>  from int  to int) : void from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
5c829cd35a89ff76a03a6e5bdf54aac609a3afcd,RENAME_VARIABLE, Rename Variable Rename Variable	N : int to n : int in method public testSimplePath() : void from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
5c829cd35a89ff76a03a6e5bdf54aac609a3afcd,RENAME_VARIABLE, Rename Variable Rename Variable	N : int to n : int in method public testMoreComplexPath() : void from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
5c829cd35a89ff76a03a6e5bdf54aac609a3afcd,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public initializeEmptyGraph(N int) : List<List<Integer>> from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
5c829cd35a89ff76a03a6e5bdf54aac609a3afcd,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	count : Integer to startNodes : int in method public eulerianPath() : int[] from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
5c829cd35a89ff76a03a6e5bdf54aac609a3afcd,REPLACE_VARIABLE_WITH_ATTRIBUTE, Replace Variable With Attribute Replace Variable With Attribute	start : int to start : int in method public eulerianPath() : int[] from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
5c829cd35a89ff76a03a6e5bdf54aac609a3afcd,REPLACE_VARIABLE_WITH_ATTRIBUTE, Replace Variable With Attribute Replace Variable With Attribute	end : int to end : int in method public eulerianPath() : int[] from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
5c829cd35a89ff76a03a6e5bdf54aac609a3afcd,REPLACE_VARIABLE_WITH_ATTRIBUTE, Replace Variable With Attribute Replace Variable With Attribute	in : int[] to in : int[] in method public eulerianPath() : int[] from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
5c829cd35a89ff76a03a6e5bdf54aac609a3afcd,REPLACE_VARIABLE_WITH_ATTRIBUTE, Replace Variable With Attribute Replace Variable With Attribute	out : int[] to out : int[] in method public eulerianPath() : int[] from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
5c829cd35a89ff76a03a6e5bdf54aac609a3afcd,RENAME_VARIABLE, Rename Variable Rename Variable	count : Integer to startNodes : int in method public eulerianPath() : int[] from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
5c829cd35a89ff76a03a6e5bdf54aac609a3afcd,RENAME_VARIABLE, Rename Variable Rename Variable	outIn : int to endNodes : int in method public eulerianPath() : int[] from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
5c829cd35a89ff76a03a6e5bdf54aac609a3afcd,REMOVE_PARAMETER, Remove Parameter Remove Parameter	graph : List<List<Integer>> in method package eulerianPath(graph List<List<Integer>>) : int[] from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
5c829cd35a89ff76a03a6e5bdf54aac609a3afcd,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public eulerianPath() : int[] from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
5c829cd35a89ff76a03a6e5bdf54aac609a3afcd,REMOVE_METHOD_MODIFIER, Remove Method Modifier Remove Method Modifier	static in method package eulerianPath(graph List<List<Integer>>) : int[] from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
5c829cd35a89ff76a03a6e5bdf54aac609a3afcd,REPLACE_VARIABLE_WITH_ATTRIBUTE, Replace Variable With Attribute Replace Variable With Attribute	inOut : int to edgeCount : int in method public eulerianPath() : int[] from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
cc2a997df4def10c66317f8fd6f71c63fc3c1c63,EXTRACT_OPERATION, Extract Method Extract Method	private fillIndexMap(strings String[]  indexMap int[]) : int extracted from public lcs(strs String[]  K int) : TreeSet<String> in class SuffixArray
cc2a997df4def10c66317f8fd6f71c63fc3c1c63,EXTRACT_OPERATION, Extract Method Extract Method	private constructText(strings String[]  TEXT_LENGTH int  SHIFT int) : int[] extracted from public lcs(strs String[]  K int) : TreeSet<String> in class SuffixArray
cc2a997df4def10c66317f8fd6f71c63fc3c1c63,EXTRACT_OPERATION, Extract Method Extract Method	private removeColor(windowColorCountMap Map<Integer Integer>  windowColorCount int  lastColor int) : int extracted from public lcs(strs String[]  K int) : TreeSet<String> in class SuffixArray
cc2a997df4def10c66317f8fd6f71c63fc3c1c63,EXTRACT_OPERATION, Extract Method Extract Method	private addColor(windowColorCountMap Map<Integer Integer>  windowColorCount int  nextColor int) : int extracted from public lcs(strs String[]  K int) : TreeSet<String> in class SuffixArray
cc2a997df4def10c66317f8fd6f71c63fc3c1c63,RENAME_VARIABLE, Rename Variable Rename Variable	LOWEST_ASCII : int to lowestAsciiValue : int in method private fillIndexMap(strings String[]  indexMap int[]) : int from class SuffixArray
cc2a997df4def10c66317f8fd6f71c63fc3c1c63,RENAME_PARAMETER, Rename Parameter Rename Parameter	strs : String[] to strings : String[] in method private fillIndexMap(strings String[]  indexMap int[]) : int from class SuffixArray
cc2a997df4def10c66317f8fd6f71c63fc3c1c63,INLINE_VARIABLE, Inline Variable Inline Variable	N : int in method public lcs(strs String[]  K int) : TreeSet<String> from class SuffixArray
cc2a997df4def10c66317f8fd6f71c63fc3c1c63,ADD_PARAMETER_MODIFIER, Add Parameter Modifier Add Parameter Modifier	final in parameter TEXT_LENGTH : int in method private constructText(strings String[]  TEXT_LENGTH int  SHIFT int) : int[] from class SuffixArray
cc2a997df4def10c66317f8fd6f71c63fc3c1c63,PARAMETERIZE_VARIABLE, Parameterize Variable Parameterize Variable	L : int to TEXT_LENGTH : int in method private constructText(strings String[]  TEXT_LENGTH int  SHIFT int) : int[] from class SuffixArray
cc2a997df4def10c66317f8fd6f71c63fc3c1c63,RENAME_PARAMETER, Rename Parameter Rename Parameter	strs : String[] to strings : String[] in method private constructText(strings String[]  TEXT_LENGTH int  SHIFT int) : int[] from class SuffixArray
cc2a997df4def10c66317f8fd6f71c63fc3c1c63,PARAMETERIZE_VARIABLE, Parameterize Variable Parameterize Variable	windowColorCount : Map<Integer Integer> to windowColorCountMap : Map<Integer Integer> in method private removeColor(windowColorCountMap Map<Integer Integer>  windowColorCount int  lastColor int) : int from class SuffixArray
cc2a997df4def10c66317f8fd6f71c63fc3c1c63,PARAMETERIZE_VARIABLE, Parameterize Variable Parameterize Variable	windowColorCount : Map<Integer Integer> to windowColorCountMap : Map<Integer Integer> in method private addColor(windowColorCountMap Map<Integer Integer>  windowColorCount int  nextColor int) : int from class SuffixArray
cc2a997df4def10c66317f8fd6f71c63fc3c1c63,ADD_VARIABLE_MODIFIER, Add Variable Modifier Add Variable Modifier	final in variable LOWEST_ASCII : int in method public lcs(strings String[]  K int) : TreeSet<String> from class SuffixArray
cc2a997df4def10c66317f8fd6f71c63fc3c1c63,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	sa : SuffixArray to sa : int[] in method public lcs(strings String[]  K int) : TreeSet<String> from class SuffixArray
cc2a997df4def10c66317f8fd6f71c63fc3c1c63,RENAME_VARIABLE, Rename Variable Rename Variable	windowColorCount : Map<Integer Integer> to windowColorCountMap : Map<Integer Integer> in method public lcs(strings String[]  K int) : TreeSet<String> from class SuffixArray
cc2a997df4def10c66317f8fd6f71c63fc3c1c63,RENAME_PARAMETER, Rename Parameter Rename Parameter	strs : String[] to strings : String[] in method public lcs(strings String[]  K int) : TreeSet<String> from class SuffixArray
9c266d6277b4e7f02a9c3bfc461e811552cfb20f,MOVE_SOURCE_FOLDER, Move Source Folder Move Source Folder	 to SearchAlgorithms
9c266d6277b4e7f02a9c3bfc461e811552cfb20f,MOVE_SOURCE_FOLDER, Move Source Folder Move Source Folder	 to ConstructiveAlgorithms
9c266d6277b4e7f02a9c3bfc461e811552cfb20f,MOVE_SOURCE_FOLDER, Move Source Folder Move Source Folder	 to SortingAlgorithms
c6e64e303e1d25305df27de83c6888fe26440145,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	package to private in class com.williamfiset.algorithms.strings.Lcs.SuffixArray.Color
c6e64e303e1d25305df27de83c6888fe26440145,RENAME_METHOD, Rename Method Rename Method	public display(sentinelIndexes List<Integer>) : void renamed to public toString(sentinelIndexes List<Integer>) : void in class com.williamfiset.algorithms.strings.Lcs.SuffixArray
c6e64e303e1d25305df27de83c6888fe26440145,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	public to protected in attribute protected N : int from class com.williamfiset.algorithms.strings.Lcs.SuffixArray
c6e64e303e1d25305df27de83c6888fe26440145,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	public to protected in attribute protected T : int[] from class com.williamfiset.algorithms.strings.Lcs.SuffixArray
c6e64e303e1d25305df27de83c6888fe26440145,ENCAPSULATE_ATTRIBUTE, Encapsulate Attribute Encapsulate Attribute	protected T : int[] from class com.williamfiset.algorithms.strings.Lcs.SuffixArray
c6e64e303e1d25305df27de83c6888fe26440145,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	public to protected in attribute protected sa : int[] from class com.williamfiset.algorithms.strings.Lcs.SuffixArray
c6e64e303e1d25305df27de83c6888fe26440145,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	public to protected in attribute protected lcp : int[] from class com.williamfiset.algorithms.strings.Lcs.SuffixArray
c6e64e303e1d25305df27de83c6888fe26440145,RENAME_VARIABLE, Rename Variable Rename Variable	text : int[] to t : int[] in method protected toIntArray(s String) : int[] from class com.williamfiset.algorithms.strings.Lcs.SuffixArray
6d34107e6fa3722ff1d79411ada74b91f44f9361,RENAME_METHOD, Rename Method Rename Method	public breakingLcs() : void renamed to public multipleKValueTest1() : void in class javatests.com.williamfiset.algorithms.strings.LongestCommonSubstringTest
61a66049f6b08fe43f7065214ffe682b858e20b8,RENAME_METHOD, Rename Method Rename Method	private example2() : void renamed to private exampleFromSlides() : void in class com.williamfiset.algorithms.datastructures.sparsetable.SparseTable
ec45923589861da66fcecf6787b8b827cb629cea,MOVE_SOURCE_FOLDER, Move Source Folder Move Source Folder	DynamicProgrammingClassics to DynamicProgramming
2167477ccc86a1c00b60c7e113e2664a16e906cf,MOVE_CLASS, Move Class Move Class	ConvexHullMonotoneChainAlgorithm.PointComparator moved to ConvexHullMonotoneChainsAlgorithm.PointComparator
2167477ccc86a1c00b60c7e113e2664a16e906cf,RENAME_VARIABLE, Rename Variable Rename Variable	arr : Point2D[] to hull : Point2D[] in method package convexHull(pts Point2D[]) : Point2D[] from class ConvexHullMonotoneChainsAlgorithm
2167477ccc86a1c00b60c7e113e2664a16e906cf,MOVE_OPERATION, Move Method Move Method	package convexHull(pts Point2D[]) : Point2D[] from class ConvexHullMonotoneChainAlgorithm to package convexHull(pts Point2D[]) : Point2D[] from class ConvexHullMonotoneChainsAlgorithm
bc196f975940923000affc91cb437de9e7b6722c,RENAME_VARIABLE, Rename Variable Rename Variable	furthestIndex : int to furthestNode1 : int in method public findTreeCenters(graph List<List<Integer>>) : List<Integer> from class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenterLongestPathImpl
bc196f975940923000affc91cb437de9e7b6722c,RENAME_VARIABLE, Rename Variable Rename Variable	newfurthestIndex : int to furthestNode2 : int in method public findTreeCenters(graph List<List<Integer>>) : List<Integer> from class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenterLongestPathImpl
2ef2ca3a29c109836b938fd3c20b65aeba2b05bd,RENAME_METHOD, Rename Method Rename Method	private propagateUpdate(i int  tl int  tr int  x long) : void renamed to private rangeUpdate2(i int  tl int  tr int  l int  r int  x long) : void in class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree
2ef2ca3a29c109836b938fd3c20b65aeba2b05bd,RENAME_METHOD, Rename Method Rename Method	private propagateQuery(i int  tl int  tr int) : void renamed to private propagateWithCombinationFn(i int  tl int  tr int) : void in class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree
2ef2ca3a29c109836b938fd3c20b65aeba2b05bd,RENAME_METHOD, Rename Method Rename Method	private rangeUpdate(i int  tl int  tr int  l int  r int  x long) : void renamed to private rangeUpdate1(i int  tl int  tr int  l int  r int  x long) : void in class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree
2ef2ca3a29c109836b938fd3c20b65aeba2b05bd,EXTRACT_OPERATION, Extract Method Extract Method	private propagateWithRangeUpdateFn(i int  tl int  tr int) : void extracted from private rangeUpdate(i int  tl int  tr int  l int  r int  x long) : void in class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree
2ef2ca3a29c109836b938fd3c20b65aeba2b05bd,ADD_PARAMETER, Add Parameter Add Parameter	l : int in method private rangeUpdate2(i int  tl int  tr int  l int  r int  x long) : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree
2ef2ca3a29c109836b938fd3c20b65aeba2b05bd,ADD_PARAMETER, Add Parameter Add Parameter	r : int in method private rangeUpdate2(i int  tl int  tr int  l int  r int  x long) : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree
2ef2ca3a29c109836b938fd3c20b65aeba2b05bd,RENAME_ATTRIBUTE, Rename Attribute Rename Attribute	segmentCombinationFn : SegmentCombinationFn to segmentCombinationFunction : SegmentCombinationFn in class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree
2ef2ca3a29c109836b938fd3c20b65aeba2b05bd,MOVE_AND_RENAME_OPERATION, Move And Rename Method Move And Rename Method	private bruteForceSumRangeQuery(values long[]  l int  r int) : long from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTreeTest to private bruteForceSum(values long[]  l int  r int) : long from class com.williamfiset.algorithms.datastructures.segmenttree.MinQueryAssignUpdateSegmentTreeTest
64e1754afb2474bae53935112304c44014f4e752,ENCAPSULATE_ATTRIBUTE, Encapsulate Attribute Encapsulate Attribute	private parent : TreeNode from class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphism.TreeNode
cb814bc7cf3e7b9c8780fef083a69e711013fb8d,RENAME_CLASS, Rename Class Rename Class	com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample.FordFulkersonDfsSolverAdjacencyList renamed to com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample.FordFulkersonDfsSolver
cb814bc7cf3e7b9c8780fef083a69e711013fb8d,INLINE_OPERATION, Inline Method Inline Method	private exampleFromSlides() : void inlined to public main(args String[]) : void in class com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample
cb814bc7cf3e7b9c8780fef083a69e711013fb8d,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	solver : FordFulkersonDfsSolverAdjacencyList to solver : NetworkFlowSolverBase in method public main(args String[]) : void from class com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample
8cce55c6510646429238a1f8c053c1cc7ee09c46,EXTRACT_OPERATION, Extract Method Extract Method	private firstGraphFromSlides() : void extracted from public main(args String[]) : void in class com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList
550373583e53ecc6b252bfc783bc2f20fde5b2a4,RENAME_VARIABLE, Rename Variable Rename Variable	m : int to matchingSize : int in method private reconstructMatching(history int[]) : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive
550373583e53ecc6b252bfc783bc2f20fde5b2a4,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	costMatrix : double[][] to costMatrix : Double[][] in method private test() : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive
550373583e53ecc6b252bfc783bc2f20fde5b2a4,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	cost : double[][] to cost : Double[][] in method public WeightedMaximumCardinalityMatchingRecursive(cost Double[][]) from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive
550373583e53ecc6b252bfc783bc2f20fde5b2a4,EXTRACT_VARIABLE, Extract Variable Extract Variable	edgeCost : double in method private setCostMatrix(inputMatrix Double[][]) : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive
550373583e53ecc6b252bfc783bc2f20fde5b2a4,EXTRACT_VARIABLE, Extract Variable Extract Variable	edgeCost : double in method private setCostMatrix(inputMatrix Double[][]) : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive
550373583e53ecc6b252bfc783bc2f20fde5b2a4,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	inputMatrix : double[][] to inputMatrix : Double[][] in method private setCostMatrix(inputMatrix Double[][]) : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive
550373583e53ecc6b252bfc783bc2f20fde5b2a4,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	matrix : double[][] to matrix : Double[][] in class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest.BruteForceMwpm
550373583e53ecc6b252bfc783bc2f20fde5b2a4,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	matrix : double[][] to matrix : Double[][] in method public BruteForceMwpm(matrix Double[][]) from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest.BruteForceMwpm
550373583e53ecc6b252bfc783bc2f20fde5b2a4,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	g : double[][] to g : Double[][] in method public testSmallGraph_oddSize() : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest
550373583e53ecc6b252bfc783bc2f20fde5b2a4,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	costMatrix : double[][] to costMatrix : Double[][] in method public testSmallestMatrix1() : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest
550373583e53ecc6b252bfc783bc2f20fde5b2a4,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	costMatrix : double[][] to costMatrix : Double[][] in method public testSmallMatrix1() : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest
550373583e53ecc6b252bfc783bc2f20fde5b2a4,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	costMatrix : double[][] to costMatrix : Double[][] in method public testSmallMatrix2() : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest
550373583e53ecc6b252bfc783bc2f20fde5b2a4,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	costMatrix : double[][] to costMatrix : Double[][] in method public testMediumMatrix1() : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest
550373583e53ecc6b252bfc783bc2f20fde5b2a4,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	costMatrix : double[][] to costMatrix : Double[][] in method public testMediumMatrix2() : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest
550373583e53ecc6b252bfc783bc2f20fde5b2a4,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	g : double[][] to g : Double[][] in method public testMediumGraph_evenSize_fromSlides() : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest
550373583e53ecc6b252bfc783bc2f20fde5b2a4,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	costMatrix : double[][] to costMatrix : Double[][] in method public testMatchingOutputsUniqueNodes() : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest
550373583e53ecc6b252bfc783bc2f20fde5b2a4,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	costMatrix : double[][] to costMatrix : Double[][] in method public testMatchingAndCostAreConsistent() : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest
550373583e53ecc6b252bfc783bc2f20fde5b2a4,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	costMatrix : double[][] to costMatrix : Double[][] in method public testAgainstBruteForce_largeValues() : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest
550373583e53ecc6b252bfc783bc2f20fde5b2a4,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	costMatrix : double[][] to costMatrix : Double[][] in method public testAgainstBruteForce_smallValues() : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest
550373583e53ecc6b252bfc783bc2f20fde5b2a4,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	costMatrix : double[][] to costMatrix : Double[][] in method private createEmptyMatrix(n int) : Double[][] from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest
550373583e53ecc6b252bfc783bc2f20fde5b2a4,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	double[][] to Double[][] in method private createEmptyMatrix(n int) : Double[][] from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest
550373583e53ecc6b252bfc783bc2f20fde5b2a4,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	g : double[][] to g : Double[][] in method private addUndirectedWeightedEdge(g Double[][]  from int  to int  weight double) : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest
550373583e53ecc6b252bfc783bc2f20fde5b2a4,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	dist : double[][] to dist : Double[][] in method public randomFillSymmetricMatrix(dist Double[][]  maxValue int) : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest
7a4c5979632e87dcfdf2961c5f8c40c85c70eb1b,RENAME_VARIABLE, Rename Variable Rename Variable	dist : double to d : double in method public circleCircleIntersection(c1 Point2D  r1 double  c2 Point2D  r2 double) : Point2D[] from class CircleCircleIntersection
6c735c88980c737feaa19054eea4da12c13d06c6,EXTRACT_OPERATION, Extract Method Extract Method	private solve() : void extracted from public isBipartite() : int[] in class com.williamfiset.algorithms.graphtheory.networkflow.BipartiteGraphCheckAdjacencyList
6c735c88980c737feaa19054eea4da12c13d06c6,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	int[] to boolean in method public isBipartite() : boolean from class com.williamfiset.algorithms.graphtheory.networkflow.BipartiteGraphCheckAdjacencyList
6c735c88980c737feaa19054eea4da12c13d06c6,REMOVE_PARAMETER, Remove Parameter Remove Parameter	colors : int[] in method private colorGraph(i int  color int  colors int[]) : int from class com.williamfiset.algorithms.graphtheory.networkflow.BipartiteGraphCheckAdjacencyList
512f29cfa8cda55c2093f5a13feabbbcb541cabd,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	expected : List<Pair> to expected : List<Pair<Integer Integer>> in method public testGraphInSlides() : void from class com.williamfiset.algorithms.graphtheory.BridgesAdjacencyListIterativeTest
512f29cfa8cda55c2093f5a13feabbbcb541cabd,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	expected : List<Pair> to expected : List<Pair<Integer Integer>> in method public testDisconnectedGraph() : void from class com.williamfiset.algorithms.graphtheory.BridgesAdjacencyListIterativeTest
512f29cfa8cda55c2093f5a13feabbbcb541cabd,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	pair : Pair to pair : Pair<Integer Integer> in method private getSortedBridges(bridgeNodes List<Integer>) : List<Pair<Integer Integer>> from class com.williamfiset.algorithms.graphtheory.BridgesAdjacencyListIterativeTest
94dceb165a1d7ac0aefff02af0d649497020b131,RENAME_METHOD, Rename Method Rename Method	public addChild(child TreeNode) : void renamed to public addChildren(nodes TreeNode...) : void in class com.williamfiset.algorithms.graphtheory.treealgorithms.RootingTree.TreeNode
94dceb165a1d7ac0aefff02af0d649497020b131,RENAME_PARAMETER, Rename Parameter Rename Parameter	child : TreeNode to nodes : TreeNode... in method public addChildren(nodes TreeNode...) : void from class com.williamfiset.algorithms.graphtheory.treealgorithms.RootingTree.TreeNode
94dceb165a1d7ac0aefff02af0d649497020b131,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	child : TreeNode to nodes : TreeNode... in method public addChildren(nodes TreeNode...) : void from class com.williamfiset.algorithms.graphtheory.treealgorithms.RootingTree.TreeNode
94dceb165a1d7ac0aefff02af0d649497020b131,REMOVE_PARAMETER, Remove Parameter Remove Parameter	parent : TreeNode in method private buildTree(graph List<List<Integer>>  node TreeNode  parent TreeNode) : TreeNode from class com.williamfiset.algorithms.graphtheory.treealgorithms.RootingTree
94dceb165a1d7ac0aefff02af0d649497020b131,REMOVE_VARIABLE_MODIFIER, Remove Variable Modifier Remove Variable Modifier	final in variable n : int in method private findTreeCenters(tree List<List<Integer>>) : List<Integer> from class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphism
94dceb165a1d7ac0aefff02af0d649497020b131,RENAME_VARIABLE, Rename Variable Rename Variable	childId : int to neighbor : int in method private buildTree(graph List<List<Integer>>  node TreeNode) : TreeNode from class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphism
94dceb165a1d7ac0aefff02af0d649497020b131,REMOVE_PARAMETER, Remove Parameter Remove Parameter	parent : TreeNode in method private buildTree(graph List<List<Integer>>  node TreeNode  parent TreeNode) : TreeNode from class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphism
07e6705cdb1ac7607c13891dc721fe6949cc3153,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	visited : int[] to visited : boolean[] in method public edmondsKarp(graph List<Edge>[]  source int  sink int) : int from class EdmondsKarpAdjacencyList
07e6705cdb1ac7607c13891dc721fe6949cc3153,INLINE_VARIABLE, Inline Variable Inline Variable	edges : List<Edge> in method private bfs(graph List<Edge>[]  visited int[]  source int  sink int) : int from class EdmondsKarpAdjacencyList
07e6705cdb1ac7607c13891dc721fe6949cc3153,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	visited : int[] to visited : boolean[] in method private bfs(graph List<Edge>[]  visited boolean[]  source int  sink int) : int from class EdmondsKarpAdjacencyList
95b74983aec9594c1eb78fb8f145ab098b786a66,INLINE_OPERATION, Inline Method Inline Method	public butterflyStrangeOrdering() : void inlined to public main(arg String[]) : void in class TarjanSccSolverAdjacencyList
95b74983aec9594c1eb78fb8f145ab098b786a66,RENAME_VARIABLE, Rename Variable Rename Variable	g : List<List<Integer>> to graph : List<List<Integer>> in method public main(arg String[]) : void from class TarjanSccSolverAdjacencyList
f399c4bc16c6d2517dc80b39ba3d62caa61ae4db,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	height : int to height : double in method public testTreeHeight() : void from class com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeTest
f399c4bc16c6d2517dc80b39ba3d62caa61ae4db,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	height : int to height : double in method public testTreeHeight() : void from class com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTreeTest
f399c4bc16c6d2517dc80b39ba3d62caa61ae4db,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	package to public in class com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTreeTest
f399c4bc16c6d2517dc80b39ba3d62caa61ae4db,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public getRoot() : void from class com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTreeTest
f399c4bc16c6d2517dc80b39ba3d62caa61ae4db,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public splayInsertDeleteSearch() : void from class com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTreeTest
f399c4bc16c6d2517dc80b39ba3d62caa61ae4db,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public insertSearch() : void from class com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTreeTest
f399c4bc16c6d2517dc80b39ba3d62caa61ae4db,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public findMax() : void from class com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTreeTest
f399c4bc16c6d2517dc80b39ba3d62caa61ae4db,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public splayTreePriorityQueueConsistencyTest() : void from class com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTreeTest
f399c4bc16c6d2517dc80b39ba3d62caa61ae4db,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test to @Test(expected = Exception.class) in method public testPollOnEmpty() : void from class com.williamfiset.algorithms.datastructures.queue.QueueTest
f399c4bc16c6d2517dc80b39ba3d62caa61ae4db,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test to @Test(expected = Exception.class) in method public testPeekOnEmpty() : void from class com.williamfiset.algorithms.datastructures.queue.QueueTest
f399c4bc16c6d2517dc80b39ba3d62caa61ae4db,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test to @Test(expected = Exception.class) in method public testPopOnEmpty() : void from class com.williamfiset.algorithms.datastructures.stack.StackTest
f399c4bc16c6d2517dc80b39ba3d62caa61ae4db,MODIFY_METHOD_ANNOTATION, Modify Method Annotation Modify Method Annotation	@Test to @Test(expected = Exception.class) in method public testPeekOnEmpty() : void from class com.williamfiset.algorithms.datastructures.stack.StackTest
acc52215e4ee11511404c793a4d0557e20dfe5d2,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	q : ArrayDeque<Integer> to q : Deque<Integer> in method private bfs() : boolean from class com.williamfiset.algorithms.graphtheory.networkflow.Dinics
acc52215e4ee11511404c793a4d0557e20dfe5d2,ADD_PARAMETER, Add Parameter Add Parameter	p : int[] in method private dfs(at int  p int[]  flow long) : long from class com.williamfiset.algorithms.graphtheory.networkflow.Dinics
5896bda31c94838b75832cd9b0fda752dd28dd3f,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	package to public in class BreadthFirstSearchAdjacencyListIterative.Edge
5896bda31c94838b75832cd9b0fda752dd28dd3f,EXTRACT_OPERATION, Extract Method Extract Method	public addUndirectedEdge(graph List<List<Edge>>  u int  v int  cost int) : void extracted from public main(args String[]) : void in class BreadthFirstSearchAdjacencyListIterative
5896bda31c94838b75832cd9b0fda752dd28dd3f,REPLACE_VARIABLE_WITH_ATTRIBUTE, Replace Variable With Attribute Replace Variable With Attribute	DEPTH_TOKEN : int to DEPTH_TOKEN : int in method private bfs(start int  end int) : void from class BreadthFirstSearchAdjacencyListIterative
5896bda31c94838b75832cd9b0fda752dd28dd3f,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	queue : ArrayDeque<Integer> to queue : Deque<Integer> in method private bfs(start int  end int) : void from class BreadthFirstSearchAdjacencyListIterative
5896bda31c94838b75832cd9b0fda752dd28dd3f,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	node : Integer to node : int in method private bfs(start int  end int) : void from class BreadthFirstSearchAdjacencyListIterative
5896bda31c94838b75832cd9b0fda752dd28dd3f,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	int to void in method private bfs(start int  end int) : void from class BreadthFirstSearchAdjacencyListIterative
5896bda31c94838b75832cd9b0fda752dd28dd3f,RENAME_PARAMETER, Rename Parameter Rename Parameter	n : int to end : int in method private bfs(start int  end int) : void from class BreadthFirstSearchAdjacencyListIterative
5896bda31c94838b75832cd9b0fda752dd28dd3f,REMOVE_PARAMETER, Remove Parameter Remove Parameter	graph : Map<Integer List<Edge>> in method package bfs(graph Map<Integer List<Edge>>  start int  n int) : int from class BreadthFirstSearchAdjacencyListIterative
5896bda31c94838b75832cd9b0fda752dd28dd3f,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private bfs(start int  end int) : void from class BreadthFirstSearchAdjacencyListIterative
5896bda31c94838b75832cd9b0fda752dd28dd3f,REMOVE_METHOD_MODIFIER, Remove Method Modifier Remove Method Modifier	static in method package bfs(graph Map<Integer List<Edge>>  start int  n int) : int from class BreadthFirstSearchAdjacencyListIterative
5896bda31c94838b75832cd9b0fda752dd28dd3f,REPLACE_VARIABLE_WITH_ATTRIBUTE, Replace Variable With Attribute Replace Variable With Attribute	count : int to maxDepth : int in method private bfs(start int  end int) : void from class BreadthFirstSearchAdjacencyListIterative
f04ecba3ce78d072fce8fc9d8d55d06c047ab74a,RENAME_VARIABLE, Rename Variable Rename Variable	window : SlidingWindowMinimum to w : SlidingWindowMinimum in method public lcs(strings String[]  K int) : TreeSet<String> from class LongestCommonSubstring
0fefc4cc66576f5c54e40e1c16428d90d75b12c8,RENAME_METHOD, Rename Method Rename Method	public testSingleClauseSatisfiableCase() : void renamed to public testSimpleSatisfiable() : void in class TwoSatSolverAdjacencyListTest
0fefc4cc66576f5c54e40e1c16428d90d75b12c8,RENAME_VARIABLE, Rename Variable Rename Variable	graph : List<List<Integer>> to g : List<List<Integer>> in method public testSimpleSatisfiable() : void from class TwoSatSolverAdjacencyListTest
9034ddf5d40efca2c8d934a536f7e0c528cbdbc3,INLINE_VARIABLE, Inline Variable Inline Variable	rightChild : Node in method private remove(node Node  elem T) : Node from class com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree
9034ddf5d40efca2c8d934a536f7e0c528cbdbc3,INLINE_VARIABLE, Inline Variable Inline Variable	leftChild : Node in method private remove(node Node  elem T) : Node from class com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree
0d6fdde1c3b38df0bce9227fe5908e8b7c6c38bb,EXTRACT_OPERATION, Extract Method Extract Method	public test1() : void extracted from public main(args String[]) : void in class TravelingSalesmanProblemDynamicProgramming
0d6fdde1c3b38df0bce9227fe5908e8b7c6c38bb,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	memo : Double[][] to memo : TspSoln[][] in method public tsp(dist double[][]) : TspSoln from class TravelingSalesmanProblemDynamicProgramming
0d6fdde1c3b38df0bce9227fe5908e8b7c6c38bb,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	double to TspSoln in method public tsp(dist double[][]) : TspSoln from class TravelingSalesmanProblemDynamicProgramming
0d6fdde1c3b38df0bce9227fe5908e8b7c6c38bb,EXTRACT_VARIABLE, Extract Variable Extract Variable	soln : TspSoln in method private tsp(i int  state int  path LinkedList<Integer>  dist double[][]  memo TspSoln[][]) : TspSoln from class TravelingSalesmanProblemDynamicProgramming
0d6fdde1c3b38df0bce9227fe5908e8b7c6c38bb,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	memo : Double[][] to memo : TspSoln[][] in method private tsp(i int  state int  path LinkedList<Integer>  dist double[][]  memo TspSoln[][]) : TspSoln from class TravelingSalesmanProblemDynamicProgramming
0d6fdde1c3b38df0bce9227fe5908e8b7c6c38bb,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	double to TspSoln in method private tsp(i int  state int  path LinkedList<Integer>  dist double[][]  memo TspSoln[][]) : TspSoln from class TravelingSalesmanProblemDynamicProgramming
0d6fdde1c3b38df0bce9227fe5908e8b7c6c38bb,ADD_PARAMETER, Add Parameter Add Parameter	path : LinkedList<Integer> in method private tsp(i int  state int  path LinkedList<Integer>  dist double[][]  memo TspSoln[][]) : TspSoln from class TravelingSalesmanProblemDynamicProgramming
cb61b106c8dc8a34f06e597c633552b66e0e149c,MOVE_CLASS, Move Class Move Class	com.williamfiset.algorithms.graphtheory.BipartiteGraphCheckAdjacencyList moved to com.williamfiset.algorithms.graphtheory.networkflow.BipartiteGraphCheckAdjacencyList
cb61b106c8dc8a34f06e597c633552b66e0e149c,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	private to public in attribute public BLACK : int from class com.williamfiset.algorithms.graphtheory.networkflow.BipartiteGraphCheckAdjacencyList
cb61b106c8dc8a34f06e597c633552b66e0e149c,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	private to public in attribute public RED : int from class com.williamfiset.algorithms.graphtheory.networkflow.BipartiteGraphCheckAdjacencyList
cb61b106c8dc8a34f06e597c633552b66e0e149c,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	graph : Map<Integer List<Edge>> to graph : List<List<Integer>> in method public main(args String[]) : void from class com.williamfiset.algorithms.graphtheory.networkflow.BipartiteGraphCheckAdjacencyList
cb61b106c8dc8a34f06e597c633552b66e0e149c,REMOVE_PARAMETER, Remove Parameter Remove Parameter	graph : Map<Integer List<Edge>> in method public isBipartite(graph Map<Integer List<Edge>>  n int) : int[] from class com.williamfiset.algorithms.graphtheory.BipartiteGraphCheckAdjacencyList
cb61b106c8dc8a34f06e597c633552b66e0e149c,REMOVE_PARAMETER, Remove Parameter Remove Parameter	n : int in method public isBipartite(graph Map<Integer List<Edge>>  n int) : int[] from class com.williamfiset.algorithms.graphtheory.BipartiteGraphCheckAdjacencyList
cb61b106c8dc8a34f06e597c633552b66e0e149c,REMOVE_METHOD_MODIFIER, Remove Method Modifier Remove Method Modifier	static in method public isBipartite(graph Map<Integer List<Edge>>  n int) : int[] from class com.williamfiset.algorithms.graphtheory.BipartiteGraphCheckAdjacencyList
cb61b106c8dc8a34f06e597c633552b66e0e149c,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	edge : Edge to to : int in method private colorGraph(i int  color int  colors int[]) : int from class com.williamfiset.algorithms.graphtheory.networkflow.BipartiteGraphCheckAdjacencyList
cb61b106c8dc8a34f06e597c633552b66e0e149c,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	edges : List<Edge> to edges : List<Integer> in method private colorGraph(i int  color int  colors int[]) : int from class com.williamfiset.algorithms.graphtheory.networkflow.BipartiteGraphCheckAdjacencyList
cb61b106c8dc8a34f06e597c633552b66e0e149c,RENAME_VARIABLE, Rename Variable Rename Variable	edge : Edge to to : int in method private colorGraph(i int  color int  colors int[]) : int from class com.williamfiset.algorithms.graphtheory.networkflow.BipartiteGraphCheckAdjacencyList
cb61b106c8dc8a34f06e597c633552b66e0e149c,REMOVE_PARAMETER, Remove Parameter Remove Parameter	graph : Map<Integer List<Edge>> in method private colorGraph(i int  color int  colors int[]  graph Map<Integer List<Edge>>) : int from class com.williamfiset.algorithms.graphtheory.BipartiteGraphCheckAdjacencyList
cb61b106c8dc8a34f06e597c633552b66e0e149c,REMOVE_METHOD_MODIFIER, Remove Method Modifier Remove Method Modifier	static in method private colorGraph(i int  color int  colors int[]  graph Map<Integer List<Edge>>) : int from class com.williamfiset.algorithms.graphtheory.BipartiteGraphCheckAdjacencyList
cb61b106c8dc8a34f06e597c633552b66e0e149c,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	e : Edge to t : int in method private displayGraph(graph List<List<Integer>>) : void from class com.williamfiset.algorithms.graphtheory.networkflow.BipartiteGraphCheckAdjacencyList
cb61b106c8dc8a34f06e597c633552b66e0e149c,LOCALIZE_PARAMETER, Localize Parameter Localize Parameter	n : int to n : int in method private displayGraph(graph List<List<Integer>>) : void from class com.williamfiset.algorithms.graphtheory.networkflow.BipartiteGraphCheckAdjacencyList
cb61b106c8dc8a34f06e597c633552b66e0e149c,ADD_VARIABLE_MODIFIER, Add Variable Modifier Add Variable Modifier	final in variable n : int in method private displayGraph(graph List<List<Integer>>) : void from class com.williamfiset.algorithms.graphtheory.networkflow.BipartiteGraphCheckAdjacencyList
cb61b106c8dc8a34f06e597c633552b66e0e149c,RENAME_VARIABLE, Rename Variable Rename Variable	e : Edge to t : int in method private displayGraph(graph List<List<Integer>>) : void from class com.williamfiset.algorithms.graphtheory.networkflow.BipartiteGraphCheckAdjacencyList
cb61b106c8dc8a34f06e597c633552b66e0e149c,RENAME_VARIABLE, Rename Variable Rename Variable	i : int to f : int in method private displayGraph(graph List<List<Integer>>) : void from class com.williamfiset.algorithms.graphtheory.networkflow.BipartiteGraphCheckAdjacencyList
cb61b106c8dc8a34f06e597c633552b66e0e149c,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	graph : Map<Integer List<Edge>> to graph : List<List<Integer>> in method private displayGraph(graph List<List<Integer>>) : void from class com.williamfiset.algorithms.graphtheory.networkflow.BipartiteGraphCheckAdjacencyList
469bfa121225520badd6064f4d8b0653041fcfa6,RENAME_CLASS, Rename Class Rename Class	Permutation renamed to Permutations
bc6c8c1ec4f3bcfbd0ce986f32fcdc7aea61b145,LOCALIZE_PARAMETER, Localize Parameter Localize Parameter	initialValues : long[] to initialValues : long[] in method package solveRecurrence(coeffs long[]  f_0 long  k long  n long) : long from class LinearRecurrenceSolver
bc6c8c1ec4f3bcfbd0ce986f32fcdc7aea61b145,ADD_PARAMETER, Add Parameter Add Parameter	f_0 : long in method package solveRecurrence(coeffs long[]  f_0 long  k long  n long) : long from class LinearRecurrenceSolver
3863bdaba98bfc962b4d81273bdd41d4dd7cd934,RENAME_METHOD, Rename Method Rename Method	private rangeQuery(i int  tl int  tr int  l int  r int) : long renamed to private rangeQuery1(i int  tl int  tr int  l int  r int) : Long in class com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTree
3863bdaba98bfc962b4d81273bdd41d4dd7cd934,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	t : long[] to t : Long[] in class com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTree
3863bdaba98bfc962b4d81273bdd41d4dd7cd934,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	lazy : long[] to lazy : Long[] in class com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTree
3863bdaba98bfc962b4d81273bdd41d4dd7cd934,EXTRACT_VARIABLE, Extract Variable Extract Variable	rangeSum : long in method private propagate1(i int  tl int  tr int) : void from class com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTree
3863bdaba98bfc962b4d81273bdd41d4dd7cd934,EXTRACT_VARIABLE, Extract Variable Extract Variable	rangeSum : long in method private rangeUpdate1(i int  tl int  tr int  l int  r int  x long) : void from class com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTree
3863bdaba98bfc962b4d81273bdd41d4dd7cd934,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	long to Long in method public rangeQuery1(l int  r int) : Long from class com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTree
3863bdaba98bfc962b4d81273bdd41d4dd7cd934,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	long to Long in method private rangeQuery1(i int  tl int  tr int  l int  r int) : Long from class com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTree
3863bdaba98bfc962b4d81273bdd41d4dd7cd934,RENAME_METHOD, Rename Method Rename Method	public testSimpleAdditionRangeUpdate() : void renamed to public simpleTest() : void in class com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTreeTest
3863bdaba98bfc962b4d81273bdd41d4dd7cd934,RENAME_VARIABLE, Rename Variable Rename Variable	bfMin : long to bfSum : long in method public testRandomRangeAssignUpdatesWithSumRangeQueries() : void from class com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTreeTest
3863bdaba98bfc962b4d81273bdd41d4dd7cd934,RENAME_VARIABLE, Rename Variable Rename Variable	segTreeMin : long to segTreeSum : long in method public testRandomRangeAssignUpdatesWithSumRangeQueries() : void from class com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTreeTest
14021b5888ee3be3f0e7e21a55682f339f18092b,EXTRACT_OPERATION, Extract Method Extract Method	package initializeEmptyGraph(N int) : List<List<Integer>> extracted from public main(args String[]) : void in class EulerianPathDirectedEdgesAdjacencyList
14021b5888ee3be3f0e7e21a55682f339f18092b,EXTRACT_OPERATION, Extract Method Extract Method	public testMoreComplexPath() : void extracted from public main(args String[]) : void in class EulerianPathDirectedEdgesAdjacencyList
14021b5888ee3be3f0e7e21a55682f339f18092b,SPLIT_VARIABLE, Split Variable Split Variable	edgesLeft : int[] to [indexes : int[]  N : int] in method package eulerianPath(graph List<List<Integer>>) : int[] from class EulerianPathDirectedEdgesAdjacencyList
238a109f44068eaf8004f0595ab695cb284cabbc,RENAME_METHOD, Rename Method Rename Method	public rangeQuery(l int  r int) : long renamed to public rangeQuery1(l int  r int) : Long in class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree
238a109f44068eaf8004f0595ab695cb284cabbc,RENAME_METHOD, Rename Method Rename Method	private rangeQuery(i int  tl int  tr int  l int  r int) : long renamed to private rangeQuery1(i int  tl int  tr int  l int  r int) : Long in class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree
238a109f44068eaf8004f0595ab695cb284cabbc,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	t : long[] to t : Long[] in class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree
238a109f44068eaf8004f0595ab695cb284cabbc,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	lazy : long[] to lazy : Long[] in class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree
238a109f44068eaf8004f0595ab695cb284cabbc,EXTRACT_OPERATION, Extract Method Extract Method	private propagateLazy1(i int  tl int  tr int  delta long) : void extracted from private rangeUpdate1(i int  tl int  tr int  l int  r int  x long) : void in class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree
238a109f44068eaf8004f0595ab695cb284cabbc,RENAME_PARAMETER, Rename Parameter Rename Parameter	x : long to delta : long in method private propagateLazy1(i int  tl int  tr int  delta long) : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree
238a109f44068eaf8004f0595ab695cb284cabbc,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	long to Long in method public rangeQuery1(l int  r int) : Long from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree
238a109f44068eaf8004f0595ab695cb284cabbc,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	long to Long in method private rangeQuery1(i int  tl int  tr int  l int  r int) : Long from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree
238a109f44068eaf8004f0595ab695cb284cabbc,RENAME_ATTRIBUTE, Rename Attribute Rename Attribute	minFn : BinaryOperator<Long> to sumQuerySumUpdate : Ruf in class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree
238a109f44068eaf8004f0595ab695cb284cabbc,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	minFn : BinaryOperator<Long> to sumQuerySumUpdate : Ruf in class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree
238a109f44068eaf8004f0595ab695cb284cabbc,RENAME_ATTRIBUTE, Rename Attribute Rename Attribute	maxFn : BinaryOperator<Long> to maxCombinationFn : BinaryOperator<Long> in class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree
238a109f44068eaf8004f0595ab695cb284cabbc,RENAME_ATTRIBUTE, Rename Attribute Rename Attribute	mulFn : BinaryOperator<Long> to sumQueryMulUpdate : Ruf in class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree
238a109f44068eaf8004f0595ab695cb284cabbc,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	mulFn : BinaryOperator<Long> to sumQueryMulUpdate : Ruf in class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree
238a109f44068eaf8004f0595ab695cb284cabbc,EXTRACT_OPERATION, Extract Method Extract Method	private propagateLazy(i int  tl int  tr int  val long) : void extracted from private propagate1(i int  tl int  tr int) : void in class com.williamfiset.algorithms.datastructures.segmenttree.MinQueryAssignUpdateSegmentTree
238a109f44068eaf8004f0595ab695cb284cabbc,EXTRACT_OPERATION, Extract Method Extract Method	private propagateLazy(i int  tl int  tr int  val long) : void extracted from private rangeUpdate1(i int  tl int  tr int  l int  r int  x long) : void in class com.williamfiset.algorithms.datastructures.segmenttree.MinQueryAssignUpdateSegmentTree
238a109f44068eaf8004f0595ab695cb284cabbc,RENAME_PARAMETER, Rename Parameter Rename Parameter	x : long to val : long in method private propagateLazy(i int  tl int  tr int  val long) : void from class com.williamfiset.algorithms.datastructures.segmenttree.MinQueryAssignUpdateSegmentTree
238a109f44068eaf8004f0595ab695cb284cabbc,EXTRACT_OPERATION, Extract Method Extract Method	private minSegmentUpdateFn(base long  tl int  tr int  x long) : Long extracted from private rangeUpdate1(i int  tl int  tr int  l int  r int  x long) : void in class com.williamfiset.algorithms.datastructures.segmenttree.MinQuerySumUpdateSegmentTree
238a109f44068eaf8004f0595ab695cb284cabbc,RENAME_METHOD, Rename Method Rename Method	private function(a Long  b Long) : Long renamed to private sumCombinationFn(a Long  b Long) : Long in class com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTree
238a109f44068eaf8004f0595ab695cb284cabbc,EXTRACT_OPERATION, Extract Method Extract Method	private sumRangeUpdateAssignFn(base long  tl int  tr int  x long) : Long extracted from private propagate1(i int  tl int  tr int) : void in class com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTree
238a109f44068eaf8004f0595ab695cb284cabbc,EXTRACT_OPERATION, Extract Method Extract Method	private propagateLazy(i int  tl int  tr int  val long) : void extracted from private propagate1(i int  tl int  tr int) : void in class com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTree
238a109f44068eaf8004f0595ab695cb284cabbc,EXTRACT_OPERATION, Extract Method Extract Method	private sumRangeUpdateAssignFn(base long  tl int  tr int  x long) : Long extracted from private rangeUpdate1(i int  tl int  tr int  l int  r int  x long) : void in class com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTree
238a109f44068eaf8004f0595ab695cb284cabbc,EXTRACT_OPERATION, Extract Method Extract Method	private propagateLazy(i int  tl int  tr int  val long) : void extracted from private rangeUpdate1(i int  tl int  tr int  l int  r int  x long) : void in class com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTree
238a109f44068eaf8004f0595ab695cb284cabbc,RENAME_PARAMETER, Rename Parameter Rename Parameter	x : long to val : long in method private propagateLazy(i int  tl int  tr int  val long) : void from class com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTree
238a109f44068eaf8004f0595ab695cb284cabbc,EXTRACT_OPERATION, Extract Method Extract Method	private propagateLazy(i int  tl int  tr int  val long) : void extracted from private propagate1(i int  tl int  tr int) : void in class com.williamfiset.algorithms.datastructures.segmenttree.SumQuerySumUpdateSegmentTree
238a109f44068eaf8004f0595ab695cb284cabbc,EXTRACT_OPERATION, Extract Method Extract Method	private propagateLazy(i int  tl int  tr int  val long) : void extracted from private rangeUpdate1(i int  tl int  tr int  l int  r int  x long) : void in class com.williamfiset.algorithms.datastructures.segmenttree.SumQuerySumUpdateSegmentTree
238a109f44068eaf8004f0595ab695cb284cabbc,RENAME_PARAMETER, Rename Parameter Rename Parameter	x : long to val : long in method private propagateLazy(i int  tl int  tr int  val long) : void from class com.williamfiset.algorithms.datastructures.segmenttree.SumQuerySumUpdateSegmentTree
238a109f44068eaf8004f0595ab695cb284cabbc,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	long to Long in method public rangeQuery1(l int  r int) : Long from class com.williamfiset.algorithms.datastructures.segmenttree.MaxQuerySumUpdateSegmentTree
238a109f44068eaf8004f0595ab695cb284cabbc,MOVE_AND_RENAME_OPERATION, Move And Rename Method Move And Rename Method	public rangeQuery2(l int  r int) : long from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree to public rangeQuery1(l int  r int) : Long from class com.williamfiset.algorithms.datastructures.segmenttree.MaxQuerySumUpdateSegmentTree
238a109f44068eaf8004f0595ab695cb284cabbc,ADD_PARAMETER, Add Parameter Add Parameter	values : long[] in method private buildSegmentTree(i int  tl int  tr int  values long[]) : void from class com.williamfiset.algorithms.datastructures.segmenttree.SumQueryMultiplicationUpdateSegmentTree
238a109f44068eaf8004f0595ab695cb284cabbc,REMOVE_PARAMETER, Remove Parameter Remove Parameter	pos : int in method private pointUpdate(i int  pos int  tl int  tr int  newValue long) : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree
238a109f44068eaf8004f0595ab695cb284cabbc,REMOVE_PARAMETER, Remove Parameter Remove Parameter	newValue : long in method private pointUpdate(i int  pos int  tl int  tr int  newValue long) : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree
238a109f44068eaf8004f0595ab695cb284cabbc,MOVE_AND_RENAME_OPERATION, Move And Rename Method Move And Rename Method	private pointUpdate(i int  pos int  tl int  tr int  newValue long) : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree to private buildSegmentTree(i int  tl int  tr int  values long[]) : void from class com.williamfiset.algorithms.datastructures.segmenttree.SumQueryMultiplicationUpdateSegmentTree
238a109f44068eaf8004f0595ab695cb284cabbc,MOVE_AND_RENAME_OPERATION, Move And Rename Method Move And Rename Method	private rangeUpdate2(i int  tl int  tr int  l int  r int  x long) : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree to private rangeUpdate1(i int  tl int  tr int  l int  r int  x long) : void from class com.williamfiset.algorithms.datastructures.segmenttree.SumQueryMultiplicationUpdateSegmentTree
238a109f44068eaf8004f0595ab695cb284cabbc,EXTRACT_OPERATION, Extract Method Extract Method	private propagateLazy(i int  tl int  tr int  val long) : void extracted from private rangeUpdate2(i int  tl int  tr int  l int  r int  x long) : void in class com.williamfiset.algorithms.datastructures.segmenttree.SumQueryMultiplicationUpdateSegmentTree
86716c5d0051afedc233b6ff2880dc33a5c7c2af,RENAME_METHOD, Rename Method Rename Method	public getStronglyConnectedComponentsCount() : int renamed to public countStronglyConnectedComponents() : int in class Tarjan
9fdb736f43e9c2f587957ac83c48aecadd7250d6,EXTRACT_OPERATION, Extract Method Extract Method	private setUp() : void extracted from public getEulerianPath() : int[] in class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
9fdb736f43e9c2f587957ac83c48aecadd7250d6,EXTRACT_OPERATION, Extract Method Extract Method	private graphHasEulerianPath() : boolean extracted from public getEulerianPath() : int[] in class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
9fdb736f43e9c2f587957ac83c48aecadd7250d6,EXTRACT_OPERATION, Extract Method Extract Method	private graphIsConnected() : boolean extracted from public getEulerianPath() : int[] in class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
9fdb736f43e9c2f587957ac83c48aecadd7250d6,REPLACE_VARIABLE_WITH_ATTRIBUTE, Replace Variable With Attribute Replace Variable With Attribute	edgeCount : int to edgeCount : int in method private setUp() : void from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
9fdb736f43e9c2f587957ac83c48aecadd7250d6,REPLACE_VARIABLE_WITH_ATTRIBUTE, Replace Variable With Attribute Replace Variable With Attribute	edgeCount : int to edgeCount : int in method public getEulerianPath() : int[] from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
fe9d5902f8e30a0a1e01a4daefb41a8e6b560da6,MOVE_SOURCE_FOLDER, Move Source Folder Move Source Folder	StringAlgorithms to DynamicProgrammingClassics
415fdfc0bbb4a57c532877bfdd30c491bf518aa7,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public editDistance(a String  b String  insertionCost int  deletionCost int  substitutionCost int) : int from class com.williamfiset.algorithms.dp.EditDistance
028e979cbc094a784481d2f25b715614bfd93135,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	public to private in method private solve() : void from class com.williamfiset.algorithms.graphtheory.Kosaraju
028e979cbc094a784481d2f25b715614bfd93135,RENAME_ATTRIBUTE, Rename Attribute Rename Attribute	transverseGraph : List<List<Integer>> to transposeGraph : List<List<Integer>> in class com.williamfiset.algorithms.graphtheory.Kosaraju
5446166b91508b3e3dc3f65fdea9c4c075e9bd4b,RENAME_ATTRIBUTE, Rename Attribute Rename Attribute	N : int to POPULATION_SZ : int in class GeneticAlgorithm_textSearch
df08e579f0b4ab7116fa82dfc49b5d2109129bf1,RENAME_VARIABLE, Rename Variable Rename Variable	st : SparseTable to sparseTable : SparseTable in method public main(args String[]) : void from class com.williamfiset.algorithms.datastructures.sparsetable.SparseTable
df08e579f0b4ab7116fa82dfc49b5d2109129bf1,RENAME_VARIABLE, Rename Variable Rename Variable	v : long[] to values : long[] in method public main(args String[]) : void from class com.williamfiset.algorithms.datastructures.sparsetable.SparseTable
df08e579f0b4ab7116fa82dfc49b5d2109129bf1,RENAME_ATTRIBUTE, Rename Attribute Rename Attribute	t : long[][] to dp : long[][] in class com.williamfiset.algorithms.datastructures.sparsetable.SparseTable
ec3b338e38f2641ba00d521ceedc32ae2fe0ec0d,RENAME_METHOD, Rename Method Rename Method	public getPath(start int  end int) : List<Integer> renamed to public reconstructShortestPath(start int  end int) : List<Integer> in class FloydWarshallSolver
1b20f5adfdf1433a07c9349ad413598a9f06dd96,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private LOOPS : int from class javatests.com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest
1b20f5adfdf1433a07c9349ad413598a9f06dd96,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private TEST_SZ : int from class javatests.com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest
1b20f5adfdf1433a07c9349ad413598a9f06dd96,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private NUM_NULLS : int from class javatests.com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest
1b20f5adfdf1433a07c9349ad413598a9f06dd96,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private MAX_RAND_NUM : int from class javatests.com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest
1b20f5adfdf1433a07c9349ad413598a9f06dd96,RENAME_VARIABLE, Rename Variable Rename Variable	LIST : LinkedList<Integer> to javaLinkedList : LinkedList<Integer> in method public testRandomizedRemoving() : void from class javatests.com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest
1b20f5adfdf1433a07c9349ad413598a9f06dd96,RENAME_VARIABLE, Rename Variable Rename Variable	LIST : LinkedList<Integer> to javaLinkedList : LinkedList<Integer> in method public testRandomizedRemoveAt() : void from class javatests.com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest
1b20f5adfdf1433a07c9349ad413598a9f06dd96,RENAME_VARIABLE, Rename Variable Rename Variable	LIST : LinkedList<Integer> to javaLinkedList : LinkedList<Integer> in method public testRandomizedIndexOf() : void from class javatests.com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest
704f7eb3030db393d84e0c5f8db02740e6ccc1cd,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	package to private in class ConvexHullMonotoneChainsAlgorithm.PointComparator
704f7eb3030db393d84e0c5f8db02740e6ccc1cd,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private EPS : double from class ConvexHullMonotoneChainsAlgorithm
704f7eb3030db393d84e0c5f8db02740e6ccc1cd,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public convexHull(pts Point2D[]) : Point2D[] from class ConvexHullMonotoneChainsAlgorithm
704f7eb3030db393d84e0c5f8db02740e6ccc1cd,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private orientation(a Point2D  b Point2D  c Point2D) : int from class ConvexHullMonotoneChainsAlgorithm
f1498e56d5178b9417dd98b3e759938297123f2a,EXTRACT_OPERATION, Extract Method Extract Method	private testExample2() : void extracted from public main(args String[]) : void in class com.williamfiset.algorithms.graphtheory.ArticulationPointsAdjacencyList
f708afb7b9b7c3f0d75985baa4848c2fe007d181,RENAME_VARIABLE, Rename Variable Rename Variable	n : int to v : int in method public floydWarshall(distance double[][]) : void from class FloydWarshall
f708afb7b9b7c3f0d75985baa4848c2fe007d181,RENAME_PARAMETER, Rename Parameter Rename Parameter	adjMatrix : double[][] to distance : double[][] in method public floydWarshall(distance double[][]) : void from class FloydWarshall
f708afb7b9b7c3f0d75985baa4848c2fe007d181,RENAME_VARIABLE, Rename Variable Rename Variable	n : int to v : int in method public main(args String[]) : void from class FloydWarshall
3d0ede6cc8a0e55dcd3913bfb67ab805624106f6,ADD_VARIABLE_MODIFIER, Add Variable Modifier Add Variable Modifier	final in variable DEPTH_TOKEN : int in method package bfs(graph Map<Integer List<Edge>>  start int  n int) : int from class BreadthFirstSearchAdjacencyListIterative
ae08df0d7fabd4088bba048f65518eb187864368,RENAME_ATTRIBUTE, Rename Attribute Rename Attribute	rootNumChildren : int to rootNodeOutcomingEdgeCount : int in class ArticulationPointsAdjacencyList
e10c66c24ad464e4c437b19ad09424eecfad9592,INLINE_OPERATION, Inline Method Inline Method	private addInitialEdges() : boolean inlined to private solve() : void in class com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList
e10c66c24ad464e4c437b19ad09424eecfad9592,EXTRACT_VARIABLE, Extract Variable Extract Variable	destNode : int in method private relaxEdgesAtNode(nodeIndex int) : void from class com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList
e10c66c24ad464e4c437b19ad09424eecfad9592,EXTRACT_VARIABLE, Extract Variable Extract Variable	edges : List<Edge> in method private relaxEdgesAtNode(nodeIndex int) : void from class com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList
e10c66c24ad464e4c437b19ad09424eecfad9592,RENAME_VARIABLE, Rename Variable Rename Variable	e : Edge to edge : Edge in method private relaxEdgesAtNode(nodeIndex int) : void from class com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList
e10c66c24ad464e4c437b19ad09424eecfad9592,INLINE_OPERATION, Inline Method Inline Method	private addInitialEdges() : boolean inlined to private solve() : void in class com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyList
88e5f23c3195058238a421d728131695fe81b8f8,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	t : int[][] to t : long[][] in class com.williamfiset.algorithms.datastructures.sparsetable.SparseTable
88e5f23c3195058238a421d728131695fe81b8f8,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	sumFn : BinaryOperator<Integer> to sumFn : BinaryOperator<Long> in class com.williamfiset.algorithms.datastructures.sparsetable.SparseTable
88e5f23c3195058238a421d728131695fe81b8f8,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	minFn : BinaryOperator<Integer> to minFn : BinaryOperator<Long> in class com.williamfiset.algorithms.datastructures.sparsetable.SparseTable
88e5f23c3195058238a421d728131695fe81b8f8,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	maxFn : BinaryOperator<Integer> to maxFn : BinaryOperator<Long> in class com.williamfiset.algorithms.datastructures.sparsetable.SparseTable
88e5f23c3195058238a421d728131695fe81b8f8,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	gcdFn : BinaryOperator<Integer> to gcdFn : BinaryOperator<Long> in class com.williamfiset.algorithms.datastructures.sparsetable.SparseTable
88e5f23c3195058238a421d728131695fe81b8f8,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	gcd : int to gcd : long in attribute private gcdFn : BinaryOperator<Long> from class com.williamfiset.algorithms.datastructures.sparsetable.SparseTable
88e5f23c3195058238a421d728131695fe81b8f8,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	v : int[] to v : long[] in method public main(args String[]) : void from class com.williamfiset.algorithms.datastructures.sparsetable.SparseTable
88e5f23c3195058238a421d728131695fe81b8f8,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	v : int[] to v : long[] in method private simpleTest() : void from class com.williamfiset.algorithms.datastructures.sparsetable.SparseTable
88e5f23c3195058238a421d728131695fe81b8f8,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	trueSum : int to trueSum : long in method private simpleTest() : void from class com.williamfiset.algorithms.datastructures.sparsetable.SparseTable
88e5f23c3195058238a421d728131695fe81b8f8,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	int to long in method public query(l int  r int) : long from class com.williamfiset.algorithms.datastructures.sparsetable.SparseTable
88e5f23c3195058238a421d728131695fe81b8f8,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	sum : int to sum : long in method public sumQuery(l int  r int) : long from class com.williamfiset.algorithms.datastructures.sparsetable.SparseTable
88e5f23c3195058238a421d728131695fe81b8f8,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	int to long in method public sumQuery(l int  r int) : long from class com.williamfiset.algorithms.datastructures.sparsetable.SparseTable
88e5f23c3195058238a421d728131695fe81b8f8,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	v : int[] to values : long[] in method public SparseTable(values long[]  op Operation) from class com.williamfiset.algorithms.datastructures.sparsetable.SparseTable
88e5f23c3195058238a421d728131695fe81b8f8,RENAME_PARAMETER, Rename Parameter Rename Parameter	v : int[] to values : long[] in method public SparseTable(values long[]  op Operation) from class com.williamfiset.algorithms.datastructures.sparsetable.SparseTable
88e5f23c3195058238a421d728131695fe81b8f8,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	v : int[] to v : long[] in method private init(v long[]) : void from class com.williamfiset.algorithms.datastructures.sparsetable.SparseTable
88e5f23c3195058238a421d728131695fe81b8f8,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	fn : BinaryOperator<Integer> to fn : BinaryOperator<Long> in method private query(l int  r int  fn BinaryOperator<Long>) : long from class com.williamfiset.algorithms.datastructures.sparsetable.SparseTable
88e5f23c3195058238a421d728131695fe81b8f8,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	int to long in method private query(l int  r int  fn BinaryOperator<Long>) : long from class com.williamfiset.algorithms.datastructures.sparsetable.SparseTable
88e5f23c3195058238a421d728131695fe81b8f8,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	values : int[] to values : long[] in method public simple() : void from class com.williamfiset.algorithms.datastructures.sparsetable.SparseTableTest
88e5f23c3195058238a421d728131695fe81b8f8,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	values : int[] to values : long[] in method public randomArrayTests() : void from class com.williamfiset.algorithms.datastructures.sparsetable.SparseTableTest
88e5f23c3195058238a421d728131695fe81b8f8,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	int[] to long[] in method private genRandArray(n int  lo int  hi int) : long[] from class com.williamfiset.algorithms.datastructures.sparsetable.SparseTableTest
88e5f23c3195058238a421d728131695fe81b8f8,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	values : int[] to values : long[] in method private queryResultTest(values long[]  l int  r int  actual long  op SparseTable.Operation) : void from class com.williamfiset.algorithms.datastructures.sparsetable.SparseTableTest
88e5f23c3195058238a421d728131695fe81b8f8,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	actual : int to actual : long in method private queryResultTest(values long[]  l int  r int  actual long  op SparseTable.Operation) : void from class com.williamfiset.algorithms.datastructures.sparsetable.SparseTableTest
88e5f23c3195058238a421d728131695fe81b8f8,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	m : int to m : long in method private minQuery(values long[]  l int  r int  actual long) : void from class com.williamfiset.algorithms.datastructures.sparsetable.SparseTableTest
88e5f23c3195058238a421d728131695fe81b8f8,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	values : int[] to values : long[] in method private minQuery(values long[]  l int  r int  actual long) : void from class com.williamfiset.algorithms.datastructures.sparsetable.SparseTableTest
88e5f23c3195058238a421d728131695fe81b8f8,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	actual : int to actual : long in method private minQuery(values long[]  l int  r int  actual long) : void from class com.williamfiset.algorithms.datastructures.sparsetable.SparseTableTest
88e5f23c3195058238a421d728131695fe81b8f8,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	m : int to m : long in method private maxQuery(values long[]  l int  r int  actual long) : void from class com.williamfiset.algorithms.datastructures.sparsetable.SparseTableTest
88e5f23c3195058238a421d728131695fe81b8f8,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	values : int[] to values : long[] in method private maxQuery(values long[]  l int  r int  actual long) : void from class com.williamfiset.algorithms.datastructures.sparsetable.SparseTableTest
88e5f23c3195058238a421d728131695fe81b8f8,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	actual : int to actual : long in method private maxQuery(values long[]  l int  r int  actual long) : void from class com.williamfiset.algorithms.datastructures.sparsetable.SparseTableTest
88e5f23c3195058238a421d728131695fe81b8f8,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	m : int to m : long in method private sumQuery(values long[]  l int  r int  actual long) : void from class com.williamfiset.algorithms.datastructures.sparsetable.SparseTableTest
88e5f23c3195058238a421d728131695fe81b8f8,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	values : int[] to values : long[] in method private sumQuery(values long[]  l int  r int  actual long) : void from class com.williamfiset.algorithms.datastructures.sparsetable.SparseTableTest
88e5f23c3195058238a421d728131695fe81b8f8,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	actual : int to actual : long in method private sumQuery(values long[]  l int  r int  actual long) : void from class com.williamfiset.algorithms.datastructures.sparsetable.SparseTableTest
88e5f23c3195058238a421d728131695fe81b8f8,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	values : int[] to values : long[] in method private testAllOperations(values long[]) : void from class com.williamfiset.algorithms.datastructures.sparsetable.SparseTableTest
69ab87ba466d832f2602766c7a9116bcd6ea4bec,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	protected to private in attribute private visitedToken : int from class com.williamfiset.algorithms.graphtheory.networkflow.examples.EdmondsKarpExample.NetworkFlowSolverBase
69ab87ba466d832f2602766c7a9116bcd6ea4bec,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	protected to private in attribute private visited : int[] from class com.williamfiset.algorithms.graphtheory.networkflow.examples.EdmondsKarpExample.NetworkFlowSolverBase
69ab87ba466d832f2602766c7a9116bcd6ea4bec,EXTRACT_AND_MOVE_OPERATION, Extract And Move Method Extract And Move Method	public visit(i int) : void extracted from private bfs() : long in class com.williamfiset.algorithms.graphtheory.networkflow.examples.EdmondsKarpExample.EdmondsKarpSolver & moved to class com.williamfiset.algorithms.graphtheory.networkflow.examples.EdmondsKarpExample.NetworkFlowSolverBase
69ab87ba466d832f2602766c7a9116bcd6ea4bec,EXTRACT_AND_MOVE_OPERATION, Extract And Move Method Extract And Move Method	public visited(i int) : boolean extracted from private bfs() : long in class com.williamfiset.algorithms.graphtheory.networkflow.examples.EdmondsKarpExample.EdmondsKarpSolver & moved to class com.williamfiset.algorithms.graphtheory.networkflow.examples.EdmondsKarpExample.NetworkFlowSolverBase
69ab87ba466d832f2602766c7a9116bcd6ea4bec,EXTRACT_AND_MOVE_OPERATION, Extract And Move Method Extract And Move Method	public markAllNodesAsUnvisited() : void extracted from public solve() : void in class com.williamfiset.algorithms.graphtheory.networkflow.examples.EdmondsKarpExample.EdmondsKarpSolver & moved to class com.williamfiset.algorithms.graphtheory.networkflow.examples.EdmondsKarpExample.NetworkFlowSolverBase
a67ddd32652c8673e32f699858feed476b5f7000,INLINE_VARIABLE, Inline Variable Inline Variable	prevStateCost : double in method public solve() : void from class com.williamfiset.algorithms.dp.MinimumWeightPerfectMatching
a67ddd32652c8673e32f699858feed476b5f7000,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	dp : double[][] to dp : Double[][] in method public solve() : void from class com.williamfiset.algorithms.dp.MinimumWeightPerfectMatching
a67ddd32652c8673e32f699858feed476b5f7000,RENAME_VARIABLE, Rename Variable Rename Variable	pairState : int to pair : int in method public solve() : void from class com.williamfiset.algorithms.dp.MinimumWeightPerfectMatching
a67ddd32652c8673e32f699858feed476b5f7000,RENAME_METHOD, Rename Method Rename Method	public testAgainstBruteForce() : void renamed to public testAgainstBruteForce_largeValues() : void in class javatests.com.williamfiset.algorithms.dp.MinimumWeightPerfectMatchingTest
a67ddd32652c8673e32f699858feed476b5f7000,ADD_PARAMETER, Add Parameter Add Parameter	maxValue : int in method public randomFillSymmetricMatrix(dist double[][]  maxValue int) : void from class javatests.com.williamfiset.algorithms.dp.MinimumWeightPerfectMatchingTest
e2fdc87a41378c4db682e08956ed436d01b83b98,ADD_ATTRIBUTE_MODIFIER, Add Attribute Modifier Add Attribute Modifier	final in attribute package cost : int from class com.williamfiset.algorithms.graphtheory.Boruvkas.Edge
e2fdc87a41378c4db682e08956ed436d01b83b98,RENAME_PARAMETER, Rename Parameter Rename Parameter	from : int to u : int in method public Edge(u int  v int  cost int) from class com.williamfiset.algorithms.graphtheory.Boruvkas.Edge
e2fdc87a41378c4db682e08956ed436d01b83b98,RENAME_PARAMETER, Rename Parameter Rename Parameter	to : int to v : int in method public Edge(u int  v int  cost int) from class com.williamfiset.algorithms.graphtheory.Boruvkas.Edge
e2fdc87a41378c4db682e08956ed436d01b83b98,RENAME_ATTRIBUTE, Rename Attribute Rename Attribute	from : int to u : int in class com.williamfiset.algorithms.graphtheory.Boruvkas.Edge
e2fdc87a41378c4db682e08956ed436d01b83b98,ADD_ATTRIBUTE_MODIFIER, Add Attribute Modifier Add Attribute Modifier	final in attribute package u : int from class com.williamfiset.algorithms.graphtheory.Boruvkas.Edge
e2fdc87a41378c4db682e08956ed436d01b83b98,RENAME_ATTRIBUTE, Rename Attribute Rename Attribute	to : int to v : int in class com.williamfiset.algorithms.graphtheory.Boruvkas.Edge
e2fdc87a41378c4db682e08956ed436d01b83b98,ADD_ATTRIBUTE_MODIFIER, Add Attribute Modifier Add Attribute Modifier	final in attribute package v : int from class com.williamfiset.algorithms.graphtheory.Boruvkas.Edge
e2fdc87a41378c4db682e08956ed436d01b83b98,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	private to package in attribute package id : int[] from class com.williamfiset.algorithms.graphtheory.Boruvkas.UnionFind
e2fdc87a41378c4db682e08956ed436d01b83b98,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	private to package in attribute package sz : int[] from class com.williamfiset.algorithms.graphtheory.Boruvkas.UnionFind
e2fdc87a41378c4db682e08956ed436d01b83b98,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	g : List<List<Edge>> to g : List<LinkedList<Edge>> in method public main(args String[]) : void from class com.williamfiset.algorithms.graphtheory.Boruvkas
e2fdc87a41378c4db682e08956ed436d01b83b98,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	g : List<List<Edge>> to g : List<LinkedList<Edge>> in method package createEmptyGraph(n int) : List<LinkedList<Edge>> from class com.williamfiset.algorithms.graphtheory.Boruvkas
e2fdc87a41378c4db682e08956ed436d01b83b98,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	List<List<Edge>> to List<LinkedList<Edge>> in method package createEmptyGraph(n int) : List<LinkedList<Edge>> from class com.williamfiset.algorithms.graphtheory.Boruvkas
e2fdc87a41378c4db682e08956ed436d01b83b98,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	g : List<List<Edge>> to g : List<LinkedList<Edge>> in method package addDirectedEdge(g List<LinkedList<Edge>>  from int  to int  cost int) : void from class com.williamfiset.algorithms.graphtheory.Boruvkas
e2fdc87a41378c4db682e08956ed436d01b83b98,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	g : List<List<Edge>> to g : List<LinkedList<Edge>> in method package addUndirectedEdge(g List<LinkedList<Edge>>  from int  to int  cost int) : void from class com.williamfiset.algorithms.graphtheory.Boruvkas
b342b1b12cf3383d931b31cb19d7ca8cbed4cc69,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	maxFlow : int to maxFlow : long in class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowWithNegativeCosts
b342b1b12cf3383d931b31cb19d7ca8cbed4cc69,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	minCost : int to minCost : long in class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowWithNegativeCosts
b342b1b12cf3383d931b31cb19d7ca8cbed4cc69,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	int to long in method public getMaxFlow() : long from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowWithNegativeCosts
b342b1b12cf3383d931b31cb19d7ca8cbed4cc69,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	int to long in method public getMinCost() : long from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowWithNegativeCosts
92f114cf9413a39278acec2b18d305c58a1e33b6,MOVE_CLASS, Move Class Move Class	FibonacciHeap moved to com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeap
0c9174659fd9b002126d25d263d2a9984c7d20f4,RENAME_VARIABLE, Rename Variable Rename Variable	lastDist : double to prevDist : double in method public solve() : void from class TspDynamicProgrammingIterative
473b2de5d3b0b9f2325b6d8f0678adc1b0610182,EXTRACT_OPERATION, Extract Method Extract Method	private display(pts Point2D[]) : void extracted from public main(args String[]) : void in class LineCircleIntersection
473b2de5d3b0b9f2325b6d8f0678adc1b0610182,RENAME_VARIABLE, Rename Variable Rename Variable	Y1 : double to y1 : double in method public lineCircleIntersection(a double  b double  c double  x double  y double  r double) : Point2D[] from class LineCircleIntersection
473b2de5d3b0b9f2325b6d8f0678adc1b0610182,RENAME_VARIABLE, Rename Variable Rename Variable	Y1 : double to y1 : double in method public lineCircleIntersection(a double  b double  c double  x double  y double  r double) : Point2D[] from class LineCircleIntersection
473b2de5d3b0b9f2325b6d8f0678adc1b0610182,RENAME_VARIABLE, Rename Variable Rename Variable	X2 : double to x2 : double in method public lineCircleIntersection(a double  b double  c double  x double  y double  r double) : Point2D[] from class LineCircleIntersection
473b2de5d3b0b9f2325b6d8f0678adc1b0610182,RENAME_VARIABLE, Rename Variable Rename Variable	Y2 : double to y2 : double in method public lineCircleIntersection(a double  b double  c double  x double  y double  r double) : Point2D[] from class LineCircleIntersection
473b2de5d3b0b9f2325b6d8f0678adc1b0610182,RENAME_VARIABLE, Rename Variable Rename Variable	X1 : double to x1 : double in method public lineCircleIntersection(a double  b double  c double  x double  y double  r double) : Point2D[] from class LineCircleIntersection
473b2de5d3b0b9f2325b6d8f0678adc1b0610182,RENAME_VARIABLE, Rename Variable Rename Variable	X1 : double to x1 : double in method public lineCircleIntersection(a double  b double  c double  x double  y double  r double) : Point2D[] from class LineCircleIntersection
42b9105207c6672582ab69c10e49ad98adb53b90,RENAME_VARIABLE, Rename Variable Rename Variable	arr : int[][] to dp : int[][] in method public editDistance(a String  b String  insertionCost int  deletionCost int  substitutionCost int) : int from class com.williamfiset.algorithms.dp.EditDistanceIterative
42b9105207c6672582ab69c10e49ad98adb53b90,RENAME_VARIABLE, Rename Variable Rename Variable	substitute : int to substituteOrSkip : int in method private f(dp Integer[][]  i int  j int) : int from class com.williamfiset.algorithms.dp.EditDistanceRecursive
d0058c5c23eed3b33eed33d957c65d27b7746521,EXTRACT_CLASS, Extract Class Extract Class	com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTreeTest
d0058c5c23eed3b33eed33d957c65d27b7746521,MOVE_OPERATION, Move Method Move Method	public setup() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTreeTest to public setup() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test
d0058c5c23eed3b33eed33d957c65d27b7746521,MOVE_OPERATION, Move Method Move Method	public testSumQuerySumUpdate_Simple() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTreeTest to public testSumQuerySumUpdate_Simple() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test
d0058c5c23eed3b33eed33d957c65d27b7746521,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	st : GenericSegmentTree to st : GenericSegmentTree2 in method public testSumQuerySumUpdate_Simple() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test
d0058c5c23eed3b33eed33d957c65d27b7746521,MOVE_OPERATION, Move Method Move Method	public testSumQuerySumUpdate_RangeUpdate() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTreeTest to public testSumQuerySumUpdate_RangeUpdate() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test
d0058c5c23eed3b33eed33d957c65d27b7746521,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	st : GenericSegmentTree to st : GenericSegmentTree2 in method public testSumQuerySumUpdate_RangeUpdate() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test
d0058c5c23eed3b33eed33d957c65d27b7746521,MOVE_OPERATION, Move Method Move Method	public testSumQueryAssignUpdate_simple() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTreeTest to public testSumQueryAssignUpdate_simple() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test
d0058c5c23eed3b33eed33d957c65d27b7746521,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	st : GenericSegmentTree to st : GenericSegmentTree2 in method public testSumQueryAssignUpdate_simple() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test
d0058c5c23eed3b33eed33d957c65d27b7746521,MOVE_OPERATION, Move Method Move Method	public testSumQueryMulUpdate_simple() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTreeTest to public testSumQueryMulUpdate_simple() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test
d0058c5c23eed3b33eed33d957c65d27b7746521,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	st : GenericSegmentTree to st : GenericSegmentTree2 in method public testSumQueryMulUpdate_simple() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test
d0058c5c23eed3b33eed33d957c65d27b7746521,MOVE_OPERATION, Move Method Move Method	public minQuerySumUpdates_simple() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTreeTest to public minQuerySumUpdates_simple() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test
d0058c5c23eed3b33eed33d957c65d27b7746521,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	st : GenericSegmentTree to st : GenericSegmentTree2 in method public minQuerySumUpdates_simple() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test
d0058c5c23eed3b33eed33d957c65d27b7746521,MOVE_OPERATION, Move Method Move Method	public maxQueryMulUpdate_simple() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTreeTest to public maxQueryMulUpdate_simple() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test
d0058c5c23eed3b33eed33d957c65d27b7746521,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	st : GenericSegmentTree to st : GenericSegmentTree2 in method public maxQueryMulUpdate_simple() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test
d0058c5c23eed3b33eed33d957c65d27b7746521,MOVE_OPERATION, Move Method Move Method	public testAllFunctionCombinations() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTreeTest to public testAllFunctionCombinations() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test
d0058c5c23eed3b33eed33d957c65d27b7746521,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	combinationFns : GenericSegmentTree.SegmentCombinationFn[] to combinationFns : GenericSegmentTree2.SegmentCombinationFn[] in method public testAllFunctionCombinations() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test
d0058c5c23eed3b33eed33d957c65d27b7746521,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	rangeUpdateFns : GenericSegmentTree.RangeUpdateFn[] to rangeUpdateFns : GenericSegmentTree2.RangeUpdateFn[] in method public testAllFunctionCombinations() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test
d0058c5c23eed3b33eed33d957c65d27b7746521,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	st : GenericSegmentTree to st : GenericSegmentTree2 in method public testAllFunctionCombinations() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test
d0058c5c23eed3b33eed33d957c65d27b7746521,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	rangeUpdateFn : GenericSegmentTree.RangeUpdateFn to rangeUpdateFn : GenericSegmentTree2.RangeUpdateFn in method public testAllFunctionCombinations() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test
d0058c5c23eed3b33eed33d957c65d27b7746521,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	combinationFn : GenericSegmentTree.SegmentCombinationFn to combinationFn : GenericSegmentTree2.SegmentCombinationFn in method public testAllFunctionCombinations() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test
e2a11257136f4cd58c3689bef476c7211af29e9a,REPLACE_ATTRIBUTE_WITH_VARIABLE, Replace Attribute With Variable Replace Attribute With Variable	heapSize : int to heapSize : int in method public BinaryHeap(elems T[]) from class com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeap
e2a11257136f4cd58c3689bef476c7211af29e9a,REPLACE_ATTRIBUTE_WITH_VARIABLE, Replace Attribute With Variable Replace Attribute With Variable	heapSize : int to heapSize : int in method private sink(k int) : void from class com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeap
e2a11257136f4cd58c3689bef476c7211af29e9a,REPLACE_ATTRIBUTE_WITH_VARIABLE, Replace Attribute With Variable Replace Attribute With Variable	heapSize : int to heapSize : int in method public isMinHeap(k int) : boolean from class com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeap
e2a11257136f4cd58c3689bef476c7211af29e9a,REPLACE_ATTRIBUTE_WITH_VARIABLE, Replace Attribute With Variable Replace Attribute With Variable	heapSize : int to indexOfLastElem : int in method public add(elem T) : void from class com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeap
e2a11257136f4cd58c3689bef476c7211af29e9a,REPLACE_ATTRIBUTE_WITH_VARIABLE, Replace Attribute With Variable Replace Attribute With Variable	heapSize : int to indexOfLastElem : int in method private removeAt(i int) : T from class com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeap
e2a11257136f4cd58c3689bef476c7211af29e9a,REPLACE_ATTRIBUTE_WITH_VARIABLE, Replace Attribute With Variable Replace Attribute With Variable	heapSize : int to heapSize : int in method public BinaryHeapQuickRemovals(elems T[]) from class com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovals
e2a11257136f4cd58c3689bef476c7211af29e9a,REPLACE_ATTRIBUTE_WITH_VARIABLE, Replace Attribute With Variable Replace Attribute With Variable	heapSize : int to heapSize : int in method private sink(k int) : void from class com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovals
e2a11257136f4cd58c3689bef476c7211af29e9a,REPLACE_ATTRIBUTE_WITH_VARIABLE, Replace Attribute With Variable Replace Attribute With Variable	heapSize : int to heapSize : int in method public isMinHeap(k int) : boolean from class com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovals
e2a11257136f4cd58c3689bef476c7211af29e9a,REPLACE_ATTRIBUTE_WITH_VARIABLE, Replace Attribute With Variable Replace Attribute With Variable	heapSize : int to indexOfLastElem : int in method public add(elem T) : void from class com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovals
e2a11257136f4cd58c3689bef476c7211af29e9a,REPLACE_ATTRIBUTE_WITH_VARIABLE, Replace Attribute With Variable Replace Attribute With Variable	heapSize : int to indexOfLastElem : int in method private removeAt(i int) : T from class com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovals
b7e7e1cba20921e94efaf8603861b364b8944aeb,MOVE_CLASS, Move Class Move Class	com.williamfiset.algorithms.graphtheory.networkflow.EdmondsKarpAdjacencyList.Edge moved to com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase.Edge
b7e7e1cba20921e94efaf8603861b364b8944aeb,RENAME_CLASS, Rename Class Rename Class	com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase renamed to com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase
b7e7e1cba20921e94efaf8603861b364b8944aeb,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	solver : CapacityScalingSolverAdjacencyList to solver : Dinics in method private testSmallFlowGraph() : void from class com.williamfiset.algorithms.graphtheory.networkflow.Dinics
b7e7e1cba20921e94efaf8603861b364b8944aeb,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	solver : CapacityScalingSolverAdjacencyList to solver : FordFulkersonDfsSolverAdjacencyList in method private testSmallFlowGraph() : void from class com.williamfiset.algorithms.graphtheory.networkflow.FordFulkersonDfsSolverAdjacencyList
b7e7e1cba20921e94efaf8603861b364b8944aeb,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	private to public in class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase.Edge
b7e7e1cba20921e94efaf8603861b364b8944aeb,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	capacity : int to capacity : long in class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase.Edge
b7e7e1cba20921e94efaf8603861b364b8944aeb,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	capacity : int to capacity : long in method public Edge(from int  to int  capacity long) from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase.Edge
b7e7e1cba20921e94efaf8603861b364b8944aeb,REORDER_PARAMETER, Reorder Parameter Reorder Parameter	[to : int  from : int  capacity : int] to [from : int  to : int  capacity : long] in method public Edge(from int  to int  capacity long) from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase.Edge
b7e7e1cba20921e94efaf8603861b364b8944aeb,EXTRACT_OPERATION, Extract Method Extract Method	private execute() : void extracted from public getGraph() : List<List<Edge>> in class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase
b7e7e1cba20921e94efaf8603861b364b8944aeb,EXTRACT_OPERATION, Extract Method Extract Method	private execute() : void extracted from public getMaxFlow() : long in class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase
b7e7e1cba20921e94efaf8603861b364b8944aeb,EXTRACT_OPERATION, Extract Method Extract Method	private execute() : void extracted from public getMinCut() : boolean[] in class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase
c2beb51eb7146fc6b8c490755246bd3d475893f0,RENAME_PARAMETER, Rename Parameter Rename Parameter	nodeIndex : int to currentNodeIndex : int in method private relaxEdgesAtNode(currentNodeIndex int) : void from class com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList
c2beb51eb7146fc6b8c490755246bd3d475893f0,RENAME_VARIABLE, Rename Variable Rename Variable	destNode : int to destNodeIndex : int in method private relaxEdgesAtNode(currentNodeIndex int) : void from class com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList
c2beb51eb7146fc6b8c490755246bd3d475893f0,RENAME_VARIABLE, Rename Variable Rename Variable	nodeIndex : int to destNodeIndex : int in method private solve() : void from class com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList
03c6bdb1eadbb16d824813fb65d842a028260813,RENAME_VARIABLE, Rename Variable Rename Variable	ret : long[] to v : long[] in method package egcd(a long  b long) : long[] from class ModularInverse
03c6bdb1eadbb16d824813fb65d842a028260813,RENAME_VARIABLE, Rename Variable Rename Variable	ret : long[] to v : long[] in method package modInv(a long  m long) : Long from class ModularInverse
03c6bdb1eadbb16d824813fb65d842a028260813,RENAME_VARIABLE, Rename Variable Rename Variable	gcf : long to gcd : long in method package modInv(a long  m long) : Long from class ModularInverse
1fbc3542ace8c7157106fb14fe161e499a90650d,MOVE_SOURCE_FOLDER, Move Source Folder Move Source Folder	src/main to src/test
2eed08cd0de39ce73d445e83e6aa1476741edc51,RENAME_VARIABLE, Rename Variable Rename Variable	DP : int[][] to dp : int[][] in method public coinChange(coins int[]  amount int) : int from class com.williamfiset.algorithms.dp.CoinChange
2eed08cd0de39ce73d445e83e6aa1476741edc51,RENAME_VARIABLE, Rename Variable Rename Variable	DP : int[] to dp : int[] in method public coinChangeSpaceEfficient(coins int[]  amount int) : int from class com.williamfiset.algorithms.dp.CoinChange
2eed08cd0de39ce73d445e83e6aa1476741edc51,RENAME_VARIABLE, Rename Variable Rename Variable	DP : int[] to dp : int[] in method public coinChangeRecursive(coins int[]  amount int) : int from class com.williamfiset.algorithms.dp.CoinChange
2eed08cd0de39ce73d445e83e6aa1476741edc51,RENAME_PARAMETER, Rename Parameter Rename Parameter	DP : int[] to dp : int[] in method private coinChangeRecursive(amount int  coins int[]  dp int[]) : int from class com.williamfiset.algorithms.dp.CoinChange
95083df40b22d436fa075173a589d5a1f2543fd5,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	public to private in method private smallExample() : void from class com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
c77bb2c4be0e8b58f1800f2b698d82ee9343168e,RENAME_PARAMETER, Rename Parameter Rename Parameter	to : int to pos : int in method private update(at int  pos int  tl int  tr int  newValue int) : void from class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
b336c50920e94165e2fc72ac5040336eac97335f,RENAME_CLASS, Rename Class Rename Class	TspDynamicProgramming renamed to TspDynamicProgrammingRecursive
b336c50920e94165e2fc72ac5040336eac97335f,RENAME_METHOD, Rename Method Rename Method	public testInvalidStartNode() : void renamed to public testTspRecursiveInvalidStartNode() : void in class TravelingSalesmanProblemTest
b336c50920e94165e2fc72ac5040336eac97335f,RENAME_METHOD, Rename Method Rename Method	public testNonSquareMatrix() : void renamed to public testTspRecursiveNonSquareMatrix() : void in class TravelingSalesmanProblemTest
b336c50920e94165e2fc72ac5040336eac97335f,RENAME_METHOD, Rename Method Rename Method	public testSmallGraph() : void renamed to public testTspRecursiveSmallGraph() : void in class TravelingSalesmanProblemTest
b336c50920e94165e2fc72ac5040336eac97335f,RENAME_METHOD, Rename Method Rename Method	public testPerformance() : void renamed to public testTspRecursivePerformance() : void in class TravelingSalesmanProblemTest
b336c50920e94165e2fc72ac5040336eac97335f,EXTRACT_VARIABLE, Extract Variable Extract Variable	expected : double in method public testTsp_small1() : void from class TravelingSalesmanProblemTest
b336c50920e94165e2fc72ac5040336eac97335f,RENAME_VARIABLE, Rename Variable Rename Variable	tourCost : double to tspRecursiveTourCost : double in method public testTsp_small1() : void from class TravelingSalesmanProblemTest
b336c50920e94165e2fc72ac5040336eac97335f,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	dpSolver : TspDynamicProgramming to dpSolver : TspDynamicProgrammingRecursive in method public testDpVsBf() : void from class TravelingSalesmanProblemTest
b336c50920e94165e2fc72ac5040336eac97335f,RENAME_VARIABLE, Rename Variable Rename Variable	dp : double to dp1 : double in method public testDpVsBf() : void from class TravelingSalesmanProblemTest
b336c50920e94165e2fc72ac5040336eac97335f,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	dpSolver : TspDynamicProgramming to dpSolver : TspDynamicProgrammingRecursive in method public testGeneratedTour() : void from class TravelingSalesmanProblemTest
b336c50920e94165e2fc72ac5040336eac97335f,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	dpSolver : TspDynamicProgramming to dpSolver : TspDynamicProgrammingRecursive in method public testDifferentStartingNodes() : void from class TravelingSalesmanProblemTest
b336c50920e94165e2fc72ac5040336eac97335f,RENAME_VARIABLE, Rename Variable Rename Variable	dp : double to dp1 : double in method public testDifferentStartingNodes() : void from class TravelingSalesmanProblemTest
b336c50920e94165e2fc72ac5040336eac97335f,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	solver : TspDynamicProgramming to solver : TspDynamicProgrammingRecursive in method public main(args String[]) : void from class TspDynamicProgrammingRecursive
ec642ff7007e600d3d2651cb0cec00e61c68a22c,RENAME_CLASS, Rename Class Rename Class	com.williamfiset.algorithms.sorting.Mergesort renamed to com.williamfiset.algorithms.sorting.MergeSort
ec642ff7007e600d3d2651cb0cec00e61c68a22c,RENAME_CLASS, Rename Class Rename Class	com.williamfiset.algorithms.sorting.Quicksort renamed to com.williamfiset.algorithms.sorting.QuickSort
ec642ff7007e600d3d2651cb0cec00e61c68a22c,EXTRACT_OPERATION, Extract Method Extract Method	public sort(values int[]) : void extracted from public main(args String[]) : void in class com.williamfiset.algorithms.sorting.BubbleSort
ec642ff7007e600d3d2651cb0cec00e61c68a22c,PARAMETERIZE_VARIABLE, Parameterize Variable Parameterize Variable	array : int[] to values : int[] in method public sort(values int[]) : void from class com.williamfiset.algorithms.sorting.BubbleSort
ec642ff7007e600d3d2651cb0cec00e61c68a22c,INLINE_VARIABLE, Inline Variable Inline Variable	N : int in method public bubbleSort(ar int[]) : void from class com.williamfiset.algorithms.sorting.BubbleSort
ec642ff7007e600d3d2651cb0cec00e61c68a22c,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	public to private in method private bubbleSort(ar int[]) : void from class com.williamfiset.algorithms.sorting.BubbleSort
ec642ff7007e600d3d2651cb0cec00e61c68a22c,REMOVE_PARAMETER_MODIFIER, Remove Parameter Modifier Remove Parameter Modifier	final in parameter minVal : int in method public bucketSort(ar int[]  minVal int  maxVal int) : void from class com.williamfiset.algorithms.sorting.BucketSort
ec642ff7007e600d3d2651cb0cec00e61c68a22c,REMOVE_PARAMETER_MODIFIER, Remove Parameter Modifier Remove Parameter Modifier	final in parameter maxVal : int in method public bucketSort(ar int[]  minVal int  maxVal int) : void from class com.williamfiset.algorithms.sorting.BucketSort
ec642ff7007e600d3d2651cb0cec00e61c68a22c,RENAME_PARAMETER, Rename Parameter Rename Parameter	minVal : int to minValue : int in method private bucketSort(ar int[]  minValue int  maxValue int) : void from class com.williamfiset.algorithms.sorting.BucketSort
ec642ff7007e600d3d2651cb0cec00e61c68a22c,RENAME_PARAMETER, Rename Parameter Rename Parameter	maxVal : int to maxValue : int in method private bucketSort(ar int[]  minValue int  maxValue int) : void from class com.williamfiset.algorithms.sorting.BucketSort
ec642ff7007e600d3d2651cb0cec00e61c68a22c,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	public to private in method private bucketSort(ar int[]  minValue int  maxValue int) : void from class com.williamfiset.algorithms.sorting.BucketSort
ec642ff7007e600d3d2651cb0cec00e61c68a22c,RENAME_VARIABLE, Rename Variable Rename Variable	B : int[] to b : int[] in method private countingSort(ar int[]  minVal int  maxVal int) : void from class com.williamfiset.algorithms.sorting.CountingSort
ec642ff7007e600d3d2651cb0cec00e61c68a22c,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	public to private in method private countingSort(ar int[]  minVal int  maxVal int) : void from class com.williamfiset.algorithms.sorting.CountingSort
ec642ff7007e600d3d2651cb0cec00e61c68a22c,EXTRACT_OPERATION, Extract Method Extract Method	public sort(values int[]) : void extracted from public main(args String[]) : void in class com.williamfiset.algorithms.sorting.Heapsort
ec642ff7007e600d3d2651cb0cec00e61c68a22c,PARAMETERIZE_VARIABLE, Parameterize Variable Parameterize Variable	array : int[] to values : int[] in method public sort(values int[]) : void from class com.williamfiset.algorithms.sorting.Heapsort
ec642ff7007e600d3d2651cb0cec00e61c68a22c,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	public to private in method private heapsort(ar int[]) : void from class com.williamfiset.algorithms.sorting.Heapsort
ec642ff7007e600d3d2651cb0cec00e61c68a22c,EXTRACT_OPERATION, Extract Method Extract Method	public sort(values int[]) : void extracted from public main(args String[]) : void in class com.williamfiset.algorithms.sorting.InsertionSort
ec642ff7007e600d3d2651cb0cec00e61c68a22c,PARAMETERIZE_VARIABLE, Parameterize Variable Parameterize Variable	array : int[] to values : int[] in method public sort(values int[]) : void from class com.williamfiset.algorithms.sorting.InsertionSort
ec642ff7007e600d3d2651cb0cec00e61c68a22c,INLINE_VARIABLE, Inline Variable Inline Variable	N : int in method public insertionSort(ar int[]) : void from class com.williamfiset.algorithms.sorting.InsertionSort
ec642ff7007e600d3d2651cb0cec00e61c68a22c,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	public to private in method private insertionSort(ar int[]) : void from class com.williamfiset.algorithms.sorting.InsertionSort
ec642ff7007e600d3d2651cb0cec00e61c68a22c,EXTRACT_OPERATION, Extract Method Extract Method	public sort(values int[]) : void extracted from public main(args String[]) : void in class com.williamfiset.algorithms.sorting.SelectionSort
ec642ff7007e600d3d2651cb0cec00e61c68a22c,PARAMETERIZE_VARIABLE, Parameterize Variable Parameterize Variable	array : int[] to values : int[] in method public sort(values int[]) : void from class com.williamfiset.algorithms.sorting.SelectionSort
ec642ff7007e600d3d2651cb0cec00e61c68a22c,EXTRACT_OPERATION, Extract Method Extract Method	public sort(values int[]) : void extracted from public main(args String[]) : void in class com.williamfiset.algorithms.sorting.QuickSort
ec642ff7007e600d3d2651cb0cec00e61c68a22c,PARAMETERIZE_VARIABLE, Parameterize Variable Parameterize Variable	array : int[] to values : int[] in method public sort(values int[]) : void from class com.williamfiset.algorithms.sorting.QuickSort
ec642ff7007e600d3d2651cb0cec00e61c68a22c,MOVE_OPERATION, Move Method Move Method	public main(args String[]) : void from class com.williamfiset.algorithms.sorting.Main to public main(args String[]) : void from class com.williamfiset.algorithms.sorting.RadixSort
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	GeneticAlgorithm_knapsack_01 moved to com.williamfiset.algorithms.ai.GeneticAlgorithm_knapsack_01
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	GeneticAlgorithm_textSearch moved to com.williamfiset.algorithms.ai.GeneticAlgorithm_textSearch
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	GeneticAlgorithm_travelingSalesman moved to com.williamfiset.algorithms.ai.GeneticAlgorithm_travelingSalesman
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	Combinations moved to com.williamfiset.algorithms.other.Combinations
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	CombinationsWithRepetition moved to com.williamfiset.algorithms.other.CombinationsWithRepetition
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	Permutations moved to com.williamfiset.algorithms.other.Permutations
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	PowerSet moved to com.williamfiset.algorithms.other.PowerSet
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	UniqueCombinations moved to com.williamfiset.algorithms.other.UniqueCombinations
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	CoinChange moved to com.williamfiset.algorithms.dp.CoinChange
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	EditDistance moved to com.williamfiset.algorithms.dp.EditDistance
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	JosephusProblem moved to com.williamfiset.algorithms.dp.JosephusProblem
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	KnapsackUnbounded moved to com.williamfiset.algorithms.dp.KnapsackUnbounded
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	Knapsack_01 moved to com.williamfiset.algorithms.dp.Knapsack_01
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	LongestCommonSubsequence moved to com.williamfiset.algorithms.dp.LongestCommonSubsequence
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	LongestIncreasingSubsequence moved to com.williamfiset.algorithms.dp.LongestIncreasingSubsequence
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	LongestPalindromeSubsequence moved to com.williamfiset.algorithms.dp.LongestPalindromeSubsequence
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	MaximumSubarray moved to com.williamfiset.algorithms.dp.MaximumSubarray
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	CoinChangeTest moved to javatests.com.williamfiset.algorithms.dp.CoinChangeTest
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	AngleBetweenVectors2D moved to com.williamfiset.algorithms.geometry.AngleBetweenVectors2D
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	AngleBetweenVectors3D moved to com.williamfiset.algorithms.geometry.AngleBetweenVectors3D
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	CircleCircleIntersectionArea moved to com.williamfiset.algorithms.geometry.CircleCircleIntersectionArea
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	CircularSegmentArea moved to com.williamfiset.algorithms.geometry.CircularSegmentArea
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	PT moved to com.williamfiset.algorithms.geometry.PT
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	ClosestPairOfPoints moved to com.williamfiset.algorithms.geometry.ClosestPairOfPoints
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	CollinearPoints moved to com.williamfiset.algorithms.geometry.CollinearPoints
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	ConvexHullGrahamScan moved to com.williamfiset.algorithms.geometry.ConvexHullGrahamScan
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	ConvexHullMonotoneChainsAlgorithm moved to com.williamfiset.algorithms.geometry.ConvexHullMonotoneChainsAlgorithm
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	ConvexPolygonArea moved to com.williamfiset.algorithms.geometry.ConvexPolygonArea
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	ConvexPolygonContainsPoint moved to com.williamfiset.algorithms.geometry.ConvexPolygonContainsPoint
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	ConvexPolygonCutWithLineSegment moved to com.williamfiset.algorithms.geometry.ConvexPolygonCutWithLineSegment
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	CoplanarPointsTest moved to com.williamfiset.algorithms.geometry.CoplanarPointsTest
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	Line moved to com.williamfiset.algorithms.geometry.Line
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	LineCircleIntersection moved to com.williamfiset.algorithms.geometry.LineCircleIntersection
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	LineSegmentLineSegmentIntersection moved to com.williamfiset.algorithms.geometry.LineSegmentLineSegmentIntersection
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	LineSegmentToGeneralForm moved to com.williamfiset.algorithms.geometry.LineSegmentToGeneralForm
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	LongitudeLatitudeGeographicDistance moved to com.williamfiset.algorithms.geometry.LongitudeLatitudeGeographicDistance
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	PointCircleTangent moved to com.williamfiset.algorithms.geometry.PointCircleTangent
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	PointInsideTriangle moved to com.williamfiset.algorithms.geometry.PointInsideTriangle
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	PointRotation moved to com.williamfiset.algorithms.geometry.PointRotation
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	TriangleArea moved to com.williamfiset.algorithms.geometry.TriangleArea
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	ConvexHullMonotoneChainsAlgorithmTest moved to javatests.com.williamfiset.algorithms.geometry.ConvexHullMonotoneChainsAlgorithmTest
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	AStar_GridHeuristic moved to com.williamfiset.algorithms.graphtheory.AStar_GridHeuristic
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	ArticulationPointsAdjacencyList moved to com.williamfiset.algorithms.graphtheory.ArticulationPointsAdjacencyList
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	BellmanFordAdjacencyList moved to com.williamfiset.algorithms.graphtheory.BellmanFordAdjacencyList
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	BellmanFordAdjacencyMatrix moved to com.williamfiset.algorithms.graphtheory.BellmanFordAdjacencyMatrix
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	BellmanFordEdgeList moved to com.williamfiset.algorithms.graphtheory.BellmanFordEdgeList
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	BreadthFirstSearchAdjacencyListIterative moved to com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterative
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	IntQueue moved to com.williamfiset.algorithms.graphtheory.IntQueue
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	BreadthFirstSearchAdjacencyListIterativeFastQueue moved to com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterativeFastQueue
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	BreadthFirstSearchRecursive moved to com.williamfiset.algorithms.graphtheory.BreadthFirstSearchRecursive
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	BridgesAdjacencyList moved to com.williamfiset.algorithms.graphtheory.BridgesAdjacencyList
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	BridgesAdjacencyListIterative moved to com.williamfiset.algorithms.graphtheory.BridgesAdjacencyListIterative
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	ConnectedComponentsAdjacencyList moved to com.williamfiset.algorithms.graphtheory.ConnectedComponentsAdjacencyList
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	UnionFind moved to com.williamfiset.algorithms.graphtheory.UnionFind
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	ConnectedComponentsDfsSolverAdjacencyList moved to com.williamfiset.algorithms.graphtheory.ConnectedComponentsDfsSolverAdjacencyList
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	DepthFirstSearchAdjacencyListIterative moved to com.williamfiset.algorithms.graphtheory.DepthFirstSearchAdjacencyListIterative
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	IntStack moved to com.williamfiset.algorithms.graphtheory.IntStack
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	DepthFirstSearchAdjacencyListIterativeFastStack moved to com.williamfiset.algorithms.graphtheory.DepthFirstSearchAdjacencyListIterativeFastStack
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	DepthFirstSearchAdjacencyListRecursive moved to com.williamfiset.algorithms.graphtheory.DepthFirstSearchAdjacencyListRecursive
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	DijkstrasShortestPathAdjacencyList moved to com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyList
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	DijkstrasShortestPathAllNodesAdjacencyList moved to com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAllNodesAdjacencyList
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	EagerPrimsAdjacencyList.Edge moved to com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyList.Edge
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	EagerPrimsAdjacencyList moved to com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	IndexMinPQ moved to com.williamfiset.algorithms.graphtheory.IndexMinPQ
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	EulerianPathDirectedEdgesAdjacencyList moved to com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	FloydWarshallSolver moved to com.williamfiset.algorithms.graphtheory.FloydWarshallSolver
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	GraphDiameter moved to com.williamfiset.algorithms.graphtheory.GraphDiameter
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	KruskalsEdgeList moved to com.williamfiset.algorithms.graphtheory.KruskalsEdgeList
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	LazyPrimsAdjacencyList moved to com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyList
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	LazyPrimsAdjacencyMatrix moved to com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyMatrix
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	BipartiteGraphCheckAdjacencyList moved to com.williamfiset.algorithms.graphtheory.BipartiteGraphCheckAdjacencyList
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	EdmondsKarpAdjacencyList moved to com.williamfiset.algorithms.graphtheory.EdmondsKarpAdjacencyList
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	EdmondsKarpAdjacencyListOptimized moved to com.williamfiset.algorithms.graphtheory.EdmondsKarpAdjacencyListOptimized
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	FordFulkersonDFSAdjacencyList moved to com.williamfiset.algorithms.graphtheory.FordFulkersonDFSAdjacencyList
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	FordFulkersonDFSAdjacencyMatrix moved to com.williamfiset.algorithms.graphtheory.FordFulkersonDFSAdjacencyMatrix
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	MaximumCardinalityBipartiteMatchingAugmentingPathAdjacencyList moved to com.williamfiset.algorithms.graphtheory.MaximumCardinalityBipartiteMatchingAugmentingPathAdjacencyList
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	SteinerTree moved to com.williamfiset.algorithms.graphtheory.SteinerTree
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	TarjanAdjacencyMatrix moved to com.williamfiset.algorithms.graphtheory.TarjanAdjacencyMatrix
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	TarjanSccSolverAdjacencyList moved to com.williamfiset.algorithms.graphtheory.TarjanSccSolverAdjacencyList
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	TopologicalSortAdjacencyList moved to com.williamfiset.algorithms.graphtheory.TopologicalSortAdjacencyList
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	TopologicalSortAdjacencyMatrix moved to com.williamfiset.algorithms.graphtheory.TopologicalSortAdjacencyMatrix
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	TreeCanonicalFormAdjacencyList moved to com.williamfiset.algorithms.graphtheory.TreeCanonicalFormAdjacencyList
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	TreeDiameter moved to com.williamfiset.algorithms.graphtheory.TreeDiameter
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	TreeNode moved to com.williamfiset.algorithms.graphtheory.TreeNode
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	RootingTree moved to com.williamfiset.algorithms.graphtheory.RootingTree
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	TreeCenter moved to com.williamfiset.algorithms.graphtheory.TreeCenter
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	TspBruteForce moved to com.williamfiset.algorithms.graphtheory.TspBruteForce
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	TspDynamicProgrammingIterative moved to com.williamfiset.algorithms.graphtheory.TspDynamicProgrammingIterative
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	TspDynamicProgrammingRecursive moved to com.williamfiset.algorithms.graphtheory.TspDynamicProgrammingRecursive
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	TwoSatSolverAdjacencyList moved to com.williamfiset.algorithms.graphtheory.TwoSatSolverAdjacencyList
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	ArticulationPointsAdjacencyListTest moved to javatests.com.williamfiset.algorithms.graphtheory.ArticulationPointsAdjacencyListTest
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	BridgesAdjacencyListIterativeTest moved to javatests.com.williamfiset.algorithms.graphtheory.BridgesAdjacencyListIterativeTest
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	BridgesAdjacencyListTest moved to javatests.com.williamfiset.algorithms.graphtheory.BridgesAdjacencyListTest
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	FloydWarshallSolverTest moved to javatests.com.williamfiset.algorithms.graphtheory.FloydWarshallSolverTest
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	SteinerTreeTest moved to javatests.com.williamfiset.algorithms.graphtheory.SteinerTreeTest
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	TarjanSccSolverAdjacencyListTest moved to javatests.com.williamfiset.algorithms.graphtheory.TarjanSccSolverAdjacencyListTest
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	TravelingSalesmanProblemTest moved to javatests.com.williamfiset.algorithms.graphtheory.TravelingSalesmanProblemTest
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	TwoSatSolverAdjacencyListTest moved to javatests.com.williamfiset.algorithms.graphtheory.TwoSatSolverAdjacencyListTest
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	FreivaldsAlgorithm moved to com.williamfiset.algorithms.linearalgebra.FreivaldsAlgorithm
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	GaussianElimination moved to com.williamfiset.algorithms.linearalgebra.GaussianElimination
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	LinearRecurrenceSolver moved to com.williamfiset.algorithms.linearalgebra.LinearRecurrenceSolver
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	MatrixDeterminantLaplaceExpansion moved to com.williamfiset.algorithms.linearalgebra.MatrixDeterminantLaplaceExpansion
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	MatrixInverse moved to com.williamfiset.algorithms.linearalgebra.MatrixInverse
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	MatrixMultiplication moved to com.williamfiset.algorithms.linearalgebra.MatrixMultiplication
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	MatrixPower moved to com.williamfiset.algorithms.linearalgebra.MatrixPower
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	ModularLinearAlgebra moved to com.williamfiset.algorithms.linearalgebra.ModularLinearAlgebra
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	RotateSquareMatrixInplace moved to com.williamfiset.algorithms.linearalgebra.RotateSquareMatrixInplace
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	Simplex moved to com.williamfiset.algorithms.linearalgebra.Simplex
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	ChineseRemainderTheorem moved to com.williamfiset.algorithms.math.ChineseRemainderTheorem
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	CompressedPrimeSieve moved to com.williamfiset.algorithms.math.CompressedPrimeSieve
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	EulerTotientFunction moved to com.williamfiset.algorithms.math.EulerTotientFunction
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	EulerTotientFunctionWithSieve moved to com.williamfiset.algorithms.math.EulerTotientFunctionWithSieve
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	ExtendedEuclideanAlgorithm moved to com.williamfiset.algorithms.math.ExtendedEuclideanAlgorithm
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	FFT moved to com.williamfiset.algorithms.math.FFT
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	FastFourierTransform moved to com.williamfiset.algorithms.math.FastFourierTransform
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	FastFourierTransformComplexNumbers moved to com.williamfiset.algorithms.math.FastFourierTransformComplexNumbers
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	GCD moved to com.williamfiset.algorithms.math.GCD
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	IsPrime moved to com.williamfiset.algorithms.math.IsPrime
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	LCM moved to com.williamfiset.algorithms.math.LCM
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	ModPow moved to com.williamfiset.algorithms.math.ModPow
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	ModularInverse moved to com.williamfiset.algorithms.math.ModularInverse
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	PrimeFactorization moved to com.williamfiset.algorithms.math.PrimeFactorization
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	RelativelyPrime moved to com.williamfiset.algorithms.math.RelativelyPrime
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	SieveOfEratosthenes moved to com.williamfiset.algorithms.math.SieveOfEratosthenes
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	BitManipulations moved to com.williamfiset.algorithms.other.BitManipulations
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	SlidingWindowMaximum moved to com.williamfiset.algorithms.other.SlidingWindowMaximum
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	SquareRootDecomposition moved to com.williamfiset.algorithms.other.SquareRootDecomposition
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	BitManipulationsTest moved to javatests.com.williamfiset.algorithms.other.BitManipulationsTest
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	SlidingWindowMaximumTest moved to javatests.com.williamfiset.algorithms.other.SlidingWindowMaximumTest
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	BinarySearch moved to com.williamfiset.algorithms.search.BinarySearch
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	InterpolationSearch moved to com.williamfiset.algorithms.search.InterpolationSearch
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	TernarySearch moved to com.williamfiset.algorithms.search.TernarySearch
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	TernarySearchDiscrete moved to com.williamfiset.algorithms.search.TernarySearchDiscrete
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	BubbleSort moved to com.williamfiset.algorithms.sorting.BubbleSort
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	BucketSort moved to com.williamfiset.algorithms.sorting.BucketSort
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	CountingSort moved to com.williamfiset.algorithms.sorting.CountingSort
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	Heapsort moved to com.williamfiset.algorithms.sorting.Heapsort
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	InsertionSort moved to com.williamfiset.algorithms.sorting.InsertionSort
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	Mergesort moved to com.williamfiset.algorithms.sorting.Mergesort
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	Quicksort moved to com.williamfiset.algorithms.sorting.Quicksort
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	RadixSort moved to com.williamfiset.algorithms.sorting.RadixSort
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	SelectionSort moved to com.williamfiset.algorithms.sorting.SelectionSort
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	BoothsAlgorithm moved to com.williamfiset.algorithms.strings.BoothsAlgorithm
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	KMP moved to com.williamfiset.algorithms.strings.KMP
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	LongestCommonPrefixArray moved to com.williamfiset.algorithms.strings.LongestCommonPrefixArray
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	LongestCommonSubstring moved to com.williamfiset.algorithms.strings.LongestCommonSubstring
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	LongestRepeatedSubstring moved to com.williamfiset.algorithms.strings.LongestRepeatedSubstring
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	ManachersAlgorithm moved to com.williamfiset.algorithms.strings.ManachersAlgorithm
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	RabinKarp moved to com.williamfiset.algorithms.strings.RabinKarp
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	SubstringVerificationSuffixArray moved to com.williamfiset.algorithms.strings.SubstringVerificationSuffixArray
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	LongestCommonSubstringTest moved to javatests.com.williamfiset.algorithms.strings.LongestCommonSubstringTest
fcab435489dd0f6bd8201e72441592b1f6efd0ee,MOVE_CLASS, Move Class Move Class	TestUtils moved to com.williamfiset.algorithms.utils.TestUtils
f903ee15ed51c3c6722e8b411dd89fb66a1fe16a,RENAME_VARIABLE, Rename Variable Rename Variable	mid : int to tm : int in method private buildSegmentTree(i int  tl int  tr int  values long[]) : void from class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
f903ee15ed51c3c6722e8b411dd89fb66a1fe16a,RENAME_PARAMETER, Rename Parameter Rename Parameter	at : int to i : int in method private update(i int  pos int  tl int  tr int  newValue long) : void from class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
65350e76c47f372695e935769fa310f8b60d9dfd,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	expected : List<Pair> to expected : List<Pair<Integer Integer>> in method public testTreeCase() : void from class com.williamfiset.algorithms.graphtheory.BridgesAdjacencyListIterativeTest
65350e76c47f372695e935769fa310f8b60d9dfd,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	expected : List<Pair> to expected : List<Pair<Integer Integer>> in method public graphWithCyclesTest() : void from class com.williamfiset.algorithms.graphtheory.BridgesAdjacencyListIterativeTest
0c4e37d876b1e31bedcbd7620fef96eca937757b,ADD_CLASS_MODIFIER, Add Class Modifier Add Class Modifier	static in class com.williamfiset.algorithms.datastructures.linkedlist.DoublyLinkedList.Node
0c4e37d876b1e31bedcbd7620fef96eca937757b,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private data : T from class com.williamfiset.algorithms.datastructures.linkedlist.DoublyLinkedList.Node
0c4e37d876b1e31bedcbd7620fef96eca937757b,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private prev : Node<T> from class com.williamfiset.algorithms.datastructures.linkedlist.DoublyLinkedList.Node
0c4e37d876b1e31bedcbd7620fef96eca937757b,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private next : Node<T> from class com.williamfiset.algorithms.datastructures.linkedlist.DoublyLinkedList.Node
a61945bd60ddf90a65febd0c98dfa27e3bc5b24c,RENAME_METHOD, Rename Method Rename Method	private enoughColorsInWindow(lo int  hi int  imap int[]  sa int[]) : boolean renamed to private enoughUniqueColorsInWindow(lo int  hi int  imap int[]  sa int[]) : boolean in class com.williamfiset.algorithms.strings.Lcs.LcsSolver
a61945bd60ddf90a65febd0c98dfa27e3bc5b24c,EXTRACT_OPERATION, Extract Method Extract Method	private addLcs(lo int  hi int  windowLcs int  shift int  sa int[]  text int[]  imap int[]) : void extracted from public solve() : void in class com.williamfiset.algorithms.strings.Lcs.LcsSolver
a61945bd60ddf90a65febd0c98dfa27e3bc5b24c,EXTRACT_OPERATION, Extract Method Extract Method	private addLcs(lo int  hi int  windowLcs int  shift int  sa int[]  text int[]  imap int[]) : void extracted from public solve() : void in class com.williamfiset.algorithms.strings.Lcs.LcsSolver
387b87a88d5fa2471fb516fcf1c882ab8ddc168b,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	mice : Point2D[] to mice : Mouse[] in method public main(args String[]) : void from class com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls
387b87a88d5fa2471fb516fcf1c882ab8ddc168b,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	mice : Point2D[] to mice : Mouse[] in method package solve(mice Mouse[]  holes Hole[]  radius int) : void from class com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls
be65281b19015329d9b1886e4ac77591fe47bc30,ADD_ATTRIBUTE_MODIFIER, Add Attribute Modifier Add Attribute Modifier	final in attribute public capacity : long from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase.Edge
be65281b19015329d9b1886e4ac77591fe47bc30,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to public in attribute public residual : Edge from class com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample.Edge
be65281b19015329d9b1886e4ac77591fe47bc30,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to public in attribute public flow : long from class com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample.Edge
be65281b19015329d9b1886e4ac77591fe47bc30,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to public in attribute public capacity : long from class com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample.Edge
be65281b19015329d9b1886e4ac77591fe47bc30,ADD_ATTRIBUTE_MODIFIER, Add Attribute Modifier Add Attribute Modifier	final in attribute public capacity : long from class com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample.Edge
be65281b19015329d9b1886e4ac77591fe47bc30,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to public in attribute public from : int from class com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample.Edge
be65281b19015329d9b1886e4ac77591fe47bc30,REMOVE_ATTRIBUTE_MODIFIER, Remove Attribute Modifier Remove Attribute Modifier	final in attribute package from : int from class com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample.Edge
be65281b19015329d9b1886e4ac77591fe47bc30,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to public in attribute public to : int from class com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample.Edge
be65281b19015329d9b1886e4ac77591fe47bc30,REMOVE_ATTRIBUTE_MODIFIER, Remove Attribute Modifier Remove Attribute Modifier	final in attribute package to : int from class com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample.Edge
be65281b19015329d9b1886e4ac77591fe47bc30,EXTRACT_AND_MOVE_OPERATION, Extract And Move Method Extract And Move Method	public augment(bottleNeck long) : void extracted from private dfs(node int  flow long) : long in class com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample.FordFulkersonDfsSolver & moved to class com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample.Edge
3d0aed4d5d3e7e822134c1f838120e16581558b1,REMOVE_CLASS_ANNOTATION, Remove Class Annotation Remove Class Annotation	@SuppressWarnings("unchecked") in class com.williamfiset.algorithms.datastructures.hashtable.HashTableDoubleHashing
3d0aed4d5d3e7e822134c1f838120e16581558b1,REMOVE_CLASS_ANNOTATION, Remove Class Annotation Remove Class Annotation	@SuppressWarnings("unchecked") in class com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbing
bd817b03dcc7daedce35ed84e15ef8a017f23fa7,RENAME_CLASS, Rename Class Rename Class	com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree.Operation renamed to com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree.RangeUpdateFn
bd817b03dcc7daedce35ed84e15ef8a017f23fa7,RENAME_METHOD, Rename Method Rename Method	private update(i int  pos int  tl int  tr int  newValue long) : void renamed to private pointUpdate(i int  pos int  tl int  tr int  newValue long) : void in class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
bd817b03dcc7daedce35ed84e15ef8a017f23fa7,RENAME_METHOD, Rename Method Rename Method	public update(i int  newValue long) : void renamed to public pointUpdate(i int  newValue long) : void in class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
bd817b03dcc7daedce35ed84e15ef8a017f23fa7,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	op : Operation to segmentCombinationFunction : SegmentCombinationFn in method public RangeQueryPointUpdateSegmentTree(values long[]  segmentCombinationFunction SegmentCombinationFn  rangeUpdateFunction RangeUpdateFn) from class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
bd817b03dcc7daedce35ed84e15ef8a017f23fa7,RENAME_PARAMETER, Rename Parameter Rename Parameter	op : Operation to segmentCombinationFunction : SegmentCombinationFn in method public RangeQueryPointUpdateSegmentTree(values long[]  segmentCombinationFunction SegmentCombinationFn  rangeUpdateFunction RangeUpdateFn) from class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
bd817b03dcc7daedce35ed84e15ef8a017f23fa7,ADD_PARAMETER, Add Parameter Add Parameter	rangeUpdateFunction : RangeUpdateFn in method public RangeQueryPointUpdateSegmentTree(values long[]  segmentCombinationFunction SegmentCombinationFn  rangeUpdateFunction RangeUpdateFn) from class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
bd817b03dcc7daedce35ed84e15ef8a017f23fa7,RENAME_ATTRIBUTE, Rename Attribute Rename Attribute	fn : BinaryOperator<Long> to combinationFn : BinaryOperator<Long> in class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
bd817b03dcc7daedce35ed84e15ef8a017f23fa7,RENAME_ATTRIBUTE, Rename Attribute Rename Attribute	op : Operation to segmentCombinationFn : SegmentCombinationFn in class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
bd817b03dcc7daedce35ed84e15ef8a017f23fa7,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	op : Operation to segmentCombinationFn : SegmentCombinationFn in class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
7c17c47dbf0e87b05777730983cba2d2dea397d5,MERGE_VARIABLE, Merge Variable Merge Variable	[set : int[]  used : boolean[]] to n : int in method public combinations(r int  n int) : List<Integer> from class TspDynamicProgrammingIterative
7c17c47dbf0e87b05777730983cba2d2dea397d5,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	set : int[] to set : int in method private combinations(set int  at int  r int  n int  subsets List<Integer>) : void from class TspDynamicProgrammingIterative
7c17c47dbf0e87b05777730983cba2d2dea397d5,ADD_PARAMETER, Add Parameter Add Parameter	n : int in method private combinations(set int  at int  r int  n int  subsets List<Integer>) : void from class TspDynamicProgrammingIterative
7c17c47dbf0e87b05777730983cba2d2dea397d5,REMOVE_PARAMETER, Remove Parameter Remove Parameter	used : boolean[] in method private combinations(set int[]  r int  at int  used boolean[]  subsets List<Integer>) : void from class TspDynamicProgrammingIterative
7c17c47dbf0e87b05777730983cba2d2dea397d5,REORDER_PARAMETER, Reorder Parameter Reorder Parameter	[set : int[]  r : int  at : int  used : boolean[]  subsets : List<Integer>] to [set : int  at : int  r : int  n : int  subsets : List<Integer>] in method private combinations(set int  at int  r int  n int  subsets List<Integer>) : void from class TspDynamicProgrammingIterative
6d8bb428cd59ce3da5530d569b555c69a07c2f4d,EXTRACT_VARIABLE, Extract Variable Extract Variable	n : int in method public findOccurrences(text String  pattern String) : List<Integer> from class com.williamfiset.algorithms.strings.BoyerMooreStringSearch
6d8bb428cd59ce3da5530d569b555c69a07c2f4d,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	skipTable : Map<Character Integer> to skipTable : int[] in method public findOccurrences(text String  pattern String) : List<Integer> from class com.williamfiset.algorithms.strings.BoyerMooreStringSearch
6d8bb428cd59ce3da5530d569b555c69a07c2f4d,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	Map<Character Integer> to int[] in method private generateSkipTable(pattern String) : int[] from class com.williamfiset.algorithms.strings.BoyerMooreStringSearch
f9b77035094afa21840dbed9cbcf088d6dfbeae9,RENAME_CLASS, Rename Class Rename Class	com.williamfiset.algorithms.dp.EditDistance renamed to com.williamfiset.algorithms.dp.EditDistanceIterative
00a374177019f52d4b39cc091f99b630e8dbf7d7,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private n : int from class com.williamfiset.algorithms.graphtheory.Boruvkas
00a374177019f52d4b39cc091f99b630e8dbf7d7,ADD_ATTRIBUTE_MODIFIER, Add Attribute Modifier Add Attribute Modifier	final in attribute private n : int from class com.williamfiset.algorithms.graphtheory.Boruvkas
00a374177019f52d4b39cc091f99b630e8dbf7d7,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private solved : boolean from class com.williamfiset.algorithms.graphtheory.Boruvkas
00a374177019f52d4b39cc091f99b630e8dbf7d7,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private graph : List<List<Edge>> from class com.williamfiset.algorithms.graphtheory.Boruvkas
00a374177019f52d4b39cc091f99b630e8dbf7d7,ADD_ATTRIBUTE_MODIFIER, Add Attribute Modifier Add Attribute Modifier	final in attribute private graph : List<List<Edge>> from class com.williamfiset.algorithms.graphtheory.Boruvkas
00a374177019f52d4b39cc091f99b630e8dbf7d7,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	g : List<LinkedList<Edge>> to g : List<List<Edge>> in method public main(args String[]) : void from class com.williamfiset.algorithms.graphtheory.Boruvkas
00a374177019f52d4b39cc091f99b630e8dbf7d7,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	g : List<LinkedList<Edge>> to g : List<List<Edge>> in method package createEmptyGraph(n int) : List<List<Edge>> from class com.williamfiset.algorithms.graphtheory.Boruvkas
00a374177019f52d4b39cc091f99b630e8dbf7d7,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	List<LinkedList<Edge>> to List<List<Edge>> in method package createEmptyGraph(n int) : List<List<Edge>> from class com.williamfiset.algorithms.graphtheory.Boruvkas
00a374177019f52d4b39cc091f99b630e8dbf7d7,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	g : List<LinkedList<Edge>> to g : List<List<Edge>> in method package addDirectedEdge(g List<List<Edge>>  from int  to int  cost int) : void from class com.williamfiset.algorithms.graphtheory.Boruvkas
00a374177019f52d4b39cc091f99b630e8dbf7d7,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	g : List<LinkedList<Edge>> to g : List<List<Edge>> in method package addUndirectedEdge(g List<List<Edge>>  from int  to int  cost int) : void from class com.williamfiset.algorithms.graphtheory.Boruvkas
dfaba18b987b386f40823034b4080af6b731bf74,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to public in attribute public N : int from class com.williamfiset.algorithms.other.SlidingWindowMaximum
dfaba18b987b386f40823034b4080af6b731bf74,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to public in attribute public lo : int from class com.williamfiset.algorithms.other.SlidingWindowMaximum
dfaba18b987b386f40823034b4080af6b731bf74,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to public in attribute public hi : int from class com.williamfiset.algorithms.other.SlidingWindowMaximum
225445a856326d77a4d8d8344604a6f4f84f5df0,MOVE_AND_RENAME_OPERATION, Move And Rename Method Move And Rename Method	private function2(a Long  b Long) : Long from class com.williamfiset.algorithms.datastructures.segmenttree.SumQuerySumUpdateSegmentTree to private sumFunction(a Long  b Long) : Long from class com.williamfiset.algorithms.datastructures.segmenttree.MinQuerySumUpdateSegmentTree
ccae9a3f82dd58d1549a0742047ed5d358cc2347,MOVE_CLASS, Move Class Move Class	com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphismHash.TreeNode moved to com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphism.TreeNode
e359b7c5a7a500b3df7a336ad482df5fbc6f2ca2,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public interpolationSearch(nums int[]  val int) : int from class com.williamfiset.algorithms.search.InterpolationSearch
ef9b0ba9d2e1b1af893b8ba814a25c113f19d3ad,REMOVE_ATTRIBUTE_MODIFIER, Remove Attribute Modifier Remove Attribute Modifier	final in attribute package u : int from class com.williamfiset.algorithms.graphtheory.Boruvkas.Edge
ef9b0ba9d2e1b1af893b8ba814a25c113f19d3ad,REMOVE_ATTRIBUTE_MODIFIER, Remove Attribute Modifier Remove Attribute Modifier	final in attribute package v : int from class com.williamfiset.algorithms.graphtheory.Boruvkas.Edge
ef9b0ba9d2e1b1af893b8ba814a25c113f19d3ad,REMOVE_ATTRIBUTE_MODIFIER, Remove Attribute Modifier Remove Attribute Modifier	final in attribute package cost : int from class com.williamfiset.algorithms.graphtheory.Boruvkas.Edge
ef9b0ba9d2e1b1af893b8ba814a25c113f19d3ad,REMOVE_METHOD_ANNOTATION, Remove Method Annotation Remove Method Annotation	@Override in method public compareTo(other Edge) : int from class com.williamfiset.algorithms.graphtheory.Boruvkas.Edge
ef9b0ba9d2e1b1af893b8ba814a25c113f19d3ad,REMOVE_PARAMETER, Remove Parameter Remove Parameter	i : int in method public Edge(i int  u int  v int  cost int) from class com.williamfiset.algorithms.graphtheory.Boruvkas.Edge
ef9b0ba9d2e1b1af893b8ba814a25c113f19d3ad,INLINE_OPERATION, Inline Method Inline Method	package createEmptyGraph(m int) : Edge[] inlined to public main(args String[]) : void in class com.williamfiset.algorithms.graphtheory.Boruvkas
ef9b0ba9d2e1b1af893b8ba814a25c113f19d3ad,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	e : Edge to i : int in method private solve() : void from class com.williamfiset.algorithms.graphtheory.Boruvkas
ef9b0ba9d2e1b1af893b8ba814a25c113f19d3ad,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	cheapest : Edge[] to cheapest : int[] in method private solve() : void from class com.williamfiset.algorithms.graphtheory.Boruvkas
ef9b0ba9d2e1b1af893b8ba814a25c113f19d3ad,RENAME_VARIABLE, Rename Variable Rename Variable	e : Edge to i : int in method private solve() : void from class com.williamfiset.algorithms.graphtheory.Boruvkas
ef9b0ba9d2e1b1af893b8ba814a25c113f19d3ad,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	Edge[] to List<Edge> in method public getMst() : List<Edge> from class com.williamfiset.algorithms.graphtheory.Boruvkas
ef9b0ba9d2e1b1af893b8ba814a25c113f19d3ad,ADD_PARAMETER, Add Parameter Add Parameter	m : int in method public Boruvkas(n int  m int  graph Edge[]) from class com.williamfiset.algorithms.graphtheory.Boruvkas
ef9b0ba9d2e1b1af893b8ba814a25c113f19d3ad,RENAME_ATTRIBUTE, Rename Attribute Rename Attribute	mstEdges : Edge[] to mst : List<Edge> in class com.williamfiset.algorithms.graphtheory.Boruvkas
ef9b0ba9d2e1b1af893b8ba814a25c113f19d3ad,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	mstEdges : Edge[] to mst : List<Edge> in class com.williamfiset.algorithms.graphtheory.Boruvkas
a116630cb5500a85c8ab1a8e337e1f72956ce819,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public kmp(txt String  pat String) : List<Integer> from class com.williamfiset.algorithms.strings.KMP
a116630cb5500a85c8ab1a8e337e1f72956ce819,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private kmpHelper(pat String  m int) : int[] from class com.williamfiset.algorithms.strings.KMP
a116630cb5500a85c8ab1a8e337e1f72956ce819,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	package to public in class com.williamfiset.algorithms.strings.LongestCommonPrefixArray.SuffixArray
a116630cb5500a85c8ab1a8e337e1f72956ce819,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	package to public in class com.williamfiset.algorithms.strings.LongestCommonSubstring.SuffixArray
a116630cb5500a85c8ab1a8e337e1f72956ce819,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	package to public in class com.williamfiset.algorithms.strings.LongestRepeatedSubstring.SuffixArray
a116630cb5500a85c8ab1a8e337e1f72956ce819,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	package to public in class com.williamfiset.algorithms.strings.SubstringVerificationSuffixArray.SuffixArray
59e5e0da29c8ddfa330fdd565f623373681d2045,RENAME_CLASS, Rename Class Rename Class	FloydWarshallTest renamed to FloydWarshallSolverTest
59e5e0da29c8ddfa330fdd565f623373681d2045,RENAME_ATTRIBUTE, Rename Attribute Rename Attribute	matrix2FromSlides : double[][] to matrix3 : double[][] in class FloydWarshallSolverTest
59e5e0da29c8ddfa330fdd565f623373681d2045,MOVE_OPERATION, Move Method Move Method	public floydWarshallExtraMemory(m double[][]) : double[][] from class FloydWarshall to public floydWarshallExtraMemory(m double[][]) : double[][] from class FloydWarshallSolver
35db39528164b39b35de22f5e9266b28a1357ea5,ADD_PARAMETER, Add Parameter Add Parameter	function : DoubleFunction<Double> in method package ternarySearch(low double  high double  function DoubleFunction<Double>) : double from class TernarySearch
d8fc6169f6150122fbfe91091f7d61056e6bfb4d,RENAME_VARIABLE, Rename Variable Rename Variable	degrees : int[] to degree : int[] in method public findTreeCenters(tree List<List<Integer>>) : List<Integer> from class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenter
d8fc6169f6150122fbfe91091f7d61056e6bfb4d,RENAME_VARIABLE, Rename Variable Rename Variable	degrees : int[] to degree : int[] in method private findTreeCenters(tree List<List<Integer>>) : List<Integer> from class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphism
3467373500a993fe777342b3d8e676bfe92a12b7,RENAME_METHOD, Rename Method Rename Method	private createTransverseGraph() : void renamed to private createTransposeGraph() : void in class com.williamfiset.algorithms.graphtheory.Kosaraju
3467373500a993fe777342b3d8e676bfe92a12b7,EXTRACT_OPERATION, Extract Method Extract Method	private runKosaraju(graph List<List<Integer>>) : void extracted from public main(args String[]) : void in class com.williamfiset.algorithms.graphtheory.Kosaraju
3467373500a993fe777342b3d8e676bfe92a12b7,EXTRACT_OPERATION, Extract Method Extract Method	private example2() : void extracted from public main(args String[]) : void in class com.williamfiset.algorithms.graphtheory.Kosaraju
3467373500a993fe777342b3d8e676bfe92a12b7,RENAME_VARIABLE, Rename Variable Rename Variable	top : int to node : int in method public solve() : void from class com.williamfiset.algorithms.graphtheory.Kosaraju
23dc1794a9476b75cf6654b5896d8f3b95ecafbb,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	solver : Dinics to solver : NetworkFlowSolverBase in method private testGraphFromSlides() : void from class com.williamfiset.algorithms.graphtheory.networkflow.Dinics
b700e0c291eeab4d9973b5987eea84db1a19c241,RENAME_VARIABLE, Rename Variable Rename Variable	ans : long to count : long in method package f(i int  t1 boolean  t2 boolean) : long from class Solution
e2311d7605c16b11ecca78834d9d7e7aa709478e,MOVE_CLASS, Move Class Move Class	com.williamfiset.algorithms.dp.examples.NarrowArtGalleryRecursive moved to NarrowArtGalleryRecursive
e2311d7605c16b11ecca78834d9d7e7aa709478e,INLINE_OPERATION, Inline Method Inline Method	package g(n int  s int) : int inlined to package f(n int  k int  s int) : int in class NarrowArtGalleryRecursive
e2311d7605c16b11ecca78834d9d7e7aa709478e,INLINE_OPERATION, Inline Method Inline Method	package g(n int  s int) : int inlined to package f(n int  k int  s int) : int in class NarrowArtGalleryRecursive
e2311d7605c16b11ecca78834d9d7e7aa709478e,REORDER_PARAMETER, Reorder Parameter Reorder Parameter	[k : int  n : int] to [n : int  k : int] in method package f(n int  k int) : int from class NarrowArtGalleryRecursive
e2311d7605c16b11ecca78834d9d7e7aa709478e,REORDER_PARAMETER, Reorder Parameter Reorder Parameter	[k : int  n : int  s : int] to [n : int  k : int  s : int] in method package f(n int  k int  s int) : int from class NarrowArtGalleryRecursive
e2311d7605c16b11ecca78834d9d7e7aa709478e,REPLACE_ATTRIBUTE_WITH_VARIABLE, Replace Attribute With Variable Replace Attribute With Variable	sum : int to sum : int in method public main(Fiset String[]) : void from class NarrowArtGalleryRecursive
8389208866c61eede46473076a3abeebb1053456,RENAME_METHOD, Rename Method Rename Method	public randomLcssWithBruteForceSolver() : void renamed to public randomLcssWithBruteForceSolver1() : void in class javatests.com.williamfiset.algorithms.strings.LongestCommonSubstringTest
7588cae1fdcec72c01c1a3407b651414f49c8910,RENAME_METHOD, Rename Method Rename Method	public treeHeight(node TreeNode) : int renamed to public treeHeight2(node TreeNode) : int in class com.williamfiset.algorithms.graphtheory.treealgorithms.examples.TreeHeight
7588cae1fdcec72c01c1a3407b651414f49c8910,EXTRACT_OPERATION, Extract Method Extract Method	private testTreeHeight1() : void extracted from public main(args String[]) : void in class com.williamfiset.algorithms.graphtheory.treealgorithms.examples.TreeHeight
b26708e6144fcfc16a74614a1a17b8d3306c1a88,RENAME_CLASS, Rename Class Rename Class	com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTreeTest renamed to com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTreeTest
b26708e6144fcfc16a74614a1a17b8d3306c1a88,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	st : RangeQueryPointUpdateSegmentTree to st : GenericSegmentTree in method public testSumQuery() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTreeTest
b26708e6144fcfc16a74614a1a17b8d3306c1a88,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	st : RangeQueryPointUpdateSegmentTree to st : GenericSegmentTree in method public testAllSumQueries() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTreeTest
b26708e6144fcfc16a74614a1a17b8d3306c1a88,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	st : RangeQueryPointUpdateSegmentTree to st : GenericSegmentTree in method public testRandomPointUpdatesAndSumRangeQueries() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTreeTest
b26708e6144fcfc16a74614a1a17b8d3306c1a88,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	st : RangeQueryPointUpdateSegmentTree to st : GenericSegmentTree in method public testRandomPointUpdatesAndMinRangeQueries() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTreeTest
b26708e6144fcfc16a74614a1a17b8d3306c1a88,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	st : RangeQueryPointUpdateSegmentTree to st : GenericSegmentTree in method public testRandomPointUpdatesAndMaxRangeQueries() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTreeTest
b26708e6144fcfc16a74614a1a17b8d3306c1a88,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	st : RangeQueryPointUpdateSegmentTree to st : GenericSegmentTree in method public testRandomPointUpdatesAndSumRangeQueries_rangeQuery2() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTreeTest
b26708e6144fcfc16a74614a1a17b8d3306c1a88,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	st : RangeQueryPointUpdateSegmentTree to st : GenericSegmentTree in method public testRandomPointUpdatesAndMinRangeQueries_rangeQuery2() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTreeTest
b26708e6144fcfc16a74614a1a17b8d3306c1a88,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	st : RangeQueryPointUpdateSegmentTree to st : GenericSegmentTree in method public testRandomPointUpdatesAndMaxRangeQueries_rangeQuery2() : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTreeTest
9b88d202c6e539c3f48f80b447aa99887e0789cb,MOVE_CLASS, Move Class Move Class	Individual moved to GeneticAlgorithm_knapsack_01.Individual
9b88d202c6e539c3f48f80b447aa99887e0789cb,MOVE_CLASS, Move Class Move Class	Knapsack_01 moved to GeneticAlgorithm_knapsack_01.Knapsack_01
9b88d202c6e539c3f48f80b447aa99887e0789cb,MOVE_CLASS, Move Class Move Class	Individual moved to GeneticAlgorithm_travelingSalesman.Individual
9b88d202c6e539c3f48f80b447aa99887e0789cb,ADD_CLASS_MODIFIER, Add Class Modifier Add Class Modifier	static in class GeneticAlgorithm_knapsack_01.Individual
9b88d202c6e539c3f48f80b447aa99887e0789cb,ADD_CLASS_MODIFIER, Add Class Modifier Add Class Modifier	static in class GeneticAlgorithm_knapsack_01.Knapsack_01
9b88d202c6e539c3f48f80b447aa99887e0789cb,ADD_CLASS_MODIFIER, Add Class Modifier Add Class Modifier	static in class GeneticAlgorithm_travelingSalesman.Individual
72270107ef202e952317ce041233407328ff18a8,EXTRACT_VARIABLE, Extract Variable Extract Variable	ribbonSquares : int in method package solution1() : void from class Scenes
e0301405a85e9b229d33bd07f7a8c19f54795020,RENAME_VARIABLE, Rename Variable Rename Variable	sz : int to numEdges : int in method private dfs(at int  next int[]  flow long) : long from class com.williamfiset.algorithms.graphtheory.networkflow.Dinics
0be176c9a231874e00eb14b430aec777a79ddc0f,EXTRACT_OPERATION, Extract Method Extract Method	package solution1() : void extracted from public main(args String[]) : void in class Scenes
a4cea71d98b471986db392cdf361864b975db0be,RENAME_CLASS, Rename Class Rename Class	javatests.com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCanonicalFormAdjacencyListTest renamed to javatests.com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphismWithBfsTest
a4cea71d98b471986db392cdf361864b975db0be,RENAME_CLASS, Rename Class Rename Class	com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCanonicalFormAdjacencyList renamed to com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphismWithBfs
a4cea71d98b471986db392cdf361864b975db0be,ENCAPSULATE_ATTRIBUTE, Encapsulate Attribute Encapsulate Attribute	private id : int from class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphism.TreeNode
a4cea71d98b471986db392cdf361864b975db0be,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	public to private in method private findTreeCenters(tree List<List<Integer>>) : List<Integer> from class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphismWithBfs
a4cea71d98b471986db392cdf361864b975db0be,EXTRACT_AND_MOVE_OPERATION, Extract And Move Method Extract And Move Method	public treesAreIsomorphic(tree1 List<List<Integer>>  tree2 List<List<Integer>>) : boolean extracted from public testSingleton() : void in class javatests.com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCanonicalFormAdjacencyListTest & moved to class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphismWithBfs
a4cea71d98b471986db392cdf361864b975db0be,EXTRACT_AND_MOVE_OPERATION, Extract And Move Method Extract And Move Method	public treesAreIsomorphic(tree1 List<List<Integer>>  tree2 List<List<Integer>>) : boolean extracted from public testTwoNodeTree() : void in class javatests.com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCanonicalFormAdjacencyListTest & moved to class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphismWithBfs
a4cea71d98b471986db392cdf361864b975db0be,EXTRACT_AND_MOVE_OPERATION, Extract And Move Method Extract And Move Method	public treesAreIsomorphic(tree1 List<List<Integer>>  tree2 List<List<Integer>>) : boolean extracted from public testSmall() : void in class javatests.com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCanonicalFormAdjacencyListTest & moved to class com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphismWithBfs
a84829e5bd391e9f485f96805b25a87e056f7a6b,RENAME_CLASS, Rename Class Rename Class	com.williamfiset.algorithms.datastructures.hashtable.HashTableSeperateChaining renamed to com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChaining
a84829e5bd391e9f485f96805b25a87e056f7a6b,RENAME_CLASS, Rename Class Rename Class	javatests.com.williamfiset.algorithms.datastructures.hashtable.HashTableSeperateChainingTest renamed to javatests.com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest
a84829e5bd391e9f485f96805b25a87e056f7a6b,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	map : HashTableSeperateChaining<Integer Integer> to map : HashTableSeparateChaining<Integer Integer> in class javatests.com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest
a84829e5bd391e9f485f96805b25a87e056f7a6b,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	map : HashTableSeperateChaining<Integer Integer> to map : HashTableSeparateChaining<Integer Integer> in method public randomRemove() : void from class javatests.com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest
a84829e5bd391e9f485f96805b25a87e056f7a6b,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	map : HashTableSeperateChaining<Integer Integer> to map : HashTableSeparateChaining<Integer Integer> in method public removeTest() : void from class javatests.com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest
a84829e5bd391e9f485f96805b25a87e056f7a6b,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	map : HashTableSeperateChaining<HashObject Integer> to map : HashTableSeparateChaining<HashObject Integer> in method public removeTestComplex1() : void from class javatests.com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest
a84829e5bd391e9f485f96805b25a87e056f7a6b,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	m : HashTableSeperateChaining<Integer LinkedList<Integer>> to m : HashTableSeparateChaining<Integer LinkedList<Integer>> in method public randomIteratorTests() : void from class javatests.com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest
a7d12d01aec8e0f619769403924f6d15ea3224bf,RENAME_METHOD, Rename Method Rename Method	private retrieveStrAt(i int  windowLcp int  shift int  text int[]) : String renamed to private retrieveString(i int  len int) : String in class com.williamfiset.algorithms.strings.Lcs.LcsSolver
a7d12d01aec8e0f619769403924f6d15ea3224bf,REMOVE_ATTRIBUTE_MODIFIER, Remove Attribute Modifier Remove Attribute Modifier	final in attribute package k : int from class com.williamfiset.algorithms.strings.Lcs.LcsSolver
a7d12d01aec8e0f619769403924f6d15ea3224bf,REMOVE_ATTRIBUTE_MODIFIER, Remove Attribute Modifier Remove Attribute Modifier	final in attribute package numSentinels : int from class com.williamfiset.algorithms.strings.Lcs.LcsSolver
a7d12d01aec8e0f619769403924f6d15ea3224bf,REMOVE_ATTRIBUTE_MODIFIER, Remove Attribute Modifier Remove Attribute Modifier	final in attribute package textLength : int from class com.williamfiset.algorithms.strings.Lcs.LcsSolver
a7d12d01aec8e0f619769403924f6d15ea3224bf,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	private to package in attribute package lcsLen : int from class com.williamfiset.algorithms.strings.Lcs.LcsSolver
a7d12d01aec8e0f619769403924f6d15ea3224bf,EXTRACT_OPERATION, Extract Method Extract Method	private init() : void extracted from public solve() : void in class com.williamfiset.algorithms.strings.Lcs.LcsSolver
a7d12d01aec8e0f619769403924f6d15ea3224bf,EXTRACT_OPERATION, Extract Method Extract Method	private log(s String) : void extracted from private addLcs(lo int  hi int  windowLcs int  shift int  sa int[]  text int[]  imap int[]) : void in class com.williamfiset.algorithms.strings.Lcs.LcsSolver
a7d12d01aec8e0f619769403924f6d15ea3224bf,EXTRACT_OPERATION, Extract Method Extract Method	private log(s String) : void extracted from private addLcs(lo int  hi int  windowLcs int  shift int  sa int[]  text int[]  imap int[]) : void in class com.williamfiset.algorithms.strings.Lcs.LcsSolver
a7d12d01aec8e0f619769403924f6d15ea3224bf,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	int to void in method private computeTextLength(strings String[]) : void from class com.williamfiset.algorithms.strings.Lcs.LcsSolver
a7d12d01aec8e0f619769403924f6d15ea3224bf,REMOVE_METHOD_MODIFIER, Remove Method Modifier Remove Method Modifier	static in method private computeTextLength(strings String[]) : int from class com.williamfiset.algorithms.strings.Lcs.LcsSolver
a7d12d01aec8e0f619769403924f6d15ea3224bf,REPLACE_VARIABLE_WITH_ATTRIBUTE, Replace Variable With Attribute Replace Variable With Attribute	shift : int to shift : int in method private buildText() : void from class com.williamfiset.algorithms.strings.Lcs.LcsSolver
a7d12d01aec8e0f619769403924f6d15ea3224bf,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	int[] to void in method private buildText() : void from class com.williamfiset.algorithms.strings.Lcs.LcsSolver
a7d12d01aec8e0f619769403924f6d15ea3224bf,REMOVE_PARAMETER, Remove Parameter Remove Parameter	imap : int[] in method private enoughUniqueColorsInWindow(lo int  hi int  imap int[]  sa int[]) : boolean from class com.williamfiset.algorithms.strings.Lcs.LcsSolver
a7d12d01aec8e0f619769403924f6d15ea3224bf,REMOVE_PARAMETER, Remove Parameter Remove Parameter	sa : int[] in method private enoughUniqueColorsInWindow(lo int  hi int  imap int[]  sa int[]) : boolean from class com.williamfiset.algorithms.strings.Lcs.LcsSolver
a7d12d01aec8e0f619769403924f6d15ea3224bf,RENAME_PARAMETER, Rename Parameter Rename Parameter	windowLcp : int to len : int in method private retrieveString(i int  len int) : String from class com.williamfiset.algorithms.strings.Lcs.LcsSolver
a7d12d01aec8e0f619769403924f6d15ea3224bf,REMOVE_PARAMETER, Remove Parameter Remove Parameter	shift : int in method private retrieveStrAt(i int  windowLcp int  shift int  text int[]) : String from class com.williamfiset.algorithms.strings.Lcs.LcsSolver
a7d12d01aec8e0f619769403924f6d15ea3224bf,REMOVE_PARAMETER, Remove Parameter Remove Parameter	text : int[] in method private retrieveStrAt(i int  windowLcp int  shift int  text int[]) : String from class com.williamfiset.algorithms.strings.Lcs.LcsSolver
a7d12d01aec8e0f619769403924f6d15ea3224bf,RENAME_PARAMETER, Rename Parameter Rename Parameter	windowLcs : int to windowLcp : int in method private addLcs(lo int  hi int  windowLcp int) : void from class com.williamfiset.algorithms.strings.Lcs.LcsSolver
a7d12d01aec8e0f619769403924f6d15ea3224bf,REMOVE_PARAMETER, Remove Parameter Remove Parameter	shift : int in method private addLcs(lo int  hi int  windowLcs int  shift int  sa int[]  text int[]  imap int[]) : void from class com.williamfiset.algorithms.strings.Lcs.LcsSolver
a7d12d01aec8e0f619769403924f6d15ea3224bf,REMOVE_PARAMETER, Remove Parameter Remove Parameter	sa : int[] in method private addLcs(lo int  hi int  windowLcs int  shift int  sa int[]  text int[]  imap int[]) : void from class com.williamfiset.algorithms.strings.Lcs.LcsSolver
a7d12d01aec8e0f619769403924f6d15ea3224bf,REMOVE_PARAMETER, Remove Parameter Remove Parameter	text : int[] in method private addLcs(lo int  hi int  windowLcs int  shift int  sa int[]  text int[]  imap int[]) : void from class com.williamfiset.algorithms.strings.Lcs.LcsSolver
a7d12d01aec8e0f619769403924f6d15ea3224bf,REMOVE_PARAMETER, Remove Parameter Remove Parameter	imap : int[] in method private addLcs(lo int  hi int  windowLcs int  shift int  sa int[]  text int[]  imap int[]) : void from class com.williamfiset.algorithms.strings.Lcs.LcsSolver
a7d12d01aec8e0f619769403924f6d15ea3224bf,REPLACE_VARIABLE_WITH_ATTRIBUTE, Replace Variable With Attribute Replace Variable With Attribute	len : int to textLength : int in method private computeTextLength(strings String[]) : void from class com.williamfiset.algorithms.strings.Lcs.LcsSolver
0fd7250b71cdc228a6c1fca95d694bba2c11759b,MOVE_CLASS, Move Class Move Class	com.williamfiset.algorithms.strings.Lcs.SuffixArray.Color moved to com.williamfiset.algorithms.strings.LongestCommonSubstring.SuffixArray.Color
0fd7250b71cdc228a6c1fca95d694bba2c11759b,MOVE_CLASS, Move Class Move Class	com.williamfiset.algorithms.strings.Lcs.SuffixArrayImpl moved to com.williamfiset.algorithms.strings.LongestCommonSubstring.SuffixArrayImpl
0fd7250b71cdc228a6c1fca95d694bba2c11759b,MOVE_CLASS, Move Class Move Class	com.williamfiset.algorithms.strings.Lcs.CompactMinSegmentTree moved to com.williamfiset.algorithms.strings.LongestCommonSubstring.CompactMinSegmentTree
0fd7250b71cdc228a6c1fca95d694bba2c11759b,MOVE_CLASS, Move Class Move Class	com.williamfiset.algorithms.strings.Lcs.LcsSolver moved to com.williamfiset.algorithms.strings.LongestCommonSubstring.LcsSolver
0fd7250b71cdc228a6c1fca95d694bba2c11759b,ADD_CLASS_MODIFIER, Add Class Modifier Add Class Modifier	abstract in class com.williamfiset.algorithms.strings.LongestCommonSubstring.SuffixArray
0fd7250b71cdc228a6c1fca95d694bba2c11759b,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to protected in attribute protected N : int from class com.williamfiset.algorithms.strings.LongestCommonSubstring.SuffixArray
0fd7250b71cdc228a6c1fca95d694bba2c11759b,ADD_ATTRIBUTE_MODIFIER, Add Attribute Modifier Add Attribute Modifier	final in attribute protected N : int from class com.williamfiset.algorithms.strings.LongestCommonSubstring.SuffixArray
0fd7250b71cdc228a6c1fca95d694bba2c11759b,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to protected in attribute protected T : int[] from class com.williamfiset.algorithms.strings.LongestCommonSubstring.SuffixArray
0fd7250b71cdc228a6c1fca95d694bba2c11759b,ENCAPSULATE_ATTRIBUTE, Encapsulate Attribute Encapsulate Attribute	protected T : int[] from class com.williamfiset.algorithms.strings.LongestCommonSubstring.SuffixArray
0fd7250b71cdc228a6c1fca95d694bba2c11759b,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to protected in attribute protected lcp : int[] from class com.williamfiset.algorithms.strings.LongestCommonSubstring.SuffixArray
0fd7250b71cdc228a6c1fca95d694bba2c11759b,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to protected in attribute protected sa : int[] from class com.williamfiset.algorithms.strings.LongestCommonSubstring.SuffixArray
0fd7250b71cdc228a6c1fca95d694bba2c11759b,RENAME_VARIABLE, Rename Variable Rename Variable	text : int[] to t : int[] in method protected toIntArray(s String) : int[] from class com.williamfiset.algorithms.strings.LongestCommonSubstring.SuffixArray
0fd7250b71cdc228a6c1fca95d694bba2c11759b,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	private to protected in method protected toIntArray(s String) : int[] from class com.williamfiset.algorithms.strings.LongestCommonSubstring.SuffixArray
0fd7250b71cdc228a6c1fca95d694bba2c11759b,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	private to package in class com.williamfiset.algorithms.strings.LongestCommonSubstring.SlidingWindowMinimum
0fd7250b71cdc228a6c1fca95d694bba2c11759b,RENAME_METHOD, Rename Method Rename Method	private computeTextLength(strings String[]) : int renamed to private addSentinels(s String[]  sentinelIndexes List<Integer>) : String in class com.williamfiset.algorithms.strings.LongestCommonSubstring
0fd7250b71cdc228a6c1fca95d694bba2c11759b,RENAME_VARIABLE, Rename Variable Rename Variable	str : String to string : String in method private addSentinels(s String[]  sentinelIndexes List<Integer>) : String from class com.williamfiset.algorithms.strings.LongestCommonSubstring
0fd7250b71cdc228a6c1fca95d694bba2c11759b,RENAME_PARAMETER, Rename Parameter Rename Parameter	strings : String[] to s : String[] in method private addSentinels(s String[]  sentinelIndexes List<Integer>) : String from class com.williamfiset.algorithms.strings.LongestCommonSubstring
0fd7250b71cdc228a6c1fca95d694bba2c11759b,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	int to String in method private addSentinels(s String[]  sentinelIndexes List<Integer>) : String from class com.williamfiset.algorithms.strings.LongestCommonSubstring
0fd7250b71cdc228a6c1fca95d694bba2c11759b,ADD_PARAMETER, Add Parameter Add Parameter	sentinelIndexes : List<Integer> in method private addSentinels(s String[]  sentinelIndexes List<Integer>) : String from class com.williamfiset.algorithms.strings.LongestCommonSubstring
0fd7250b71cdc228a6c1fca95d694bba2c11759b,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	private to package in class com.williamfiset.algorithms.strings.LongestCommonSubstring.SuffixArrayImpl
0fd7250b71cdc228a6c1fca95d694bba2c11759b,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	private to package in class com.williamfiset.algorithms.strings.LongestCommonSubstring.CompactMinSegmentTree
0fd7250b71cdc228a6c1fca95d694bba2c11759b,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	private to public in class com.williamfiset.algorithms.strings.LongestCommonSubstring.LcsSolver
0fd7250b71cdc228a6c1fca95d694bba2c11759b,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	public to private in method private solve() : void from class com.williamfiset.algorithms.strings.LongestCommonSubstring.LcsSolver
0fd7250b71cdc228a6c1fca95d694bba2c11759b,REMOVE_PARAMETER, Remove Parameter Remove Parameter	k : int in method public LcsSolver(strings String[]  k int) from class com.williamfiset.algorithms.strings.Lcs.LcsSolver
0fd7250b71cdc228a6c1fca95d694bba2c11759b,MOVE_OPERATION, Move Method Move Method	public LcsSolver(strings String[]  k int) from class com.williamfiset.algorithms.strings.Lcs.LcsSolver to public LcsSolver(strings String[]) from class com.williamfiset.algorithms.strings.LongestCommonSubstring.LcsSolver
0fd7250b71cdc228a6c1fca95d694bba2c11759b,MOVE_OPERATION, Move Method Move Method	public getTextLength() : int from class com.williamfiset.algorithms.strings.Lcs.SuffixArray to public getTextLength() : int from class com.williamfiset.algorithms.strings.LongestCommonSubstring.SuffixArray
0fd7250b71cdc228a6c1fca95d694bba2c11759b,MOVE_OPERATION, Move Method Move Method	public getSa() : int[] from class com.williamfiset.algorithms.strings.Lcs.SuffixArray to public getSa() : int[] from class com.williamfiset.algorithms.strings.LongestCommonSubstring.SuffixArray
0fd7250b71cdc228a6c1fca95d694bba2c11759b,MOVE_OPERATION, Move Method Move Method	public getLcpArray() : int[] from class com.williamfiset.algorithms.strings.Lcs.SuffixArray to public getLcpArray() : int[] from class com.williamfiset.algorithms.strings.LongestCommonSubstring.SuffixArray
0fd7250b71cdc228a6c1fca95d694bba2c11759b,MOVE_OPERATION, Move Method Move Method	protected buildSuffixArray() : void from class com.williamfiset.algorithms.strings.Lcs.SuffixArray to protected buildSuffixArray() : void from class com.williamfiset.algorithms.strings.LongestCommonSubstring.SuffixArray
0fd7250b71cdc228a6c1fca95d694bba2c11759b,MOVE_OPERATION, Move Method Move Method	protected buildLcpArray() : void from class com.williamfiset.algorithms.strings.Lcs.SuffixArray to protected buildLcpArray() : void from class com.williamfiset.algorithms.strings.LongestCommonSubstring.SuffixArray
0fd7250b71cdc228a6c1fca95d694bba2c11759b,MOVE_OPERATION, Move Method Move Method	protected abstract construct() : void from class com.williamfiset.algorithms.strings.Lcs.SuffixArray to protected abstract construct() : void from class com.williamfiset.algorithms.strings.LongestCommonSubstring.SuffixArray
0fd7250b71cdc228a6c1fca95d694bba2c11759b,MOVE_OPERATION, Move Method Move Method	public toString() : String from class com.williamfiset.algorithms.strings.Lcs.SuffixArray to public toString() : String from class com.williamfiset.algorithms.strings.LongestCommonSubstring.SuffixArray
0fd7250b71cdc228a6c1fca95d694bba2c11759b,MOVE_OPERATION, Move Method Move Method	private findColorFromPos(pos int  sentinelIndexes List<Integer>) : Color from class com.williamfiset.algorithms.strings.Lcs.SuffixArray to private findColorFromPos(pos int  sentinelIndexes List<Integer>) : Color from class com.williamfiset.algorithms.strings.LongestCommonSubstring.SuffixArray
0fd7250b71cdc228a6c1fca95d694bba2c11759b,MOVE_OPERATION, Move Method Move Method	public toString(sentinelIndexes List<Integer>) : void from class com.williamfiset.algorithms.strings.Lcs.SuffixArray to public toString(sentinelIndexes List<Integer>) : void from class com.williamfiset.algorithms.strings.LongestCommonSubstring.SuffixArray
2203ccdd9c5ec006a28fea839f1e8e9b13fbf7cc,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	A : java.math.BigInteger to A : BigInteger in method public main(args String[]) : void from class com.williamfiset.algorithms.math.ModPow
2203ccdd9c5ec006a28fea839f1e8e9b13fbf7cc,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	N : java.math.BigInteger to N : BigInteger in method public main(args String[]) : void from class com.williamfiset.algorithms.math.ModPow
2203ccdd9c5ec006a28fea839f1e8e9b13fbf7cc,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	M : java.math.BigInteger to M : BigInteger in method public main(args String[]) : void from class com.williamfiset.algorithms.math.ModPow
2203ccdd9c5ec006a28fea839f1e8e9b13fbf7cc,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	r1 : java.math.BigInteger to r1 : BigInteger in method public main(args String[]) : void from class com.williamfiset.algorithms.math.ModPow
c76253837692c4bffb8714535f56ec6bff375713,EXTRACT_OPERATION, Extract Method Extract Method	private example2() : void extracted from public main(args String[]) : void in class com.williamfiset.algorithms.datastructures.segmenttree.CompactSegmentTree
c76253837692c4bffb8714535f56ec6bff375713,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	t : int[] to t : Integer[] in class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
c76253837692c4bffb8714535f56ec6bff375713,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	private to package in attribute package t : Integer[] from class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
c76253837692c4bffb8714535f56ec6bff375713,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	private to package in attribute package n : int from class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
c76253837692c4bffb8714535f56ec6bff375713,RENAME_PARAMETER, Rename Parameter Rename Parameter	l : int to tl : int in method private buildTree(i int  tl int  tr int  values int[]) : int from class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
c76253837692c4bffb8714535f56ec6bff375713,RENAME_PARAMETER, Rename Parameter Rename Parameter	r : int to tr : int in method private buildTree(i int  tl int  tr int  values int[]) : int from class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
c76253837692c4bffb8714535f56ec6bff375713,RENAME_VARIABLE, Rename Variable Rename Variable	m : int to tm : int in method private update(at int  to int  tl int  tr int  newValue int) : void from class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
c76253837692c4bffb8714535f56ec6bff375713,RENAME_PARAMETER, Rename Parameter Rename Parameter	l : int to tl : int in method private update(at int  to int  tl int  tr int  newValue int) : void from class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
c76253837692c4bffb8714535f56ec6bff375713,RENAME_PARAMETER, Rename Parameter Rename Parameter	r : int to tr : int in method private update(at int  to int  tl int  tr int  newValue int) : void from class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
c76253837692c4bffb8714535f56ec6bff375713,ADD_PARAMETER, Add Parameter Add Parameter	newValue : int in method private update(at int  to int  tl int  tr int  newValue int) : void from class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
c76253837692c4bffb8714535f56ec6bff375713,REMOVE_PARAMETER, Remove Parameter Remove Parameter	value : int in method private update(at int  to int  l int  r int  value int) : void from class com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
a117ba8ef804b10703c0b8be900fb1efcc94fefb,RENAME_VARIABLE, Rename Variable Rename Variable	mc : MatchingCost to matchingCost : MatchingCost in method private solve() : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive
a117ba8ef804b10703c0b8be900fb1efcc94fefb,RENAME_PARAMETER, Rename Parameter Rename Parameter	value : Double to edgeCost : Double in method public updateMatchingCost(edgeCost Double) : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive.MatchingCost
a117ba8ef804b10703c0b8be900fb1efcc94fefb,REMOVE_PARAMETER, Remove Parameter Remove Parameter	mc : MatchingCost in method private updateMatchingCost(mc MatchingCost  value Double) : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive
a117ba8ef804b10703c0b8be900fb1efcc94fefb,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	private to public in method public updateMatchingCost(edgeCost Double) : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive.MatchingCost
a117ba8ef804b10703c0b8be900fb1efcc94fefb,MOVE_OPERATION, Move Method Move Method	private updateMatchingCost(mc MatchingCost  value Double) : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive to public updateMatchingCost(edgeCost Double) : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive.MatchingCost
a117ba8ef804b10703c0b8be900fb1efcc94fefb,EXTRACT_AND_MOVE_OPERATION, Extract And Move Method Extract And Move Method	public createInfiniteValueMatchingCost() : MatchingCost extracted from private f(state int  dp MatchingCost[]  history int[]) : MatchingCost in class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive & moved to class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive.MatchingCost
3d0536ca83029fe089fb3e9fe90dc60e694b0a0d,RENAME_VARIABLE, Rename Variable Rename Variable	canonizedForm : String to canonicalForm : String in method public main(args String[]) : void from class TreeCanonicalFormAdjacencyList
3d0536ca83029fe089fb3e9fe90dc60e694b0a0d,ADD_PARAMETER, Add Parameter Add Parameter	args : String[] in method public main(args String[]) : void from class TreeCanonicalFormAdjacencyList
3d0536ca83029fe089fb3e9fe90dc60e694b0a0d,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	private to public in method public main(args String[]) : void from class TreeCanonicalFormAdjacencyList
3d0536ca83029fe089fb3e9fe90dc60e694b0a0d,MOVE_AND_RENAME_OPERATION, Move And Rename Method Move And Rename Method	private exampleFromSlides() : void from class TreeCanonicalForm to public main(args String[]) : void from class TreeCanonicalFormAdjacencyList
3d0536ca83029fe089fb3e9fe90dc60e694b0a0d,EXTRACT_OPERATION, Extract Method Extract Method	private runTests() : void extracted from private exampleFromSlides() : void in class TreeCanonicalFormAdjacencyList
f80f977fe4151f8da06c07d3ea807a2b918e850e,RENAME_PARAMETER, Rename Parameter Rename Parameter	maxWeight : int to capacity : int in method public knapsack(capacity int  W int[]  V int[]) : int from class Knapsack_01
d716fe0d4bea569d376169598592077815ed42ae,RENAME_METHOD, Rename Method Rename Method	private preprocess() : void renamed to private setup(root TreeNode) : void in class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour
d716fe0d4bea569d376169598592077815ed42ae,ADD_PARAMETER, Add Parameter Add Parameter	root : TreeNode in method private setup(root TreeNode) : void from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour
13a9ff40f813ec8ebd7fe9aa88b7c4153320257a,RENAME_PARAMETER, Rename Parameter Rename Parameter	s : int to c : int in method package f(n int  k int  c int) : int from class NarrowArtGalleryRecursive
8d3875265cf032571b89ada110e08880ad50a0af,RENAME_METHOD, Rename Method Rename Method	private propagate(i int) : void renamed to private propagateQuery(i int  tl int  tr int) : void in class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree
8d3875265cf032571b89ada110e08880ad50a0af,ADD_PARAMETER, Add Parameter Add Parameter	tl : int in method private propagateQuery(i int  tl int  tr int) : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree
8d3875265cf032571b89ada110e08880ad50a0af,ADD_PARAMETER, Add Parameter Add Parameter	tr : int in method private propagateQuery(i int  tl int  tr int) : void from class com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree
cdeee91dcd73ee5e3e74a552db86c249b228ec1f,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to public in attribute public from : int from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase.Edge
cdeee91dcd73ee5e3e74a552db86c249b228ec1f,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to public in attribute public to : int from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase.Edge
cdeee91dcd73ee5e3e74a552db86c249b228ec1f,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to public in attribute public residual : Edge from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase.Edge
cdeee91dcd73ee5e3e74a552db86c249b228ec1f,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to public in attribute public flow : long from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase.Edge
cdeee91dcd73ee5e3e74a552db86c249b228ec1f,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to public in attribute public capacity : long from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase.Edge
cdeee91dcd73ee5e3e74a552db86c249b228ec1f,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to public in attribute public cost : long from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase.Edge
cdeee91dcd73ee5e3e74a552db86c249b228ec1f,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to public in attribute public originalCapacity : long from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase.Edge
cdeee91dcd73ee5e3e74a552db86c249b228ec1f,ADD_VARIABLE_MODIFIER, Add Variable Modifier Add Variable Modifier	final in variable t : int in method public evilNetwork1() : void from class javatests.com.williamfiset.algorithms.graphtheory.networkflow.MaxFlowTests
433d2473f4499580cbab518737869418ff0ca332,EXTRACT_VARIABLE, Extract Variable Extract Variable	componentId : int in method private isScc(ids int[]  expectedSccs List<List<Integer>>) : boolean from class TarjanSccSolverAdjacencyListTest
c606d5aac386d79387c16126f537f0c5f44f5dd4,INVERT_CONDITION, Invert Condition Invert Condition	if(queue.isEmpty()) to while(!queue.isEmpty()) in method private bfs(start int) : void from class com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterative
c606d5aac386d79387c16126f537f0c5f44f5dd4,REMOVE_PARAMETER, Remove Parameter Remove Parameter	end : int in method private bfs(start int  end int) : void from class com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterative
eb2febea5f974e95c0ca6a8f5e98dd7213589db4,RENAME_CLASS, Rename Class Rename Class	GeneticAlgorithm_travellingSalesman renamed to GeneticAlgorithm_travelingSalesman
aef3659b2ba851c6ebcb3f8a4fb57b566eb8d38d,INLINE_OPERATION, Inline Method Inline Method	private expandPowers(n int) : void inlined to public rabinKarp(text String  pattern String) : List<Integer> in class RabinKarp
aef3659b2ba851c6ebcb3f8a4fb57b566eb8d38d,PARAMETERIZE_VARIABLE, Parameterize Variable Parameterize Variable	alphabetBasePower : long to alphabetBasePower : long in method private addLeft(rollingHash long  alphabetBasePower long  firstValue char  modIndex int) : long from class RabinKarp
aef3659b2ba851c6ebcb3f8a4fb57b566eb8d38d,REMOVE_PARAMETER, Remove Parameter Remove Parameter	len : int in method private addLeft(rollingHash long  firstValue char  modIndex int  len int) : long from class RabinKarp
aef3659b2ba851c6ebcb3f8a4fb57b566eb8d38d,PARAMETERIZE_VARIABLE, Parameterize Variable Parameterize Variable	alphabetBasePower : long to alphabetBasePower : long in method private removeLeft(rollingHash long  alphabetBasePower long  firstValue char  modIndex int) : long from class RabinKarp
aef3659b2ba851c6ebcb3f8a4fb57b566eb8d38d,REMOVE_PARAMETER, Remove Parameter Remove Parameter	len : int in method private removeLeft(rollingHash long  firstValue char  modIndex int  len int) : long from class RabinKarp
69575ebe02989147dbb4443b87d1c7e91f2e9a3b,MOVE_SOURCE_FOLDER, Move Source Folder Move Source Folder	GraphTheory to GraphTheory/NetworkFlow
69575ebe02989147dbb4443b87d1c7e91f2e9a3b,MOVE_SOURCE_FOLDER, Move Source Folder Move Source Folder	GraphTheory to GraphTheory/NetworkFlow
69575ebe02989147dbb4443b87d1c7e91f2e9a3b,MOVE_SOURCE_FOLDER, Move Source Folder Move Source Folder	GraphTheory to GraphTheory/TreeAlgorithms
dd12ae86183d8b4e66e155c4e598956d4f10f5df,RENAME_VARIABLE, Rename Variable Rename Variable	matrix : double[][] to dist : double[][] in method public main(args String[]) : void from class TspBruteForce
11096d93537b663ed8da6d8fa2bc9cceba656725,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	String to boolean in method private include(i int) : boolean from class com.williamfiset.algorithms.dp.MinimumWeightPerfectMatching
7ca57bec5f1c0cf44e7368137d6eb5395f96ac26,RENAME_ATTRIBUTE, Rename Attribute Rename Attribute	END_STATE : int to FULL_STATE : int in class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive
b1ba3d7570a8004e8f95f97f3cfeb343a6950005,RENAME_METHOD, Rename Method Rename Method	public tsp(start int  distance double[][]) : double renamed to public getTourCost() : double in class TspDynamicProgrammingIterative
b1ba3d7570a8004e8f95f97f3cfeb343a6950005,INLINE_OPERATION, Inline Method Inline Method	package in(elem int  subset int) : boolean inlined to private notIn(elem int  subset int) : boolean in class TspDynamicProgrammingIterative
b1ba3d7570a8004e8f95f97f3cfeb343a6950005,EXTRACT_OPERATION, Extract Method Extract Method	public solve() : void extracted from public tsp(start int  distance double[][]) : double in class TspDynamicProgrammingIterative
b1ba3d7570a8004e8f95f97f3cfeb343a6950005,REPLACE_VARIABLE_WITH_ATTRIBUTE, Replace Variable With Attribute Replace Variable With Attribute	minTourCost : double to minTourCost : double in method public solve() : void from class TspDynamicProgrammingIterative
b1ba3d7570a8004e8f95f97f3cfeb343a6950005,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private notIn(elem int  subset int) : boolean from class TspDynamicProgrammingIterative
b1ba3d7570a8004e8f95f97f3cfeb343a6950005,REPLACE_VARIABLE_WITH_ATTRIBUTE, Replace Variable With Attribute Replace Variable With Attribute	minTourCost : double to minTourCost : double in method public getTourCost() : double from class TspDynamicProgrammingIterative
b1ba3d7570a8004e8f95f97f3cfeb343a6950005,REMOVE_PARAMETER, Remove Parameter Remove Parameter	start : int in method public tsp(start int  distance double[][]) : double from class TspDynamicProgrammingIterative
b1ba3d7570a8004e8f95f97f3cfeb343a6950005,REMOVE_PARAMETER, Remove Parameter Remove Parameter	distance : double[][] in method public tsp(start int  distance double[][]) : double from class TspDynamicProgrammingIterative
b1ba3d7570a8004e8f95f97f3cfeb343a6950005,REMOVE_METHOD_MODIFIER, Remove Method Modifier Remove Method Modifier	static in method public tsp(start int  distance double[][]) : double from class TspDynamicProgrammingIterative
b1ba3d7570a8004e8f95f97f3cfeb343a6950005,REPLACE_VARIABLE_WITH_ATTRIBUTE, Replace Variable With Attribute Replace Variable With Attribute	n : int to N : int in method public solve() : void from class TspDynamicProgrammingIterative
b1ba3d7570a8004e8f95f97f3cfeb343a6950005,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	private to public in method public solve() : void from class TspDynamicProgrammingRecursive
b1ba3d7570a8004e8f95f97f3cfeb343a6950005,RENAME_VARIABLE, Rename Variable Rename Variable	dpSolver : TspDynamicProgrammingRecursive to dpRecursiveSolver : TspDynamicProgrammingRecursive in method public testDpVsBf() : void from class TravelingSalesmanProblemTest
b1ba3d7570a8004e8f95f97f3cfeb343a6950005,RENAME_VARIABLE, Rename Variable Rename Variable	dpSolver : TspDynamicProgrammingRecursive to dpRecursiveSolver : TspDynamicProgrammingRecursive in method public testGeneratedTour() : void from class TravelingSalesmanProblemTest
b1ba3d7570a8004e8f95f97f3cfeb343a6950005,RENAME_VARIABLE, Rename Variable Rename Variable	dp : double to dp1 : double in method public testGeneratedTour() : void from class TravelingSalesmanProblemTest
b1ba3d7570a8004e8f95f97f3cfeb343a6950005,RENAME_VARIABLE, Rename Variable Rename Variable	dpSolver : TspDynamicProgrammingRecursive to dpRecursiveSolver : TspDynamicProgrammingRecursive in method public testDifferentStartingNodes() : void from class TravelingSalesmanProblemTest
4bd3dc8a52eca2e628951d9307fcf771aa4b55d6,EXTRACT_VARIABLE, Extract Variable Extract Variable	value : double in method package angleBetweenVectors(v1x double  v1y double  v2x double  v2y double) : double from class AngleBetweenVectors2D
3820e7a93152750a197bb98e21cc6f3c23914e2b,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	public to private in method private solve() : void from class com.williamfiset.algorithms.dp.MinimumWeightPerfectMatchingIterative
3820e7a93152750a197bb98e21cc6f3c23914e2b,REMOVE_ATTRIBUTE_MODIFIER, Remove Attribute Modifier Remove Attribute Modifier	final in attribute private n : int from class com.williamfiset.algorithms.dp.MinimumWeightPerfectMatchingRecursive
3820e7a93152750a197bb98e21cc6f3c23914e2b,EXTRACT_VARIABLE, Extract Variable Extract Variable	m : int in method private reconstructMatching(history int[]) : void from class com.williamfiset.algorithms.dp.MinimumWeightPerfectMatchingRecursive
2a37475ace95e1fc7b7ec7007bce7b09e1c45a2a,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	graph : List<List<Edge>> to graph : List<Edge>[] in class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase
2a37475ace95e1fc7b7ec7007bce7b09e1c45a2a,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	List<List<Edge>> to List<Edge>[] in method public getGraph() : List<Edge>[] from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase
710c458ecec32af3a90a29e54f20cd383c329314,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	nodesWithNoIncomingEdges : Stack<Integer> to nodesWithNoIncomingEdges : Queue<Integer> in method public kahns(g List<List<Integer>>) : int[] from class com.williamfiset.algorithms.graphtheory.Kahns
65fb50d06a63479aa3dfee340cd249f61e50af7b,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public minLengthSteinerTree(distances double[][]  subsetToConnect int[]) : double from class SteinerTree
a0c72757f7588bcd5b79005b853d7b5dfadaca7a,RENAME_METHOD, Rename Method Rename Method	public finalize() : void renamed to public done() : void in class com.williamfiset.algorithms.other.LazyRangeAdder
a0c72757f7588bcd5b79005b853d7b5dfadaca7a,RENAME_VARIABLE, Rename Variable Rename Variable	LazyrangeAdder : LazyRangeAdder to lazyRangeAdder : LazyRangeAdder in method public main(args String[]) : void from class com.williamfiset.algorithms.other.LazyRangeAdder
092ee57273319decb921abc6ec5f6ac7e1567251,RENAME_PARAMETER, Rename Parameter Rename Parameter	coeffs : long[] to coefficients : long[] in method package solveRecurrence(coefficients long[]  f_0 long  k long  n long) : long from class LinearRecurrenceSolver
c6027e588512ec357cea775c7109c670ba33927f,MOVE_SOURCE_FOLDER, Move Source Folder Move Source Folder	DynamicProgramming to GraphTheory
c6027e588512ec357cea775c7109c670ba33927f,EXTRACT_VARIABLE, Extract Variable Extract Variable	edgeCost : int in method public main(args String[]) : void from class TravelingSalesmanProblemBruteForce
c6027e588512ec357cea775c7109c670ba33927f,EXTRACT_VARIABLE, Extract Variable Extract Variable	bestTour : int[] in method public main(args String[]) : void from class TravelingSalesmanProblemBruteForce
c6027e588512ec357cea775c7109c670ba33927f,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	private to public in method public computeTourCost(tour int[]  matrix double[][]) : double from class TravelingSalesmanProblemBruteForce
c6027e588512ec357cea775c7109c670ba33927f,EXTRACT_OPERATION, Extract Method Extract Method	private tsp(i int  state int  dist double[][]  memo Double[][]) : double extracted from public tsp(matrix double[][]) : double in class TravelingSalesmanProblemDynamicProgramming
c6027e588512ec357cea775c7109c670ba33927f,ADD_VARIABLE_MODIFIER, Add Variable Modifier Add Variable Modifier	final in variable n : int in method private tsp(i int  state int  dist double[][]  memo Double[][]) : double from class TravelingSalesmanProblemDynamicProgramming
c6027e588512ec357cea775c7109c670ba33927f,RENAME_VARIABLE, Rename Variable Rename Variable	minTour : double to minCost : double in method private tsp(i int  state int  dist double[][]  memo Double[][]) : double from class TravelingSalesmanProblemDynamicProgramming
c6027e588512ec357cea775c7109c670ba33927f,RENAME_VARIABLE, Rename Variable Rename Variable	i : int to next : int in method private tsp(i int  state int  dist double[][]  memo Double[][]) : double from class TravelingSalesmanProblemDynamicProgramming
c6027e588512ec357cea775c7109c670ba33927f,RENAME_PARAMETER, Rename Parameter Rename Parameter	matrix : double[][] to dist : double[][] in method public tsp(dist double[][]) : double from class TravelingSalesmanProblemDynamicProgramming
c6027e588512ec357cea775c7109c670ba33927f,RENAME_VARIABLE, Rename Variable Rename Variable	m : double[][] to dist : double[][] in method public main(args String[]) : void from class TravelingSalesmanProblemDynamicProgramming
e6e31585ab51f011cc049692d7f5070382c3dd79,INLINE_ATTRIBUTE, Inline Attribute Inline Attribute	private INITIAL_PARENT_VAL : int in class BridgesAdjacencyListIterative
433537f4b8a1f74a61d13c9159bd7ff1c7835100,RENAME_VARIABLE, Rename Variable Rename Variable	nodesWithNoIncomingEdges : Queue<Integer> to q : Queue<Integer> in method public kahns(g List<List<Integer>>) : int[] from class com.williamfiset.algorithms.graphtheory.Kahns
65f2a386f4c545e2bcdff61c1146fc59f7a2f73b,RENAME_ATTRIBUTE, Rename Attribute Rename Attribute	ALPHABET_SZ : int to alphabetSize : int in class LongestCommonSubstring.SuffixArray
0ffd21959c629c6953621237750ee26b685ae01c,RENAME_VARIABLE, Rename Variable Rename Variable	p : int[] to next : int[] in method public solve() : void from class com.williamfiset.algorithms.graphtheory.networkflow.Dinics
0ffd21959c629c6953621237750ee26b685ae01c,RENAME_PARAMETER, Rename Parameter Rename Parameter	p : int[] to next : int[] in method private dfs(at int  next int[]  flow long) : long from class com.williamfiset.algorithms.graphtheory.networkflow.Dinics
e45d7fef7b5334f136c521c0a069675f58aa7a03,EXTRACT_VARIABLE, Extract Variable Extract Variable	eulerTourSize : int in method private preprocess() : void from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour
e45d7fef7b5334f136c521c0a069675f58aa7a03,MOVE_OPERATION, Move Method Move Method	public rootTree(graph List<List<Integer>>  rootId int) : TreeNode from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestor to public rootTree(graph List<List<Integer>>  rootId int) : TreeNode from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestor.TreeNode
e45d7fef7b5334f136c521c0a069675f58aa7a03,MOVE_OPERATION, Move Method Move Method	private buildTree(graph List<List<Integer>>  node TreeNode) : TreeNode from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestor to private buildTree(graph List<List<Integer>>  node TreeNode) : TreeNode from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestor.TreeNode
e45d7fef7b5334f136c521c0a069675f58aa7a03,MOVE_OPERATION, Move Method Move Method	public rootTree(graph List<List<Integer>>  rootId int) : TreeNode from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour to public rootTree(graph List<List<Integer>>  rootId int) : TreeNode from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestor.TreeNode
e45d7fef7b5334f136c521c0a069675f58aa7a03,MOVE_OPERATION, Move Method Move Method	public rootTree(graph List<List<Integer>>  rootId int) : TreeNode from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour to public rootTree(graph List<List<Integer>>  rootId int) : TreeNode from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour.TreeNode
e45d7fef7b5334f136c521c0a069675f58aa7a03,MOVE_OPERATION, Move Method Move Method	private buildTree(graph List<List<Integer>>  node TreeNode) : TreeNode from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour to private buildTree(graph List<List<Integer>>  node TreeNode) : TreeNode from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestor.TreeNode
e45d7fef7b5334f136c521c0a069675f58aa7a03,MOVE_OPERATION, Move Method Move Method	private buildTree(graph List<List<Integer>>  node TreeNode) : TreeNode from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour to private buildTree(graph List<List<Integer>>  node TreeNode) : TreeNode from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour.TreeNode
f9b45b27d1a27f346c9a25bef272224fbd384057,INLINE_VARIABLE, Inline Variable Inline Variable	edges : List<Integer> in method private dfs(at int  parent int  bridges List<Integer>) : void from class BridgesAdjacencyList
a802413f8bf8c7244661eed4f1628a457bbce903,RENAME_PARAMETER, Rename Parameter Rename Parameter	n : long to p : long in method package matrixPower(matrix long[][]  p long) : long[][] from class LinearRecurrenceSolver
a802413f8bf8c7244661eed4f1628a457bbce903,RENAME_PARAMETER, Rename Parameter Rename Parameter	n : long to p : long in method package matrixPower(matrix long[][]  p long) : long[][] from class MatrixPower
2030e95deef2797b71c51722096d3387c8f4c751,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	package to public in class com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAllNodesAdjacencyList.Edge
2030e95deef2797b71c51722096d3387c8f4c751,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	private to public in class com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAllNodesAdjacencyList.Node
2030e95deef2797b71c51722096d3387c8f4c751,RENAME_PARAMETER, Rename Parameter Rename Parameter	nodeID : int to id : int in method public Node(id int  value double) from class com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAllNodesAdjacencyList.Node
2030e95deef2797b71c51722096d3387c8f4c751,RENAME_PARAMETER, Rename Parameter Rename Parameter	nodeValue : double to value : double in method public Node(id int  value double) from class com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAllNodesAdjacencyList.Node
2030e95deef2797b71c51722096d3387c8f4c751,REMOVE_PARAMETER, Remove Parameter Remove Parameter	graph : Map<Integer List<Edge>> in method public dijkstra(graph Map<Integer List<Edge>>  start int  n int) : double[] from class com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAllNodesAdjacencyList
2030e95deef2797b71c51722096d3387c8f4c751,REMOVE_PARAMETER, Remove Parameter Remove Parameter	start : int in method public dijkstra(graph Map<Integer List<Edge>>  start int  n int) : double[] from class com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAllNodesAdjacencyList
2030e95deef2797b71c51722096d3387c8f4c751,REMOVE_PARAMETER, Remove Parameter Remove Parameter	n : int in method public dijkstra(graph Map<Integer List<Edge>>  start int  n int) : double[] from class com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAllNodesAdjacencyList
2030e95deef2797b71c51722096d3387c8f4c751,REMOVE_METHOD_MODIFIER, Remove Method Modifier Remove Method Modifier	static in method public dijkstra(graph Map<Integer List<Edge>>  start int  n int) : double[] from class com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAllNodesAdjacencyList
2030e95deef2797b71c51722096d3387c8f4c751,REPLACE_VARIABLE_WITH_ATTRIBUTE, Replace Variable With Attribute Replace Variable With Attribute	dists : double[] to dist : double[] in method public dijkstra() : double[] from class com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAllNodesAdjacencyList
2030e95deef2797b71c51722096d3387c8f4c751,MOVE_ATTRIBUTE, Move Attribute Move Attribute	private EPS : double from class com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAllNodesAdjacencyList.Node to private EPS : double from class com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAllNodesAdjacencyList
2bce6d01ced4878d7d870b1fac6dfb3578b9bfe5,EXTRACT_OPERATION, Extract Method Extract Method	private reconstructMatching(history int[]) : void extracted from public solve() : void in class com.williamfiset.algorithms.dp.MinimumWeightPerfectMatching
2bce6d01ced4878d7d870b1fac6dfb3578b9bfe5,EXTRACT_OPERATION, Extract Method Extract Method	private test2() : void extracted from public main(args String[]) : void in class com.williamfiset.algorithms.dp.MinimumWeightPerfectMatching
2bce6d01ced4878d7d870b1fac6dfb3578b9bfe5,REPLACE_VARIABLE_WITH_ATTRIBUTE, Replace Variable With Attribute Replace Variable With Attribute	END_STATE : int to END_STATE : int in method private reconstructMatching(history int[]) : void from class com.williamfiset.algorithms.dp.MinimumWeightPerfectMatching
2bce6d01ced4878d7d870b1fac6dfb3578b9bfe5,REPLACE_VARIABLE_WITH_ATTRIBUTE, Replace Variable With Attribute Replace Variable With Attribute	END_STATE : int to END_STATE : int in method public solve() : void from class com.williamfiset.algorithms.dp.MinimumWeightPerfectMatching
1610d00ee78e9a3f6a8f6d286c44cc4cbcbf3ec6,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	protected to private in attribute private visitedToken : int from class com.williamfiset.algorithms.graphtheory.networkflow.examples.CapacityScalingExample.NetworkFlowSolverBase
1610d00ee78e9a3f6a8f6d286c44cc4cbcbf3ec6,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	protected to private in attribute private visited : int[] from class com.williamfiset.algorithms.graphtheory.networkflow.examples.CapacityScalingExample.NetworkFlowSolverBase
1610d00ee78e9a3f6a8f6d286c44cc4cbcbf3ec6,EXTRACT_AND_MOVE_OPERATION, Extract And Move Method Extract And Move Method	public visit(i int) : void extracted from private dfs(node int  flow long) : long in class com.williamfiset.algorithms.graphtheory.networkflow.examples.CapacityScalingExample.CapacityScalingSolver & moved to class com.williamfiset.algorithms.graphtheory.networkflow.examples.CapacityScalingExample.NetworkFlowSolverBase
1610d00ee78e9a3f6a8f6d286c44cc4cbcbf3ec6,EXTRACT_AND_MOVE_OPERATION, Extract And Move Method Extract And Move Method	public markAllNodesAsUnvisited() : void extracted from public solve() : void in class com.williamfiset.algorithms.graphtheory.networkflow.examples.CapacityScalingExample.CapacityScalingSolver & moved to class com.williamfiset.algorithms.graphtheory.networkflow.examples.CapacityScalingExample.NetworkFlowSolverBase
93c792d048b1f469aef27840c9097a5c1910a509,MOVE_OPERATION, Move Method Move Method	private fillRandom(ar int[]) : void from class MaxSlidingWindowTester to private fillRandom(ar int[]) : void from class SlidingWindowMaximumTest
93c792d048b1f469aef27840c9097a5c1910a509,MOVE_OPERATION, Move Method Move Method	public randomizedTest(n int) : void from class MaxSlidingWindowTester to public randomizedTest(n int) : void from class SlidingWindowMaximumTest
4036daa101bb11d4da1ccad1dd0c5e950918b85e,MOVE_CLASS, Move Class Move Class	com.williamfiset.algorithms.geometry.PT moved to com.williamfiset.algorithms.geometry.ClosestPairOfPoints.PT
4036daa101bb11d4da1ccad1dd0c5e950918b85e,RENAME_CLASS, Rename Class Rename Class	com.williamfiset.algorithms.geometry.CoplanarPointsTest renamed to com.williamfiset.algorithms.geometry.CoplanarPoints
4036daa101bb11d4da1ccad1dd0c5e950918b85e,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public angleBetweenVectors(v1x double  v1y double  v2x double  v2y double) : double from class com.williamfiset.algorithms.geometry.AngleBetweenVectors2D
4036daa101bb11d4da1ccad1dd0c5e950918b85e,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public angleBetweenVectors(v1x double  v1y double  v1z double  v2x double  v2y double  v2z double) : double from class com.williamfiset.algorithms.geometry.AngleBetweenVectors3D
4036daa101bb11d4da1ccad1dd0c5e950918b85e,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private arccosSafe(x double) : double from class com.williamfiset.algorithms.geometry.CircleCircleIntersectionArea
4036daa101bb11d4da1ccad1dd0c5e950918b85e,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	public to private in method private rotatePoint(fp Point2D  pt Point2D  angle double) : Point2D from class com.williamfiset.algorithms.geometry.CircleCircleIntersectionArea
4036daa101bb11d4da1ccad1dd0c5e950918b85e,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private EPS : double from class com.williamfiset.algorithms.geometry.ClosestPairOfPoints
4036daa101bb11d4da1ccad1dd0c5e950918b85e,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	public to private in method private orientation(a Pt  b Pt  c Pt) : int from class com.williamfiset.algorithms.geometry.LineSegmentLineSegmentIntersection
4036daa101bb11d4da1ccad1dd0c5e950918b85e,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	public to private in method private pointOnLine(a Pt  b Pt  c Pt) : boolean from class com.williamfiset.algorithms.geometry.LineSegmentLineSegmentIntersection
4036daa101bb11d4da1ccad1dd0c5e950918b85e,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	public to private in method private segmentsIntersect(p1 Pt  p2 Pt  p3 Pt  p4 Pt) : boolean from class com.williamfiset.algorithms.geometry.LineSegmentLineSegmentIntersection
4036daa101bb11d4da1ccad1dd0c5e950918b85e,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	public to private in method private getCommonEndpoints(p1 Pt  p2 Pt  p3 Pt  p4 Pt) : List<Pt> from class com.williamfiset.algorithms.geometry.LineSegmentLineSegmentIntersection
4036daa101bb11d4da1ccad1dd0c5e950918b85e,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	public to private in method private arcsinSafe(x double) : double from class com.williamfiset.algorithms.geometry.PointCircleTangent
4036daa101bb11d4da1ccad1dd0c5e950918b85e,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	public to private in method private collinear(a Point2D  b Point2D  c Point2D) : int from class com.williamfiset.algorithms.geometry.PointInsideTriangle
4036daa101bb11d4da1ccad1dd0c5e950918b85e,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public interpolationSearch(nums int[]  val int) : int from class com.williamfiset.algorithms.search.InterpolationSearch
4036daa101bb11d4da1ccad1dd0c5e950918b85e,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private EPS : double from class com.williamfiset.algorithms.search.TernarySearch
4036daa101bb11d4da1ccad1dd0c5e950918b85e,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public ternarySearch(low double  high double  function DoubleFunction<Double>) : double from class com.williamfiset.algorithms.search.TernarySearch
4036daa101bb11d4da1ccad1dd0c5e950918b85e,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	package to public in class com.williamfiset.algorithms.geometry.ClosestPairOfPoints.PT
4036daa101bb11d4da1ccad1dd0c5e950918b85e,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	package to public in class com.williamfiset.algorithms.geometry.CoplanarPoints.Vector
4036daa101bb11d4da1ccad1dd0c5e950918b85e,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private cross(v1 Vector  v2 Vector) : Vector from class com.williamfiset.algorithms.geometry.CoplanarPoints
4036daa101bb11d4da1ccad1dd0c5e950918b85e,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private dot(v1 Vector  v2 Vector) : double from class com.williamfiset.algorithms.geometry.CoplanarPoints
ee7bba79d58e2d1e00482b8f0ff2be225069012c,INLINE_VARIABLE, Inline Variable Inline Variable	edges : List<Edge> in method public dijkstra(start int  end int) : double from class com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap
82d1f89113886715e6fe8bcd00b4e105ccd6e130,RENAME_PARAMETER, Rename Parameter Rename Parameter	height : long to depth : long in method private visit(node TreeNode  depth long) : void from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour
82d1f89113886715e6fe8bcd00b4e105ccd6e130,RENAME_PARAMETER, Rename Parameter Rename Parameter	height : long to depth : long in method private dfs(node TreeNode  depth long) : void from class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour
82d1f89113886715e6fe8bcd00b4e105ccd6e130,RENAME_ATTRIBUTE, Rename Attribute Rename Attribute	heights : long[] to nodeDepth : long[] in class com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	RangeQueryPointUpdateSegmentTree moved to com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	NarrowArtGalleryRecursive moved to com.williamfiset.algorithms.dp.examples.NarrowArtGalleryRecursive
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeTest moved to com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTreeTest moved to com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTreeTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.datastructures.binarysearchtree.TestTreeNode moved to com.williamfiset.algorithms.datastructures.binarysearchtree.TestTreeNode
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTreeTest moved to com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTreeTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	SplayTreeTest moved to com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTreeTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.datastructures.bloomfilter.BloomFilterTest moved to com.williamfiset.algorithms.datastructures.bloomfilter.BloomFilterTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.datastructures.dynamicarray.DynamicArrayTest moved to com.williamfiset.algorithms.datastructures.dynamicarray.DynamicArrayTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeQueryPointUpdateTest moved to com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeQueryPointUpdateTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeUpdatePointQueryTest moved to com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeUpdatePointQueryTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.datastructures.hashtable.HashTableDoubleHashingTest moved to com.williamfiset.algorithms.datastructures.hashtable.HashTableDoubleHashingTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbingTest moved to com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbingTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbingTest moved to com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbingTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest moved to com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest moved to com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovalsTest moved to com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovalsTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapTest moved to com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.datastructures.priorityqueue.MinDHeapTest moved to com.williamfiset.algorithms.datastructures.priorityqueue.MinDHeapTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedBinaryHeapTest moved to com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedBinaryHeapTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.datastructures.quadtree.QuadTreeTest moved to com.williamfiset.algorithms.datastructures.quadtree.QuadTreeTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.datastructures.queue.IntQueueTest moved to com.williamfiset.algorithms.datastructures.queue.IntQueueTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.datastructures.queue.QueueTest moved to com.williamfiset.algorithms.datastructures.queue.QueueTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.datastructures.segmenttree.SegmentTreeWithPointersTest moved to com.williamfiset.algorithms.datastructures.segmenttree.SegmentTreeWithPointersTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.datastructures.set.ConstObj moved to com.williamfiset.algorithms.datastructures.set.ConstObj
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.datastructures.set.HSetTest moved to com.williamfiset.algorithms.datastructures.set.HSetTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.datastructures.stack.StackTest moved to com.williamfiset.algorithms.datastructures.stack.StackTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.datastructures.suffixarray.SuffixArrayTest moved to com.williamfiset.algorithms.datastructures.suffixarray.SuffixArrayTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.datastructures.trie.TrieTest moved to com.williamfiset.algorithms.datastructures.trie.TrieTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.datastructures.unionfind.UnionFindTest moved to com.williamfiset.algorithms.datastructures.unionfind.UnionFindTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.dp.CoinChangeTest moved to com.williamfiset.algorithms.dp.CoinChangeTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.dp.MinimumWeightPerfectMatchingTest moved to com.williamfiset.algorithms.dp.MinimumWeightPerfectMatchingTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.geometry.ConvexHullMonotoneChainsAlgorithmTest moved to com.williamfiset.algorithms.geometry.ConvexHullMonotoneChainsAlgorithmTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.graphtheory.ArticulationPointsAdjacencyListTest moved to com.williamfiset.algorithms.graphtheory.ArticulationPointsAdjacencyListTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterativeTest moved to com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterativeTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.graphtheory.BridgesAdjacencyListIterativeTest moved to com.williamfiset.algorithms.graphtheory.BridgesAdjacencyListIterativeTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.graphtheory.BridgesAdjacencyListTest moved to com.williamfiset.algorithms.graphtheory.BridgesAdjacencyListTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyListTest moved to com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyListTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.graphtheory.FloydWarshallSolverTest moved to com.williamfiset.algorithms.graphtheory.FloydWarshallSolverTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.graphtheory.SteinerTreeTest moved to com.williamfiset.algorithms.graphtheory.SteinerTreeTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.graphtheory.TarjanSccSolverAdjacencyListTest moved to com.williamfiset.algorithms.graphtheory.TarjanSccSolverAdjacencyListTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.graphtheory.TravelingSalesmanProblemTest moved to com.williamfiset.algorithms.graphtheory.TravelingSalesmanProblemTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.graphtheory.TwoSatSolverAdjacencyListTest moved to com.williamfiset.algorithms.graphtheory.TwoSatSolverAdjacencyListTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.graphtheory.networkflow.BipartiteGraphCheckAdjacencyListTest moved to com.williamfiset.algorithms.graphtheory.networkflow.BipartiteGraphCheckAdjacencyListTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.graphtheory.networkflow.MaxFlowTests moved to com.williamfiset.algorithms.graphtheory.networkflow.MaxFlowTests
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowTests moved to com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowTests
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.graphtheory.treealgorithms.RootingTreeTest moved to com.williamfiset.algorithms.graphtheory.treealgorithms.RootingTreeTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenterTest moved to com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenterTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphismTest moved to com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphismTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphismWithBfsTest moved to com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphismWithBfsTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.other.BitManipulationsTest moved to com.williamfiset.algorithms.other.BitManipulationsTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.other.SlidingWindowMaximumTest moved to com.williamfiset.algorithms.other.SlidingWindowMaximumTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.search.InterpolationSearchTest moved to com.williamfiset.algorithms.search.InterpolationSearchTest
6e5bc953c2f61761b6dcf1e829af06c135213fa4,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.strings.LongestCommonSubstringTest moved to com.williamfiset.algorithms.strings.LongestCommonSubstringTest
f4b65214a86e556ac9e7ec082dc7fca980661185,ADD_VARIABLE_MODIFIER, Add Variable Modifier Add Variable Modifier	final in variable END_STATE : int in method public solve() : void from class MinimumWeightPerfectMatching
f4b65214a86e556ac9e7ec082dc7fca980661185,RENAME_VARIABLE, Rename Variable Rename Variable	memo : int[][] to history : int[][] in method public solve() : void from class MinimumWeightPerfectMatching
f4b65214a86e556ac9e7ec082dc7fca980661185,RENAME_VARIABLE, Rename Variable Rename Variable	previousState : int to prevState : int in method public solve() : void from class MinimumWeightPerfectMatching
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public eliminateCoefficient(c long  a long  m long) : long[] from class com.williamfiset.algorithms.math.ChineseRemainderTheorem
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public reduce(a long[]  m long[]) : long[][] from class com.williamfiset.algorithms.math.ChineseRemainderTheorem
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public crt(a long[]  m long[]) : long[] from class com.williamfiset.algorithms.math.ChineseRemainderTheorem
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private primeFactorization(n long) : ArrayList<Long> from class com.williamfiset.algorithms.math.ChineseRemainderTheorem
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private pollardRho(n long) : long from class com.williamfiset.algorithms.math.ChineseRemainderTheorem
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private egcd(a long  b long) : long[] from class com.williamfiset.algorithms.math.ChineseRemainderTheorem
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private gcf(a long  b long) : long from class com.williamfiset.algorithms.math.ChineseRemainderTheorem
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private isPrime(n long) : boolean from class com.williamfiset.algorithms.math.ChineseRemainderTheorem
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private primeFactorization(n long) : ArrayList<Long> from class com.williamfiset.algorithms.math.EulerTotientFunction
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private pollardRho(n long) : long from class com.williamfiset.algorithms.math.EulerTotientFunction
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private gcf(a long  b long) : long from class com.williamfiset.algorithms.math.EulerTotientFunction
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private isPrime(n long) : boolean from class com.williamfiset.algorithms.math.EulerTotientFunction
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public eulersTotient(n long) : long from class com.williamfiset.algorithms.math.EulerTotientFunction
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private MAX : int from class com.williamfiset.algorithms.math.EulerTotientFunctionWithSieve
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private PRIMES : int[] from class com.williamfiset.algorithms.math.EulerTotientFunctionWithSieve
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private sieve(limit int) : int[] from class com.williamfiset.algorithms.math.EulerTotientFunctionWithSieve
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public egcd(a long  b long) : long[] from class com.williamfiset.algorithms.math.ExtendedEuclideanAlgorithm
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	package to public in class com.williamfiset.algorithms.math.FastFourierTransformComplexNumbers.Complex
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private polyMult(a Complex[]  b Complex[]) : Complex[] from class com.williamfiset.algorithms.math.FastFourierTransformComplexNumbers
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private pad(arr Complex[]  n int) : Complex[] from class com.williamfiset.algorithms.math.FastFourierTransformComplexNumbers
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public fft(x Complex[]) : Complex[] from class com.williamfiset.algorithms.math.FastFourierTransformComplexNumbers
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private ifft(x Complex[]) : Complex[] from class com.williamfiset.algorithms.math.FastFourierTransformComplexNumbers
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public gcd(a long  b long) : long from class com.williamfiset.algorithms.math.GCD
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public isPrime(n long) : boolean from class com.williamfiset.algorithms.math.IsPrime
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private gcd(a long  b long) : long from class com.williamfiset.algorithms.math.LCM
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public lcm(a long  b long) : long from class com.williamfiset.algorithms.math.LCM
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private egcd(a long  b long) : long[] from class com.williamfiset.algorithms.math.ModularInverse
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public modInv(a long  m long) : Long from class com.williamfiset.algorithms.math.ModularInverse
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public primeFactorization(n long) : ArrayList<Long> from class com.williamfiset.algorithms.math.PrimeFactorization
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private pollardRho(n long) : long from class com.williamfiset.algorithms.math.PrimeFactorization
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private gcd(a long  b long) : long from class com.williamfiset.algorithms.math.PrimeFactorization
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private isPrime(n long) : boolean from class com.williamfiset.algorithms.math.PrimeFactorization
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private gcf(a long  b long) : long from class com.williamfiset.algorithms.math.RelativelyPrime
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public areCoprime(a long  b long) : boolean from class com.williamfiset.algorithms.math.RelativelyPrime
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public sieve(limit int) : int[] from class com.williamfiset.algorithms.math.SieveOfEratosthenes
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private p : long from class com.williamfiset.algorithms.math.FastFourierTransform
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private q : long from class com.williamfiset.algorithms.math.FastFourierTransform
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private zeta : long from class com.williamfiset.algorithms.math.FastFourierTransform
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private exp : int from class com.williamfiset.algorithms.math.FastFourierTransform
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private powers : long[] from class com.williamfiset.algorithms.math.FastFourierTransform
4a49b1a3e306f43d252c54428c09563a46ce61b0,MOVE_ATTRIBUTE, Move Attribute Move Attribute	package p : long from class com.williamfiset.algorithms.math.FFT to private p : long from class com.williamfiset.algorithms.math.FastFourierTransform
4a49b1a3e306f43d252c54428c09563a46ce61b0,MOVE_ATTRIBUTE, Move Attribute Move Attribute	package q : long from class com.williamfiset.algorithms.math.FFT to private q : long from class com.williamfiset.algorithms.math.FastFourierTransform
4a49b1a3e306f43d252c54428c09563a46ce61b0,MOVE_ATTRIBUTE, Move Attribute Move Attribute	package zeta : long from class com.williamfiset.algorithms.math.FFT to private zeta : long from class com.williamfiset.algorithms.math.FastFourierTransform
4a49b1a3e306f43d252c54428c09563a46ce61b0,MOVE_ATTRIBUTE, Move Attribute Move Attribute	package exp : int from class com.williamfiset.algorithms.math.FFT to private exp : int from class com.williamfiset.algorithms.math.FastFourierTransform
4a49b1a3e306f43d252c54428c09563a46ce61b0,MOVE_ATTRIBUTE, Move Attribute Move Attribute	package powers : long[] from class com.williamfiset.algorithms.math.FFT to private powers : long[] from class com.williamfiset.algorithms.math.FastFourierTransform
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to public in method public multiply(x long[]  y long[]) : long[] from class com.williamfiset.algorithms.math.FastFourierTransform
4a49b1a3e306f43d252c54428c09563a46ce61b0,MOVE_OPERATION, Move Method Move Method	package multiply(x long[]  y long[]) : long[] from class com.williamfiset.algorithms.math.FFT to public multiply(x long[]  y long[]) : long[] from class com.williamfiset.algorithms.math.FastFourierTransform
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private mult(x long  y long) : long from class com.williamfiset.algorithms.math.FastFourierTransform
4a49b1a3e306f43d252c54428c09563a46ce61b0,MOVE_OPERATION, Move Method Move Method	package mult(x long  y long) : long from class com.williamfiset.algorithms.math.FFT to private mult(x long  y long) : long from class com.williamfiset.algorithms.math.FastFourierTransform
4a49b1a3e306f43d252c54428c09563a46ce61b0,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	package to private in method private transform(v long[]  logN int  inverse boolean) : long[] from class com.williamfiset.algorithms.math.FastFourierTransform
4a49b1a3e306f43d252c54428c09563a46ce61b0,MOVE_OPERATION, Move Method Move Method	package transform(v long[]  logN int  inverse boolean) : long[] from class com.williamfiset.algorithms.math.FFT to private transform(v long[]  logN int  inverse boolean) : long[] from class com.williamfiset.algorithms.math.FastFourierTransform
f04038cbbfb3686343fd8d7b358d5e85f29507a1,MOVE_CLASS, Move Class Move Class	MiceAndOwls moved to com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls
f04038cbbfb3686343fd8d7b358d5e85f29507a1,MOVE_CLASS, Move Class Move Class	Edge moved to com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls.Edge
f04038cbbfb3686343fd8d7b358d5e85f29507a1,MOVE_CLASS, Move Class Move Class	NetworkFlowSolverBase moved to com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls.NetworkFlowSolverBase
f04038cbbfb3686343fd8d7b358d5e85f29507a1,MOVE_RENAME_CLASS, Move And Rename Class Move And Rename Class	FordFulkersonDfsSolverAdjacencyList moved and renamed to com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls.FordFulkersonDfsSolver
f04038cbbfb3686343fd8d7b358d5e85f29507a1,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	package to private in class com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls.Edge
f04038cbbfb3686343fd8d7b358d5e85f29507a1,ADD_CLASS_MODIFIER, Add Class Modifier Add Class Modifier	static in class com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls.Edge
f04038cbbfb3686343fd8d7b358d5e85f29507a1,ADD_ATTRIBUTE_MODIFIER, Add Attribute Modifier Add Attribute Modifier	final in attribute public capacity : long from class com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls.Edge
f04038cbbfb3686343fd8d7b358d5e85f29507a1,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	package to private in class com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls.NetworkFlowSolverBase
f04038cbbfb3686343fd8d7b358d5e85f29507a1,ADD_CLASS_MODIFIER, Add Class Modifier Add Class Modifier	static in class com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls.NetworkFlowSolverBase
f04038cbbfb3686343fd8d7b358d5e85f29507a1,RENAME_METHOD, Rename Method Rename Method	private initializeGraph() : void renamed to private initializeEmptyFlowGraph() : void in class com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls.NetworkFlowSolverBase
f04038cbbfb3686343fd8d7b358d5e85f29507a1,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	protected to package in attribute package INF : long from class com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls.NetworkFlowSolverBase
f04038cbbfb3686343fd8d7b358d5e85f29507a1,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	protected to package in attribute package n : int from class com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls.NetworkFlowSolverBase
f04038cbbfb3686343fd8d7b358d5e85f29507a1,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	protected to package in attribute package s : int from class com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls.NetworkFlowSolverBase
f04038cbbfb3686343fd8d7b358d5e85f29507a1,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	protected to package in attribute package t : int from class com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls.NetworkFlowSolverBase
f04038cbbfb3686343fd8d7b358d5e85f29507a1,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	package to private in class com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls.FordFulkersonDfsSolver
f04038cbbfb3686343fd8d7b358d5e85f29507a1,ADD_CLASS_MODIFIER, Add Class Modifier Add Class Modifier	static in class com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls.FordFulkersonDfsSolver
f04038cbbfb3686343fd8d7b358d5e85f29507a1,EXTRACT_AND_MOVE_OPERATION, Extract And Move Method Extract And Move Method	public augment(bottleNeck long) : void extracted from private dfs(node int  flow long) : long in class FordFulkersonDfsSolverAdjacencyList & moved to class com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls.Edge
283fb5a46b314013f6d2b96f7afde718696fa243,EXTRACT_OPERATION, Extract Method Extract Method	private assertOptimalMatching(matching int[]  costMatrix Double[][]  expectedMatchingCost double) : void extracted from public testMatchingAndCostAreConsistent() : void in class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest
283fb5a46b314013f6d2b96f7afde718696fa243,RENAME_VARIABLE, Rename Variable Rename Variable	totalMinCost : double to total : double in method private assertOptimalMatching(matching int[]  costMatrix Double[][]  expectedMatchingCost double) : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest
283fb5a46b314013f6d2b96f7afde718696fa243,EXTRACT_VARIABLE, Extract Variable Extract Variable	expectedCost : double in method public testNegativeEdge_smallerThanINFWeights() : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest
283fb5a46b314013f6d2b96f7afde718696fa243,INLINE_VARIABLE, Inline Variable Inline Variable	matching : int[] in method public testMatchingAndCostAreConsistent() : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest
d0190baed715d0b5ccb9bf0afff9d077a6a86084,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	private to public in class com.williamfiset.algorithms.graphtheory.FordFulkersonDfsSolverAdjacencyList.Edge
d0190baed715d0b5ccb9bf0afff9d077a6a86084,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to public in attribute public residual : Edge from class com.williamfiset.algorithms.graphtheory.FordFulkersonDfsSolverAdjacencyList.Edge
d0190baed715d0b5ccb9bf0afff9d077a6a86084,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to public in attribute public to : int from class com.williamfiset.algorithms.graphtheory.FordFulkersonDfsSolverAdjacencyList.Edge
d0190baed715d0b5ccb9bf0afff9d077a6a86084,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to public in attribute public capacity : int from class com.williamfiset.algorithms.graphtheory.FordFulkersonDfsSolverAdjacencyList.Edge
d0190baed715d0b5ccb9bf0afff9d077a6a86084,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	List<List<Edge>> to void in method private initializeGraph() : void from class com.williamfiset.algorithms.graphtheory.FordFulkersonDfsSolverAdjacencyList
9c96ca6bddf631435e5c9d943f2851e165649367,RENAME_VARIABLE, Rename Variable Rename Variable	strs : String[] to strings : String[] in method public main(args String[]) : void from class com.williamfiset.algorithms.strings.LongestCommonSubstring
e49c26d405296614eab2f0664bc37592c9d7c925,RENAME_PARAMETER, Rename Parameter Rename Parameter	ar : int[] to numbers : int[] in method public radixSort(numbers int[]) : void from class com.williamfiset.algorithms.sorting.RadixSort
f8dc49d8867bfe254fa4b7d4f70b29079d97be8b,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	limit : int to limit : long in method package isPrime(n long) : boolean from class IsPrime
f8dc49d8867bfe254fa4b7d4f70b29079d97be8b,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	i : int to i : long in method package isPrime(n long) : boolean from class IsPrime
f8dc49d8867bfe254fa4b7d4f70b29079d97be8b,ADD_PARAMETER_MODIFIER, Add Parameter Modifier Add Parameter Modifier	final in parameter n : long in method package isPrime(n long) : boolean from class IsPrime
f8dc49d8867bfe254fa4b7d4f70b29079d97be8b,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	limit : int to limit : long in method package isPrime(n long) : boolean from class PrimeFactorization
f8dc49d8867bfe254fa4b7d4f70b29079d97be8b,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	i : int to i : long in method package isPrime(n long) : boolean from class PrimeFactorization
f8dc49d8867bfe254fa4b7d4f70b29079d97be8b,ADD_PARAMETER_MODIFIER, Add Parameter Modifier Add Parameter Modifier	final in parameter n : long in method package isPrime(n long) : boolean from class PrimeFactorization
7d44e1e580df04fd49c9d5b4bb28363cbd4d6515,RENAME_VARIABLE, Rename Variable Rename Variable	startNodes : Stack<Integer> to nodesWithNoIncomingEdges : Stack<Integer> in method public kahns(g List<List<Integer>>) : int[] from class com.williamfiset.algorithms.graphtheory.Kahns
59c36a868c96d6f56e4e3ad4f4b04900f992ff84,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@SuppressWarnings("unchecked") in method private initializeEmptyFlowGraph() : void from class com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample.NetworkFlowSolverBase
59c36a868c96d6f56e4e3ad4f4b04900f992ff84,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@SuppressWarnings("unchecked") in method private initializeEmptyFlowGraph() : void from class com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls.NetworkFlowSolverBase
59c36a868c96d6f56e4e3ad4f4b04900f992ff84,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	node : AVLTreeRecursive.Node to node : AVLTreeRecursive<Integer>.Node in method package validateBalanceFactorValues(node AVLTreeRecursive<Integer>.Node) : boolean from class com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeTest
5cd254a8bc3d3d186a214615bd64f6ae0e841d21,RENAME_METHOD, Rename Method Rename Method	private TSP(i int  state int  dist double[][]  memo Double[][]) : double renamed to private tsp(i int  state int  dist double[][]  memo Double[][]  indexAdded Integer[][]  start int) : double in class TspDynamicProgramming
5cd254a8bc3d3d186a214615bd64f6ae0e841d21,ADD_ATTRIBUTE_MODIFIER, Add Attribute Modifier Add Attribute Modifier	final in attribute private FINISHED_STATE : int from class TspDynamicProgramming
5cd254a8bc3d3d186a214615bd64f6ae0e841d21,RENAME_VARIABLE, Rename Variable Rename Variable	n : int to N : int in method private tsp(i int  state int  dist double[][]  memo Double[][]  indexAdded Integer[][]  start int) : double from class TspDynamicProgramming
5cd254a8bc3d3d186a214615bd64f6ae0e841d21,ADD_PARAMETER, Add Parameter Add Parameter	indexAdded : Integer[][] in method private tsp(i int  state int  dist double[][]  memo Double[][]  indexAdded Integer[][]  start int) : double from class TspDynamicProgramming
5cd254a8bc3d3d186a214615bd64f6ae0e841d21,ADD_PARAMETER, Add Parameter Add Parameter	start : int in method private tsp(i int  state int  dist double[][]  memo Double[][]  indexAdded Integer[][]  start int) : double from class TspDynamicProgramming
5cd254a8bc3d3d186a214615bd64f6ae0e841d21,REMOVE_METHOD_MODIFIER, Remove Method Modifier Remove Method Modifier	static in method private TSP(i int  state int  dist double[][]  memo Double[][]) : double from class TspDynamicProgramming
5cd254a8bc3d3d186a214615bd64f6ae0e841d21,RENAME_ATTRIBUTE, Rename Attribute Rename Attribute	n : int to N : int in class TspDynamicProgramming
5cd254a8bc3d3d186a214615bd64f6ae0e841d21,ADD_ATTRIBUTE_MODIFIER, Add Attribute Modifier Add Attribute Modifier	final in attribute private N : int from class TspDynamicProgramming
ca38f55f8ade816cbaad366a256e33a2b3d197cc,ADD_ATTRIBUTE_MODIFIER, Add Attribute Modifier Add Attribute Modifier	final in attribute private n : int from class com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList
ca38f55f8ade816cbaad366a256e33a2b3d197cc,MOVE_ATTRIBUTE, Move Attribute Move Attribute	private n : int from class com.williamfiset.algorithms.graphtheory.IndexMinPQ to private n : int from class com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList
1f1e7175e1ef4b807aab50946c2fff1973f4a498,MOVE_SOURCE_FOLDER, Move Source Folder Move Source Folder	 to Math
b7526e40a65e6bb15e1732a21f384b31081d81f2,INLINE_VARIABLE, Inline Variable Inline Variable	N : int in method public mcbm(graph List<List<Integer>>  n int  m int) : int from class MaxMatchingBipartiteGraphAugmentingPath
b7526e40a65e6bb15e1732a21f384b31081d81f2,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	visited : boolean[] to visited : int[] in method public mcbm(graph List<List<Integer>>  n int  m int) : int from class MaximumCardinalityBipartiteMatchingAugmentingPathAdjacencyList
b7526e40a65e6bb15e1732a21f384b31081d81f2,MOVE_OPERATION, Move Method Move Method	public mcbm(graph List<List<Integer>>  n int  m int) : int from class MaxMatchingBipartiteGraphAugmentingPath to public mcbm(graph List<List<Integer>>  n int  m int) : int from class MaximumCardinalityBipartiteMatchingAugmentingPathAdjacencyList
b7526e40a65e6bb15e1732a21f384b31081d81f2,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	visited : boolean[] to visited : int[] in method private augment(graph List<List<Integer>>  visited int[]  next int[]  at int) : int from class MaximumCardinalityBipartiteMatchingAugmentingPathAdjacencyList
b7526e40a65e6bb15e1732a21f384b31081d81f2,RENAME_VARIABLE, Rename Variable Rename Variable	to : int to rightNode : int in method private augment(graph List<List<Integer>>  visited int[]  next int[]  at int) : int from class MaximumCardinalityBipartiteMatchingAugmentingPathAdjacencyList
b7526e40a65e6bb15e1732a21f384b31081d81f2,RENAME_PARAMETER, Rename Parameter Rename Parameter	matched : int[] to next : int[] in method private augment(graph List<List<Integer>>  visited int[]  next int[]  at int) : int from class MaximumCardinalityBipartiteMatchingAugmentingPathAdjacencyList
b7526e40a65e6bb15e1732a21f384b31081d81f2,MOVE_OPERATION, Move Method Move Method	private augment(graph List<List<Integer>>  visited boolean[]  matched int[]  at int) : int from class MaxMatchingBipartiteGraphAugmentingPath to private augment(graph List<List<Integer>>  visited int[]  next int[]  at int) : int from class MaximumCardinalityBipartiteMatchingAugmentingPathAdjacencyList
5f015104677d47fc04d88e1ebfeb7da5bd9489d2,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	public to private in method private sumQuery(l int  r int) : long from class com.williamfiset.algorithms.datastructures.sparsetable.SparseTable
5f015104677d47fc04d88e1ebfeb7da5bd9489d2,ADD_PARAMETER, Add Parameter Add Parameter	index : int in method private queryResultTest(values long[]  l int  r int  actual long  index int  op SparseTable.Operation) : void from class com.williamfiset.algorithms.datastructures.sparsetable.SparseTableTest
5f015104677d47fc04d88e1ebfeb7da5bd9489d2,ADD_PARAMETER, Add Parameter Add Parameter	index : int in method private minQuery(values long[]  l int  r int  actual long  index int) : void from class com.williamfiset.algorithms.datastructures.sparsetable.SparseTableTest
5f015104677d47fc04d88e1ebfeb7da5bd9489d2,ADD_PARAMETER, Add Parameter Add Parameter	index : int in method private maxQuery(values long[]  l int  r int  actual long  index int) : void from class com.williamfiset.algorithms.datastructures.sparsetable.SparseTableTest
65cb0252da853ca5c0bba83fd6205b6aa0932091,RENAME_METHOD, Rename Method Rename Method	private f(state int  dp Double[]  history int[]) : double renamed to private ff(state int  dp Double[]  history int[]) : double in class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive
65cb0252da853ca5c0bba83fd6205b6aa0932091,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	cost : double[][] to cost : Double[][] in class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive
65cb0252da853ca5c0bba83fd6205b6aa0932091,INLINE_VARIABLE, Inline Variable Inline Variable	edgeCost : double in method private setCostMatrix(inputMatrix Double[][]) : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive
65cb0252da853ca5c0bba83fd6205b6aa0932091,INLINE_VARIABLE, Inline Variable Inline Variable	edgeCost : double in method private setCostMatrix(inputMatrix Double[][]) : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive
65cb0252da853ca5c0bba83fd6205b6aa0932091,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	newCostMatrix : double[][] to newCostMatrix : Double[][] in method private setCostMatrix(inputMatrix Double[][]) : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive
65cb0252da853ca5c0bba83fd6205b6aa0932091,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	dp : Double[] to dp : Rv[] in method private solve() : void from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive
65cb0252da853ca5c0bba83fd6205b6aa0932091,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	private to package in attribute package INF : double from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest
65cb0252da853ca5c0bba83fd6205b6aa0932091,MOVE_ATTRIBUTE, Move Attribute Move Attribute	private INF : double from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive to package INF : double from class com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest
5ff004e003d8172b8b8850530caa3ee63f1668bb,EXTRACT_OPERATION, Extract Method Extract Method	private generateSkipTable(pattern String) : Map<Character Integer> extracted from public findOccurrences(text String  pattern String) : List<Integer> in class com.williamfiset.algorithms.strings.BoyerMooreStringSearch
5ff004e003d8172b8b8850530caa3ee63f1668bb,RENAME_VARIABLE, Rename Variable Rename Variable	skipTable : Map<Character Integer> to characterIndexMap : Map<Character Integer> in method private generateSkipTable(pattern String) : Map<Character Integer> from class com.williamfiset.algorithms.strings.BoyerMooreStringSearch
5ff004e003d8172b8b8850530caa3ee63f1668bb,RENAME_VARIABLE, Rename Variable Rename Variable	i : int to charIndex : int in method private generateSkipTable(pattern String) : Map<Character Integer> from class com.williamfiset.algorithms.strings.BoyerMooreStringSearch
5ff004e003d8172b8b8850530caa3ee63f1668bb,RENAME_METHOD, Rename Method Rename Method	public shouldReturnMultiplyOccurrences() : void renamed to public shouldReturnMultipleOccurrences() : void in class com.williamfiset.algorithms.strings.BoyerMooreStringSearchTest
d10d9865f571cb94ae6628e585af8b64bad4370b,EXTRACT_OPERATION, Extract Method Extract Method	public sort(values int[]) : void extracted from public main(args String[]) : void in class com.williamfiset.algorithms.sorting.RadixSort
d10d9865f571cb94ae6628e585af8b64bad4370b,PARAMETERIZE_VARIABLE, Parameterize Variable Parameterize Variable	numbers : int[] to values : int[] in method public sort(values int[]) : void from class com.williamfiset.algorithms.sorting.RadixSort
2479af24a23bd08502b91ca70f369d500df82dde,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	capacity : int to capacity : long in class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowWithBellmanFord.Edge
2479af24a23bd08502b91ca70f369d500df82dde,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	cost : int to cost : long in class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowWithBellmanFord.Edge
2479af24a23bd08502b91ca70f369d500df82dde,ADD_ATTRIBUTE_MODIFIER, Add Attribute Modifier Add Attribute Modifier	final in attribute package cost : long from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowWithBellmanFord.Edge
2479af24a23bd08502b91ca70f369d500df82dde,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	originalCapacity : int to originalCapacity : long in class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowWithBellmanFord.Edge
2479af24a23bd08502b91ca70f369d500df82dde,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	capacity : int to capacity : long in method public Edge(from int  to int  capacity long  cost long) from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowWithBellmanFord.Edge
2479af24a23bd08502b91ca70f369d500df82dde,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	cost : int to cost : long in method public Edge(from int  to int  capacity long  cost long) from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowWithBellmanFord.Edge
2479af24a23bd08502b91ca70f369d500df82dde,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	flow : int to flow : long in method public solve() : void from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowWithBellmanFord
2479af24a23bd08502b91ca70f369d500df82dde,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	dist : double[] to dist : long[] in method private getAugmentingPath() : List<Edge> from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowWithBellmanFord
2479af24a23bd08502b91ca70f369d500df82dde,CHANGE_VARIABLE_TYPE, Change Variable Type Change Variable Type	bottleNeck : int to bottleNeck : long in method private findBottleNeck() : long from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowWithBellmanFord
2479af24a23bd08502b91ca70f369d500df82dde,CHANGE_RETURN_TYPE, Change Return Type Change Return Type	int to long in method private findBottleNeck() : long from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowWithBellmanFord
8f46ecfb77f2927eb6e2d7424a55089d97baf6d3,RENAME_CLASS, Rename Class Rename Class	CombinationsWithRepitition renamed to CombinationsWithRepetition
9f9c53d9ebddee6113aa5eef4ce5412ca6208672,CHANGE_ATTRIBUTE_TYPE, Change Attribute Type Change Attribute Type	delta : int to delta : long in class com.williamfiset.algorithms.graphtheory.networkflow.CapacityScalingSolverAdjacencyList
9f9c53d9ebddee6113aa5eef4ce5412ca6208672,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	capacity : int to capacity : long in method public addEdge(from int  to int  capacity long) : void from class com.williamfiset.algorithms.graphtheory.networkflow.CapacityScalingSolverAdjacencyList
9f9c53d9ebddee6113aa5eef4ce5412ca6208672,ADD_METHOD_ANNOTATION, Add Method Annotation Add Method Annotation	@Override in method public solve() : void from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowWithBellmanFord
9f9c53d9ebddee6113aa5eef4ce5412ca6208672,RENAME_VARIABLE, Rename Variable Rename Variable	source : int to s : int in method private testSmallNetwork() : void from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowWithBellmanFord
9f9c53d9ebddee6113aa5eef4ce5412ca6208672,RENAME_VARIABLE, Rename Variable Rename Variable	sink : int to t : int in method private testSmallNetwork() : void from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowWithBellmanFord
9f9c53d9ebddee6113aa5eef4ce5412ca6208672,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	capacity : int to capacity : long in method public addEdge(from int  to int  capacity long) : void from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase
9f9c53d9ebddee6113aa5eef4ce5412ca6208672,REPLACE_ATTRIBUTE, Replace Attribute Replace Attribute	private source : int from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowWithBellmanFord with protected s : int from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase
9f9c53d9ebddee6113aa5eef4ce5412ca6208672,REPLACE_ATTRIBUTE, Replace Attribute Replace Attribute	private sink : int from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowWithBellmanFord with protected t : int from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase
9f9c53d9ebddee6113aa5eef4ce5412ca6208672,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	private to protected in attribute protected minCost : long from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase
9f9c53d9ebddee6113aa5eef4ce5412ca6208672,MOVE_ATTRIBUTE, Move Attribute Move Attribute	private minCost : long from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowWithBellmanFord to protected minCost : long from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase
9f9c53d9ebddee6113aa5eef4ce5412ca6208672,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	capacity : int to capacity : long in method public addEdge(from int  to int  capacity long  cost long) : void from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase
9f9c53d9ebddee6113aa5eef4ce5412ca6208672,CHANGE_PARAMETER_TYPE, Change Parameter Type Change Parameter Type	cost : int to cost : long in method public addEdge(from int  to int  capacity long  cost long) : void from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase
9f9c53d9ebddee6113aa5eef4ce5412ca6208672,MOVE_OPERATION, Move Method Move Method	public addEdge(from int  to int  capacity int  cost int) : void from class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowWithBellmanFord to public addEdge(from int  to int  capacity long  cost long) : void from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase
9dc7a545784f1ddcc35eeaf5f4f36b1966dc53ba,MOVE_CLASS, Move Class Move Class	javatests.com.williamfiset.algorithms.strings.BoyerMooreStringSearchTest moved to com.williamfiset.algorithms.strings.BoyerMooreStringSearchTest
2a1367fee9aca9a7dac889a68969733e16d7bd2f,MOVE_CLASS, Move Class Move Class	com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowSolver.getAugmentingPath.Node moved to com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlow.getAugmentingPath.Node
2a1367fee9aca9a7dac889a68969733e16d7bd2f,RENAME_CLASS, Rename Class Rename Class	com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowSolver renamed to com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlow
2a1367fee9aca9a7dac889a68969733e16d7bd2f,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	package to public in class com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlow
567d9c45c5b34729c6c118772007d703a5c35f42,MOVE_CLASS, Move Class Move Class	Edge moved to FordFulkersonDFSAdjacencyList.Edge
567d9c45c5b34729c6c118772007d703a5c35f42,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	package to private in attribute private visitedToken : int from class FordFulkersonDFSAdjacencyList
567d9c45c5b34729c6c118772007d703a5c35f42,RENAME_VARIABLE, Rename Variable Rename Variable	edge : Edge to e1 : Edge in method package addEdge(graph List<Edge>[]  from int  to int  capacity int) : void from class FordFulkersonDFSAdjacencyList
567d9c45c5b34729c6c118772007d703a5c35f42,RENAME_VARIABLE, Rename Variable Rename Variable	rEdge : Edge to e2 : Edge in method package addEdge(graph List<Edge>[]  from int  to int  capacity int) : void from class FordFulkersonDFSAdjacencyList
567d9c45c5b34729c6c118772007d703a5c35f42,RENAME_PARAMETER, Rename Parameter Rename Parameter	cap : int to capacity : int in method package addEdge(graph List<Edge>[]  from int  to int  capacity int) : void from class FordFulkersonDFSAdjacencyList
567d9c45c5b34729c6c118772007d703a5c35f42,CHANGE_OPERATION_ACCESS_MODIFIER, Change Method Access Modifier Change Method Access Modifier	public to package in method package addEdge(graph List<Edge>[]  from int  to int  capacity int) : void from class FordFulkersonDFSAdjacencyList
567d9c45c5b34729c6c118772007d703a5c35f42,RENAME_VARIABLE, Rename Variable Rename Variable	residualEdge : Edge to res : Edge in method private dfs(graph List<Edge>[]  visited int[]  node int  sink int  flow int) : int from class FordFulkersonDFSAdjacencyList
567d9c45c5b34729c6c118772007d703a5c35f42,ADD_CLASS_MODIFIER, Add Class Modifier Add Class Modifier	static in class FordFulkersonDFSAdjacencyList.Edge
567d9c45c5b34729c6c118772007d703a5c35f42,RENAME_ATTRIBUTE, Rename Attribute Rename Attribute	residualEdge : Edge to residual : Edge in class FordFulkersonDFSAdjacencyList.Edge
152dfc0d17f399a360ac59b3502c6218a11a0a84,EXTRACT_OPERATION, Extract Method Extract Method	private example3() : void extracted from public main(args String[]) : void in class com.williamfiset.algorithms.datastructures.sparsetable.SparseTable
1dcc2d10addae7700b843c69b4dc37e7f2bda745,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	protected to private in attribute private visitedToken : int from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase
1dcc2d10addae7700b843c69b4dc37e7f2bda745,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	protected to private in attribute private visited : int[] from class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase
1dcc2d10addae7700b843c69b4dc37e7f2bda745,EXTRACT_AND_MOVE_OPERATION, Extract And Move Method Extract And Move Method	public visit(i int) : void extracted from private dfs(node int  flow long) : long in class com.williamfiset.algorithms.graphtheory.networkflow.CapacityScalingSolverAdjacencyList & moved to class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase
1dcc2d10addae7700b843c69b4dc37e7f2bda745,EXTRACT_AND_MOVE_OPERATION, Extract And Move Method Extract And Move Method	public visit(i int) : void extracted from private bfs() : long in class com.williamfiset.algorithms.graphtheory.networkflow.EdmondsKarpAdjacencyList & moved to class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase
1dcc2d10addae7700b843c69b4dc37e7f2bda745,EXTRACT_AND_MOVE_OPERATION, Extract And Move Method Extract And Move Method	public visit(i int) : void extracted from private dfs(node int  flow long) : long in class com.williamfiset.algorithms.graphtheory.networkflow.FordFulkersonDfsSolverAdjacencyList & moved to class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase
1dcc2d10addae7700b843c69b4dc37e7f2bda745,EXTRACT_AND_MOVE_OPERATION, Extract And Move Method Extract And Move Method	public visited(i int) : boolean extracted from public solve() : void in class com.williamfiset.algorithms.graphtheory.networkflow.CapacityScalingSolverAdjacencyList & moved to class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase
1dcc2d10addae7700b843c69b4dc37e7f2bda745,EXTRACT_AND_MOVE_OPERATION, Extract And Move Method Extract And Move Method	public visited(i int) : boolean extracted from public solve() : void in class com.williamfiset.algorithms.graphtheory.networkflow.EdmondsKarpAdjacencyList & moved to class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase
1dcc2d10addae7700b843c69b4dc37e7f2bda745,EXTRACT_AND_MOVE_OPERATION, Extract And Move Method Extract And Move Method	public visited(i int) : boolean extracted from private bfs() : long in class com.williamfiset.algorithms.graphtheory.networkflow.EdmondsKarpAdjacencyList & moved to class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase
1dcc2d10addae7700b843c69b4dc37e7f2bda745,EXTRACT_AND_MOVE_OPERATION, Extract And Move Method Extract And Move Method	public visited(i int) : boolean extracted from public solve() : void in class com.williamfiset.algorithms.graphtheory.networkflow.FordFulkersonDfsSolverAdjacencyList & moved to class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase
1dcc2d10addae7700b843c69b4dc37e7f2bda745,EXTRACT_AND_MOVE_OPERATION, Extract And Move Method Extract And Move Method	public markAllNodesAsUnvisited() : void extracted from public solve() : void in class com.williamfiset.algorithms.graphtheory.networkflow.CapacityScalingSolverAdjacencyList & moved to class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase
1dcc2d10addae7700b843c69b4dc37e7f2bda745,EXTRACT_AND_MOVE_OPERATION, Extract And Move Method Extract And Move Method	public markAllNodesAsUnvisited() : void extracted from public solve() : void in class com.williamfiset.algorithms.graphtheory.networkflow.EdmondsKarpAdjacencyList & moved to class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase
1dcc2d10addae7700b843c69b4dc37e7f2bda745,EXTRACT_AND_MOVE_OPERATION, Extract And Move Method Extract And Move Method	public markAllNodesAsUnvisited() : void extracted from public solve() : void in class com.williamfiset.algorithms.graphtheory.networkflow.FordFulkersonDfsSolverAdjacencyList & moved to class com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase
c19f7fdd963dd1da42a4c6bea2a760c33de6609b,RENAME_METHOD, Rename Method Rename Method	private initializeGraph() : void renamed to private initializeEmptyFlowGraph() : void in class com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample.NetworkFlowSolverBase
c19f7fdd963dd1da42a4c6bea2a760c33de6609b,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	protected to package in attribute package INF : long from class com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample.NetworkFlowSolverBase
c19f7fdd963dd1da42a4c6bea2a760c33de6609b,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	protected to package in attribute package n : int from class com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample.NetworkFlowSolverBase
c19f7fdd963dd1da42a4c6bea2a760c33de6609b,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	protected to package in attribute package s : int from class com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample.NetworkFlowSolverBase
c19f7fdd963dd1da42a4c6bea2a760c33de6609b,CHANGE_ATTRIBUTE_ACCESS_MODIFIER, Change Attribute Access Modifier Change Attribute Access Modifier	protected to package in attribute package t : int from class com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample.NetworkFlowSolverBase
57605b910a6ea802c7d21a78a00e5aae2bb9f2f3,MOVE_CLASS, Move Class Move Class	BoardTilingsSolver moved to com.williamfiset.algorithms.dp.examples.boardtilings.BoardTilingsSolver
57605b910a6ea802c7d21a78a00e5aae2bb9f2f3,MOVE_CLASS, Move Class Move Class	EditDistance moved to com.williamfiset.algorithms.dp.examples.editdistance.EditDistance
57605b910a6ea802c7d21a78a00e5aae2bb9f2f3,MOVE_CLASS, Move Class Move Class	com.williamfiset.algorithms.dp.examples.HouseRobber moved to com.williamfiset.algorithms.dp.examples.houserobber.HouseRobber
57605b910a6ea802c7d21a78a00e5aae2bb9f2f3,MOVE_CLASS, Move Class Move Class	MagicalCows moved to com.williamfiset.algorithms.dp.examples.magicalcows.MagicalCows
57605b910a6ea802c7d21a78a00e5aae2bb9f2f3,MOVE_CLASS, Move Class Move Class	NarrowArtGalleryRecursive moved to com.williamfiset.algorithms.dp.examples.narrowartgallery.NarrowArtGalleryRecursive
57605b910a6ea802c7d21a78a00e5aae2bb9f2f3,MOVE_CLASS, Move Class Move Class	Scenes moved to com.williamfiset.algorithms.dp.examples.scenes.Scenes
57605b910a6ea802c7d21a78a00e5aae2bb9f2f3,MOVE_CLASS, Move Class Move Class	TilingDominoes moved to com.williamfiset.algorithms.dp.examples.tilingdominoes.TilingDominoes
5e38215b7b49b8412142d72ba5f5e1d9607c3b44,MOVE_CLASS, Move Class Move Class	com.williamfiset.algorithms.graphtheory.MinIndexedDHeap moved to com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap.MinIndexedDHeap
5e38215b7b49b8412142d72ba5f5e1d9607c3b44,MOVE_CLASS, Move Class Move Class	com.williamfiset.algorithms.graphtheory.MinIndexedDHeap moved to com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList.MinIndexedDHeap
5e38215b7b49b8412142d72ba5f5e1d9607c3b44,EXTRACT_OPERATION, Extract Method Extract Method	private solve() : void extracted from public getMstCost() : Long in class com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList
5e38215b7b49b8412142d72ba5f5e1d9607c3b44,REPLACE_VARIABLE_WITH_ATTRIBUTE, Replace Variable With Attribute Replace Variable With Attribute	minCostSum : long to minCostSum : long in method private solve() : void from class com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList
5e38215b7b49b8412142d72ba5f5e1d9607c3b44,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	package to private in class com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap.MinIndexedDHeap
5e38215b7b49b8412142d72ba5f5e1d9607c3b44,ADD_CLASS_MODIFIER, Add Class Modifier Add Class Modifier	static in class com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap.MinIndexedDHeap
5e38215b7b49b8412142d72ba5f5e1d9607c3b44,CHANGE_CLASS_ACCESS_MODIFIER, Change Class Access Modifier Change Class Access Modifier	package to private in class com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList.MinIndexedDHeap
5e38215b7b49b8412142d72ba5f5e1d9607c3b44,ADD_CLASS_MODIFIER, Add Class Modifier Add Class Modifier	static in class com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList.MinIndexedDHeap
c7d4d60edcb8998267f8aa2ac5a43a87c6dfff97,MOVE_CLASS, Move Class Move Class	com.williamfiset.algorithms.graphtheory.EdmondsKarpAdjacencyListOptimized moved to com.williamfiset.algorithms.graphtheory.networkflow.EdmondsKarpAdjacencyListOptimized
c7d4d60edcb8998267f8aa2ac5a43a87c6dfff97,MOVE_CLASS, Move Class Move Class	com.williamfiset.algorithms.graphtheory.FordFulkersonDFSAdjacencyMatrix moved to com.williamfiset.algorithms.graphtheory.networkflow.FordFulkersonDFSAdjacencyMatrix
c7d4d60edcb8998267f8aa2ac5a43a87c6dfff97,INLINE_VARIABLE, Inline Variable Inline Variable	cap : long in method private dfs(node int  flow long) : long from class com.williamfiset.algorithms.graphtheory.networkflow.CapacityScalingSolverAdjacencyList
c7d4d60edcb8998267f8aa2ac5a43a87c6dfff97,INLINE_VARIABLE, Inline Variable Inline Variable	cap : long in method private bfs() : long from class com.williamfiset.algorithms.graphtheory.networkflow.EdmondsKarpAdjacencyList
c7d4d60edcb8998267f8aa2ac5a43a87c6dfff97,INLINE_VARIABLE, Inline Variable Inline Variable	cap : long in method private dfs(node int  flow long) : long from class com.williamfiset.algorithms.graphtheory.networkflow.FordFulkersonDfsSolverAdjacencyList
4175ad67c9048d9aef5bfa7bcbdffd016516badc,REMOVE_PARAMETER, Remove Parameter Remove Parameter	graph : List<List<Integer>> in method public findBridges(graph List<List<Integer>>  N int) : List<Integer> from class BridgesAdjacencyList
4175ad67c9048d9aef5bfa7bcbdffd016516badc,REMOVE_PARAMETER, Remove Parameter Remove Parameter	N : int in method public findBridges(graph List<List<Integer>>  N int) : List<Integer> from class BridgesAdjacencyList
4175ad67c9048d9aef5bfa7bcbdffd016516badc,REPLACE_VARIABLE_WITH_ATTRIBUTE, Replace Variable With Attribute Replace Variable With Attribute	N : int to n : int in method public findBridges() : List<Integer> from class BridgesAdjacencyList
cd60b805aa117460388dd0902a8bce11017ada39,RENAME_CLASS, Rename Class Rename Class	DeterminantLaplaceExpansion renamed to MatrixDeterminantLaplaceExpansion
